class UmpleToJava {
    association_SetOptionalOneToMandatoryMany <<!<</*association_SetOptionalOneToMandatoryMany*/>>
  <<#if (model.isDebugMode()) {
    Method g_method = new Method("public", gen.translate("setMethod",av), "Boolean", false);
    MethodParameter g_param1 = new MethodParameter(gen.translate("parameterOne",av), gen.translate("type",av), "", "", false);
    g_method.addMethodParameter(g_param1);
    debugAutogeneratedMethod(g_method, uClass, model);
  }#>>
  public boolean <<=gen.translate("setMethod",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    //
    // This source of this source generation is association_SetOptionalOneToMandatoryMany.jet
    // This set file assumes the generation of a maximumNumberOfXXX method does not exist because 
    // it's not required (No upper bound)
    //   
    boolean wasSet = false;
    <<=gen.translate("type",av)>> <<=gen.translate("parameterExisting",av)>> = <<=gen.translate("associationOne",av)>>;

    if (<<=gen.translate("parameterExisting",av)>> == null)
    {
      if (<<=gen.translate("parameterOne",av)>> != null)
      {
        if (<<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("addMethod",av)>>(<<=self>>))
        {
          <<=gen.translate("parameterExisting",av)>> = <<=gen.translate("parameterOne",av)>>;
          wasSet = true;
        }
      }
    } 
    else if (<<=gen.translate("parameterExisting",av)>> != null)
    {
      if (<<=gen.translate("parameterOne",av)>> == null)
      {
        if (<<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("minimumNumberOfMethod",av)>>() < <<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("numberOfMethod",av)>>())
        {
          <<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("removeMethod",av)>>(<<=self>>);
          <<=gen.translate("parameterExisting",av)>> = <<=gen.translate("parameterOne",av)>>;  // <<=gen.translate("parameterOne",av)>> == null
          wasSet = true;
        }
      } 
      else
      {
        if (<<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("minimumNumberOfMethod",av)>>() < <<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("numberOfMethod",av)>>())
        {
          <<=gen.translate("parameterExisting",av)>>.<<=gen.relatedTranslate("removeMethod",av)>>(<<=self>>);
          <<=gen.translate("parameterOne",av)>>.<<=gen.relatedTranslate("addMethod",av)>>(<<=self>>);
          <<=gen.translate("parameterExisting",av)>> = <<=gen.translate("parameterOne",av)>>;
          wasSet = true;
        }
      }
    }
    if (wasSet)
    {
      <<=gen.translate("associationOne",av)>> = <<=gen.translate("parameterExisting",av)>>;
    }
    return wasSet;
  }
  !>>
}
