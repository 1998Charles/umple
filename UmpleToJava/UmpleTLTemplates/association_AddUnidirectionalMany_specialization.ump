class UmpleToJava {
    association_AddUnidirectionalMany_specialization <<!<</*association_AddUnidirectionalMany_specialization*/>>
  <<#if (model.isDebugMode()) {
    Method g_method = new Method("public", gen.translate("removeMethod",av), "Boolean", false);
    MethodParameter g_param1 = new MethodParameter(gen.translate("parameterOne",av), gen.translate("type",av), "", "", false);
    g_method.addMethodParameter(g_param1);
    debugAutogeneratedMethod(g_method, uClass, model);
  }#>>
  public boolean <<=gen.translate("removeMethod",av)>>(<<=gen.translate("type",av)>> <<=gen.translate("parameterOne",av)>>)
  {
    boolean wasRemoved = false;
    <<# if (customAddPrefixCode != null) { #>>
    List<<<=gen.translate("type",av)>>> <<=gen.translate("associationMany",av)>> = <<=gen.translate("getManyMethod",av)>>_<<=gen.translate("type",av)>>();
    <<# } #>>
    <<# if (customRemovePrefixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customRemovePrefixCode,gen.translate("removeMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePrefixCode, "    ")); } #>>
    if (<<=gen.translate("getMethod",av)>>().contains(<<=gen.translate("parameterOne",av)>>))
    {<<#for( TraceItem traceItemAssocRemove : traceItemAssocRemoves )#>><<= 
(traceItemAssocRemove!=null&&traceItemAssocRemove.getIsPre()?"\n"+traceItemAssocRemove.trace(gen, av,"as_r", uClass,gen.translate("numberOfMethod",av)+"()"):"")
>>
      wasRemoved = super.<<=gen.translate("removeMethod",av)>>(<<=gen.translate("parameterOne",av)>>);<<#for( TraceItem traceItemAssocRemove : traceItemAssocRemoves )#>><<= 
(traceItemAssocRemove!=null&&traceItemAssocRemove.getIsPost()?"\n"+traceItemAssocRemove.trace(gen, av,"as_r", uClass,gen.translate("numberOfMethod",av)+"()"):"")
>>
    }
    <<# if (customRemovePostfixCode != null) { addUncaughtExceptionVariables(realSb.toString().split("\\n").length,customRemovePostfixCode,gen.translate("removeMethod",av)); 
    append(realSb, "\n{0}",GeneratorHelper.doIndent(customRemovePostfixCode, "    ")); } #>>
    return wasRemoved;
  }
!>>
}
