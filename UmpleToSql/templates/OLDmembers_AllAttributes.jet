<%@ jet package="cruise.umple.ignore" class="Ignore" %>
<%
{

/*
This file generates Sql attributes for a given class. Once all the attributes have been defined, it converts the Umple Key into the Sql Primary Key for the table. 
NOTE: At the beginning of this file the existance of the Primary Key is checked for. This REALLY should be done somewhere else, such as in the prepare() method in the Sql generator class. Putting it here WILL cause errors since the associated class' primary key might not be valid/known yet.
I created a resolvePrimaryKeys(UmpleClass aClass) method in the Sql generator that can determine the correct Primary Key. Howver this method is not yet used since it is rather inefficient.
*/

  appendln(stringBuffer, "");
  appendln(stringBuffer, "");
  appendln(stringBuffer, "  /*------------------------*/");
  appendln(stringBuffer, "  /* MEMBER VARIABLES       */");
  append(stringBuffer, "  /*------------------------*/");

  isFirst = true;
  for(Attribute av : uClass.getAttributes())
  {
    if (av.isConstant())
    {
      continue;
    }
    if (isFirst)
    {
      appendln(stringBuffer, "");
      appendln(stringBuffer, "");
      appendln(stringBuffer,"  /*{0} Attributes*/", gen.translate("type", uClass));      
      isFirst = false;
    }
    
    String type = gen.translate("type",av);
    String attribute = gen.translate("attributeOne",av);
    if (av.getIsList())
    {
      attribute = gen.translate("attributeMany",av);
      type = StringFormatter.format("List<{0}>",gen.translate("typeMany",av));
    }
    
    append(stringBuffer, "  {0} {1}", attribute, type);
    
    if (av.getIsAutounique())
    {
   	  append(stringBuffer, " AUTO_INCREMENT");
    }
    if (gen.translate("parameterValue",av).compareToIgnoreCase("null") != 0)
    {
   	  append(stringBuffer, " DEFAULT '{0}'", gen.translate("parameterValue",av));
    }
    /* Unique not implemented yet.
    if (av.getIsUnique())
    {
   	  append(stringBuffer, " UNIQUE");
    }
    */
        
    appendln(stringBuffer, ",");
  }
  
  
  //Primary Key Generation
  String tKey = "";
   
  //Check for Primary Key
  if (uClass.getKey().getMembers().length == 0)
  {
    //Make first attribute of class into the key.
    if (uClass.numberOfAttributes() > 0)
    {
      tKey = uClass.getAttribute(0).getName();
    }
    else if (uClass.numberOfAssociations() > 0)
    {
      tKey = "/*[Association]*/";
    }
    else
    {
      /*ERROR: Cannot create empty Sql table*/
    }
  	appendln(stringBuffer, "  /*Warning: No Primary Key specified*/");
  }
  else
  {
    for(String key : uClass.getKey().getMembers())
    {
      if (uClass.getAttribute(key) != null)
      {
        if (uClass.getAttribute(key).isConstant()) //Check if the given key is a constant.
        {
          tKey += "/*Warning: Constant attribute in Primary Key*/ ";
        }
        tKey += StringFormatter.toUnderscore(key) + ", ";
      }
      else
      {
        tKey += "/*Unknown entity in Primary Key*/, ";
      }
    }
    //Remove trailing comma
    tKey = tKey.substring(0, tKey.length()-2);
  }
  
  appendln(stringBuffer, "  PRIMARY KEY({0}),", tKey);
  
}
%>