<%@ jet package="cruise.umple.ignore" class="Ignore" %>
<%
{
  appendln(stringBuffer, "");
  appendln(stringBuffer, "");
  appendln(stringBuffer, "  /*------------------------*/");
  appendln(stringBuffer, "  /* MEMBER VARIABLES       */");
  append(stringBuffer, "  /*------------------------*/");

  //Check for Primary Key
  boolean noKey = false;
  String genKeyName = gen.translate("type", uClass) + "_id";
  if (uClass.getKey().getMembers().length == 0)
  {
  	noKey = true;
  }

  isFirst = true;
  for(Attribute av : uClass.getAttributes())
  {
    if (av.isConstant())
    {
      continue;
    }
    if (isFirst)
    {
      appendln(stringBuffer, "");
      appendln(stringBuffer, "");
      appendln(stringBuffer,"  /*{0} Attributes*/", gen.translate("type", uClass));      
      if (noKey)
      {
        appendln(stringBuffer, "  /*Warning: No Primary Key specified. {0} was generated.*/", genKeyName);
        appendln(stringBuffer, "  {0} INT AUTO_INCREMENT,", genKeyName);
      }
      isFirst = false;
    }
    
    String type = gen.translate("type",av);
    String attribute = gen.translate("attributeOne",av);
    if (av.getIsList())
    {
      attribute = gen.translate("attributeMany",av);
      type = StringFormatter.format("List<{0}>",gen.translate("typeMany",av));
    }
    
    append(stringBuffer, "  {0} {1}", attribute, type);
    
    if (av.getIsAutounique())
    {
   	  append(stringBuffer, " AUTO_INCREMENT");
    }
    else if (gen.translate("parameterValue",av).compareToIgnoreCase("null") != 0)
    {
   	  append(stringBuffer, " DEFAULT '{0}'", gen.translate("parameterValue",av));
    }
        
    appendln(stringBuffer, ",");
  }
  
  
  //Primary Key Generation
  if (!noKey)
  {
  	String tKey = "";
  	for(String key : uClass.getKey().getMembers())
  	{
  	  if (uClass.getAttribute(key) == null) //Check if the given key is a constant.
  	  {
  	    tKey += "/*Warning: Constant attribute in Primary Key*/ ";
  	  }
	  tKey += StringFormatter.toUnderscore(key) + ", ";
  	}
  	//Remove trailing comma
  	tKey = tKey.substring(0, tKey.length()-2);
  	appendln(stringBuffer, "  PRIMARY KEY({0}),", tKey);
  }
  else
  {
  	appendln(stringBuffer, "  PRIMARY KEY({0}),", genKeyName);
  }
}
%>