namespace usecase.startup;

class Controller
{
	depend java.sql.Connection;
	depend java.sql.DriverManager;
    depend javax.swing.JOptionPane;
    
    depend usecase.openPoll.OpenPollController;
    depend usecase.addElection.AddElectionController;
    
    Connection theConnection=null;
    
    String server;
    String username;
    String password;
    
    boolean isConnected=false;
    int option=JOptionPane.NO_OPTION;
    Object mainMenuOption="Quit";

    void tryToConnect()
    {
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			theConnection = DriverManager.getConnection(server, username, password);
			
			isConnected=true;;
		} catch(Exception e) {
			System.err.println("Exception: " + e.getMessage());
			isConnected=false;
		}
    }
    
    void showMainMenu()
    {
    	String[] selectionValues={"Open Poll", "Add Election", "Quit"};
		String defaultSelection = "Open Poll";
		mainMenuOption = JOptionPane.showInputDialog(null, "Select a task", "Main Menu", JOptionPane.QUESTION_MESSAGE, null, selectionValues, defaultSelection);
    }
    
    status {
      Connecting {
      	  entry / {tryToConnect();}
          [isConnected] -> Connected;
          [!isConnected] -> Failed;
      }
      Connected {
      	entry / {showMainMenu();}
      	[mainMenuOption.equals("Open Poll")] -> PollOpening;
      	[mainMenuOption.equals("Add Election")] -> ElectionAdding;
      }
      Failed {
      	entry / {option=JOptionPane.showConfirmDialog(null, "Connection Failed! Retry?", "Error!", JOptionPane.YES_NO_OPTION);}
      	[option==JOptionPane.YES_OPTION] -> Connecting;
      }
      PollOpening {
      	entry / {OpenPollController.getInstance().setTheConnection(theConnection);OpenPollController.getInstance().openPoll();}
      }
      ElectionAdding {
      	entry / {/*AddElectionController.getInstance().setTheConnection(theConnection);*/AddElectionController.getInstance().addElection();}
      }
}
}