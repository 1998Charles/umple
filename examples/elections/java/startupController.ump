namespace usecase.startup;

class Controller
{
	depend java.sql.Connection;
	depend java.sql.DriverManager;
    depend java.sql.SQLException;
    depend javax.swing.JOptionPane;
    
    depend usecase.openPoll.OpenPollController;
    
    Connection theConnection=null;
    
    String server;
    String username;
    String password;
    
    boolean isConnected=false;
    int option=JOptionPane.NO_OPTION;
    Object mainMenuOption="Quit";

    boolean tryToConnect()
    {
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			theConnection = DriverManager.getConnection(server, username, password);
		} catch(Exception e) {
			System.err.println("Exception: " + e.getMessage());
			return false;
		}
		
		return true;
    }
    
    void showMainMenu()
    {
    	String[] selectionValues={"Open Poll", "Quit"};
		String defaultSelection = "Open Poll";
		mainMenuOption = JOptionPane.showInputDialog(null, "Select a task", "Main Menu", JOptionPane.QUESTION_MESSAGE, null, selectionValues, defaultSelection);
    }
    
    status {
      Initial {
      	connect -> Connecting;
      	do {connect();}
      }
      Connecting {
      	  entry / {isConnected=tryToConnect();}
          [isConnected] connected -> Connected;
          [!isConnected] notConnected -> Failed;
      	  do
      	  {
      	  	connected();
      	  	notConnected();
          }
      }
      Connected {
      	entry / {showMainMenu();}
      	[mainMenuOption.equals("Open Poll")] openPoll -> PollOpening;
      	do
      	{
      		openPoll();
      	}
      }
      Failed {
      	entry / {option=JOptionPane.showConfirmDialog(null, "Connection Failed! Retry?", "Error!", JOptionPane.YES_NO_OPTION);}
      	[option==JOptionPane.YES_OPTION] retry -> Initial;
      	[option==JOptionPane.NO_OPTION] cancel -> Closed;
		do
		{
			retry();
			cancel();
		}
      }
      PollOpening {
      	entry / {OpenPollController.getInstance().openPoll(theConnection);}
      }
  }
}