/*

Copyright 2010 Andrew Forward, Omar Badreddin, Timothy C. Lethbridge

This file is made available subject to the open source license found at:
http://cruise.site.uottawa.ca/UmpleMITLicense.html

The tracing meta model.

It currently only supports tracing of attributes, but we are currently in the process
of enhancing the Umple syntax and meta model to support richer trace objects.

*/

namespace cruise.umple.compiler;

class UmpleModel
{
	String traceType = "Console"; 
}

class TraceCondition
{
	// condition may be where, until or after
	conditionType = null;
	lhs = null;
	0..1 -> 1 ConditionRhs rhs;
}

class ConditionRhs
{
	rhs = null;
	comparisonOperator = null;
}

class MethodTraceEntity
{
	name = null;
	boolean entry = false;
	boolean exit = false;
}

class TraceDirective
{
	Integer id = 0;
  	0..1 -> 0..* TraceCondition condition;
 	Integer forClause = 0;
 	periodClause = null;
 	duringClause = null;
 	executeClause = null;
 	0..* -- 0..* Attribute;
 	0..* -- 0..* MethodTraceEntity;
 	0..1 -- 0..1 AssociationVariable;
}

class TraceCase
{
	name = null;
	0..* -- 0..* TraceDirective;
}

class UmpleClass
{
	0..1 -- * TraceDirective;
	0..1 -- * TraceCase;
}

use Trace_Code.ump;