/*

Copyright 2010 Andrew Forward, Omar Badreddin, Timothy C. Lethbridge

This file is made available subject to the open source license found at:
http://cruise.site.uottawa.ca/UmpleMITLicense.html

This is our internal parser implementation for the Umple language.  It uses
a generic Parser that can read an external EBNF grammar file, and then populate
an abstract syntax tree.

The work of the UmpleInternalParser is 

a) The grammar definition (defined externally in *.grammar files)
b) Analyzing the AST to populate an Umple meta model instance
c) Delegating to our code generator to produce the necessary artifacts (i.e. Java / PHP / Ruby code)

Please refer to UmpleInternalParser_Code.ump for implementation details.

*/

class UmpleInternalParser
{
  isA UmpleParser;
  isA Parser;
  depend java.io.*;
  depend cruise.umple.util.*;
  currentPackageName = "";
  UmpleModel model;

  after setModel{if(model !=null && model.getUmpleFile() != null) { super.setFilename(model.getUmpleFile().getFileName()); super.setRootToken(reset());}}
}

class Pair
{
  name;
  value;
}

use UmpleParser.ump;
use Parser.ump;
use Umple.ump;
use UmpleDiagram.ump;
use StateMachine.ump;
use UmpleInternalParser_Code.ump;