/*
Copyright: All contributers to the Umple Project.

This file is made available subject to the open source license found at:
http://umple.org/license

This file analyzses require statement tokens to populate Requiregraph for Umple model.

Please refer to UmpleInternalParser.ump for more details.
*/

class UmpleInternalParser
{
  depend cruise.umple.compiler.*;
   
  public void analyzeRequireStatement(Token t, int analysisStep)
  {
    if (analysisStep != 2)
    {
      shouldProcessAgain = shouldProcessAgain || (analysisStep == 1);
      return;
    }    
    if (t.is("requireStatement"))
    {
      boolean notFlag = false;
      boolean optFlag = false;
       
      String tokenString = t.toString();
      for (Token token: t.getSubTokens())
      {
      
        String tokenName= token.getName();
        if(tokenName.equals("not"))
        {
          notFlag=true;
        }
        else if(tokenName.equals("opt"))
        {
          optFlag= true;
        }
         else if(tokenName.equals("requireTerminal"))
        {
         String mixsetName = token.getValue("targetMixsetName");
        /*
         if (notFlag)
         {}
         if (optFlag)
         {}
         */
         optFlag=false; notFlag=false;
        }
        else if(tokenName.equals("requireLinkingOp"))
        {
        
        }
      }
      //List<Token> subTokens = t.getSubTokens();
      
      
      String mixsetName = t.getValue("targetMixsetName");
      Mixset mixset = model.getMixset(mixsetName);
       if(mixset != null)
       {
       }
      
    }
  }
}
