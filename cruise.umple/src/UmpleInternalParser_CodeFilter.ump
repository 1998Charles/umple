/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

This file analyzses trace related tokens to populate the Umple meta model for
traces.

Please refer to UmpleInternalParser.ump for more details.

 */

namespace cruise.umple.compiler;

class UmpleInternalParser
{

  //------------------------------------------
  //----------  Diagram analysis Code  -------
  //------------------------------------------

  private void analyzeFilterToken(Token token, int analysisStep)
  {
    if (analysisStep == 1)
    {
      shouldProcessAgain = true;
    }
    else if (analysisStep == 2)
    {
      if(token.is("filter"))
      {
        String name = token.getValue("name");
        Filter f = new Filter(name);
        for(int i=0; i<token.numberOfSubTokens(); i++)
        {
          if(token.getSubToken(i).getValue()!=null)
          {
            Token nt = token.getSubToken(i);
            for(int j=0; j<nt.numberOfSubTokens();j++)
              {
                if(nt.getSubToken(j).getValue("classname")!=null)
                  {
                    // TODO, the filter should have direct *->* connections to classes, not
                    // simply their names
                    String aValue = nt.getSubToken(j).getValue("classname");
                    f.addValue(aValue);
                  }
              }

          }
        }
        model.setFilter(f);
      }
    }
  }
}
