/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

namespace example{
#include "Garage.h"


  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Garage State Machines
  enum GarageDoor { Closed, Opening }
  private GarageDoor GarageDoor;
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 Garage::Garage()
  {
    setGarageDoor(GarageDoor.Closed);
  }
  
  //------------------------
  // COPY CONSTRUCTOR
  //------------------------

 Garage::Garage(const Garage & garage)
  {  }
  	
  //------------------------
  // Operator =
  //------------------------

 Garage Garage::operator=(const Garage & garage)
  {  }

  //------------------------
  // INTERFACE
  //------------------------

  String Garage::getGarageDoorFullName()
  {
    String answer = GarageDoor.toString();
    return answer;
  }

  GarageDoor Garage::getGarageDoor()
  {
    return GarageDoor;
  }

  bool Garage::pressButton()
  {
    boolean wasEventProcessed = false;

    switch (GarageDoor)
    {
      case Closed:
        turnLightOn();
        setGarageDoor(GarageDoor.Opening);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  private void Garage::setGarageDoor(GarageDoor aGarageDoor)
  {
    GarageDoor = aGarageDoor;
  }

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
Garage::~Garage()
  {}

}