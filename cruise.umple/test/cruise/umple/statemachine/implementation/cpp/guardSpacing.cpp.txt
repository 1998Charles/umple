/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

namespace example{
#include "Garage.h";

  

  //Garage State Machines
  enum GarageDoor { Open, Closing }
  private GarageDoor GarageDoor;
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 Garage::Garage(const bool& aEntranceClear)
  {
    entranceClear = aEntranceClear;
    setGarageDoor(GarageDoor.Open);
  }

  //------------------------
  // INTERFACE
  //------------------------

  bool Garage::setEntranceClear(bool& aEntranceClear)
  {
    bool wasSet = false;
    entranceClear = aEntranceClear;
    wasSet = true;
    return wasSet;
  }

  bool Garage::getEntranceClear()
  {
    return entranceClear;
  }

  public String getGarageDoorFullName()
  {
    String answer = GarageDoor.toString();
    return answer;
  }

  public GarageDoor getGarageDoor()
  {
    return GarageDoor;
  }

  public boolean pressButton()
  {
    boolean wasEventProcessed = false;

    switch (GarageDoor)
    {
      case Open:
        if (getEntranceClear())
        {
          setGarageDoor(GarageDoor.Closing);
          wasEventProcessed = true;
          break;
        }
        break;
    }

    return wasEventProcessed;
  }

  private void setGarageDoor(GarageDoor aGarageDoor)
  {
    GarageDoor = aGarageDoor;
  }

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
Garage::~Garage()
  {}

}