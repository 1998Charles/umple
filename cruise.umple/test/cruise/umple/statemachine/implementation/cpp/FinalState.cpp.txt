/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

#include "Mentor.h"

	
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 Mentor::Mentor()
  {
    setStatus(Status.Ok);
  }
  
  //------------------------
  // COPY CONSTRUCTOR
  //------------------------

 Mentor::Mentor(const Mentor & mentor)
  {  }
  	
  //------------------------
  // Operator =
  //------------------------

 Mentor Mentor::operator=(const Mentor & mentor)
  {  }

  //------------------------
  // INTERFACE
  //------------------------

  String Mentor::getStatusFullName()
  {
    String answer = status.toString();
    return answer;
  }

  Status Mentor::getStatus()
  {
    return status;
  }

  bool Mentor::flip()
  {
    boolean wasEventProcessed = false;

    switch (status)
    {
      case Ok:
        setStatus(Status.Final);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  private void Mentor::setStatus(Status aStatus)
  {
    status = aStatus;
  }

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
Mentor::~Mentor()
  {}
