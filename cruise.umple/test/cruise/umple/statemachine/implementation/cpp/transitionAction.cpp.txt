/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

package example;

class Course
{
  private:

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Course State Machines
  enum Status { Open }
  private Status status;

  //------------------------
  // CONSTRUCTOR
  //------------------------
  public:

 Course::Course()
  {
    setStatus(Status.Open);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public String getStatusFullName()
  {
    String answer = status.toString();
    return answer;
  }

  public Status getStatus()
  {
    return status;
  }

  public boolean register()
  {
    boolean wasEventProcessed = false;

    switch (status)
    {
      case Open:
        System.out.println("transition");
        setStatus(Status.Open);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  private void setStatus(Status aStatus)
  {
    status = aStatus;
  }

  public void delete()
  {}

};