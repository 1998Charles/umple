/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

namespace example{
#include "LightFixture.h";

  

  //LightFixture State Machines
  enum Light { On, Off }
  private Light light;
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 LightFixture::LightFixture()
  {
    setLight(Light.On);
  }
  
  //------------------------
  // COPY CONSTRUCTOR
  //------------------------

 LightFixture::LightFixture(const LightFixture & lightfixture)
  {  }


  //------------------------
  // INTERFACE
  //------------------------

  String LightFixture::getLightFullName()
  {
    String answer = light.toString();
    return answer;
  }

  Light LightFixture::getLight()
  {
    return light;
  }

  bool LightFixture::flip()
  {
    boolean wasEventProcessed = false;

    switch (light)
    {
      case On:
        setLight(Light.Off);
        wasEventProcessed = true;
        break;
      case Off:
        setLight(Light.On);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  private void LightFixture::setLight(Light aLight)
  {
    light = aLight;
  }

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
LightFixture::~LightFixture()
  {}

}