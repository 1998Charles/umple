/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.12.0.176 modeling language!*/

package example;

public class Lamp
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Lamp State Machines
  enum Status { On, Off }
  private Status status;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Lamp()
  {
    setStatus(Status.On);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public String getStatusFullName()
  {
    String answer = status.toString();
    return answer;
  }

  public Status getStatus()
  {
    return status;
  }

  public boolean press()
  {
    boolean wasEventProcessed = false;

    switch (status)
    {
      case On:
        setStatus(Status.Off);
        wasEventProcessed = true;
        break;
      case Off:
        setStatus(Status.On);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  private void setStatus(Status aStatus)
  {
    status = aStatus;

    // entry actions and do activities
    switch(status)
    {
      case On:
        new DoActivityThread(this,"doActivityStatusOn");
        break;
      case Off:
        new DoActivityThread(this,"doActivityStatusOff");
        break;
    }
  }

  private void doActivityStatusOn() throws InterruptedException
  {
    alsoDo();
  }

  private void doActivityStatusOff() throws InterruptedException
  {
    keepDoing();
  }

  private static class DoActivityThread extends Thread
  {
    Lamp controller;
    String doActivityMethodName;
    
    public DoActivityThread(Lamp aController,String aDoActivityMethodName)
    {
      controller = aController;
      doActivityMethodName = aDoActivityMethodName;
      start();
    }
    
    public void run()
    {
      try
      {
        if ("doActivityStatusOn".equals(doActivityMethodName))
        {
          controller.doActivityStatusOn();
        }
        else if ("doActivityStatusOff".equals(doActivityMethodName))
        {
          controller.doActivityStatusOff();
        }
      }
      catch (InterruptedException e)
      {
        e.printStackTrace();
      }
    }
  }

  public void delete()
  {}

}
