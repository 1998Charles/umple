-- This file is generated from concurrentMachineExample.ump --

 -- This defines a NuSMV module for State --
 MODULE State ( _stateA , _stateAA , _stateB , _stateBB , _stateBBS24 ) 

   -- This part declares input variables for the given NuSMV module --
   IVAR
     event : { ev_e2 , ev_e1 , ev_e5 , ev_e7 , ev_e11 , ev_e3 , ev_e9 , ev_e10 };
    
   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { State_s1 , State_s2 };
    
   -- This part defines macros that summarize the transitions of the given NuSMV module --
   DEFINE
     t1 := event = ev_e2 & _stateAA.state = StateAA_s11;
     t2 := event = ev_e1 & _stateAA.state = StateAA_s12;
     t3 := event = ev_e5 & _stateBB.state = StateBB_s21;
     t4 := event = ev_e7 & _stateBB.state = StateBB_s22;
     t5 := event = ev_e11 & _stateBB.state = StateBB_s22;
     t6 := event = ev_e1 & _stateBB.state = StateBB_s24;
     t7 := event = ev_e3 & _stateBB.state = StateBB_s24;
     t8 := event = ev_e9 & _stateBBS24.state = StateBBS24_s31;
     t9 := event = ev_e10 & _stateBBS24.state = StateBBS24_s31;
  
   -- This part defines the transitions from states to states for the given NuSMV module --
   ASSIGN
     init( state ) := State_s1;
     next( state ) := case
       t4 | t3 | t8 | t1 | t7 | t5 | t9 : State_s1;
       t2 | t6 : State_s2;
       TRUE : state;
     esac;
 
   
 -- This defines a NuSMV module for StateA --
 MODULE StateA ( _state , _stateAA , _stateB , _stateBB , _stateBBS24 ) 

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { StateA_A , null };
    
   -- This part defines the transitions from states to states for the given NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _state.t1 : StateA_A;
       _state.t2 | _state.t6 : null;
       _state.state = State_s1 : StateA_A;
       TRUE : state;
     esac;
 
   
 -- This defines a NuSMV module for StateAA --
 MODULE StateAA ( _state , _stateA , _stateB , _stateBB , _stateBBS24 ) 

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { StateAA_s11 , StateAA_s12 , null };
    
   -- This part defines the transitions from states to states for the given NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _state.t1 : StateAA_s12;
       _state.t2 | _state.t4 | _state.t6 | _state.t8 | _state.t3 | _state.t5 | _state.t7 | _state.t9 : null;
       _stateA.state = StateA_A : StateAA_s11;
       TRUE : state;
     esac;
 
   
 -- This defines a NuSMV module for StateB --
 MODULE StateB ( _state , _stateA , _stateAA , _stateBB , _stateBBS24 ) 

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { StateB_B , null };
    
   -- This part defines the transitions from states to states for the given NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _state.t4 | _state.t3 | _state.t8 | _state.t7 | _state.t5 | _state.t9 : StateB_B;
       _state.t2 | _state.t6 : null;
       _state.state = State_s1 : StateB_B;
       TRUE : state;
     esac;
 
   
 -- This defines a NuSMV module for StateBB --
 MODULE StateBB ( _state , _stateA , _stateAA , _stateB , _stateBBS24 ) 

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { StateBB_s21 , StateBB_s22 , StateBB_s24 , null };
    
   -- This part defines the transitions from states to states for the given NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _state.t4 | _state.t7 : StateBB_s21;
       _state.t3 : StateBB_s22;
       _state.t8 | _state.t5 | _state.t9 : StateBB_s24;
       _state.t2 | _state.t1 | _state.t6 : null;
       _stateB.state = StateB_B : StateBB_s21;
       TRUE : state;
     esac;
 
   
 -- This defines a NuSMV module for StateBBS24 --
 MODULE StateBBS24 ( _state , _stateA , _stateAA , _stateB , _stateBB ) 

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { StateBBS24_s31 , StateBBS24_s32 , null };
    
   -- This part defines the transitions from states to states for the given NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _state.t5 | _state.t8 : StateBBS24_s31;
       _state.t9 : StateBBS24_s32;
       _state.t1 | _state.t3 | _state.t6 | _state.t2 | _state.t4 | _state.t7 : null;
       _stateBB.state = StateBB_s24 : StateBBS24_s31;
       TRUE : state;
     esac;
 
   
 -- This defines a NuSMV module for main --
 MODULE main

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : State( stateA , stateAA , stateB , stateBB , stateBBS24 );
     stateA : StateA( state , stateAA , stateB , stateBB , stateBBS24 );
     stateAA : StateAA( state , stateA , stateB , stateBB , stateBBS24 );
     stateB : StateB( state , stateA , stateAA , stateBB , stateBBS24 );
     stateBB : StateBB( state , stateA , stateAA , stateB , stateBBS24 );
     stateBBS24 : StateBBS24( state , stateA , stateAA , stateB , stateBB );
    
   CTLSPEC   EF  ( state.state = State_s1 )
   CTLSPEC   EF  ( state.state = State_s2 )
   CTLSPEC   EF  ( stateA.state = StateA_A )
   CTLSPEC   EF  ( stateAA.state = StateAA_s11 )
   CTLSPEC   EF  ( stateAA.state = StateAA_s12 )
   CTLSPEC   EF  ( stateB.state = StateB_B )
   CTLSPEC   EF  ( stateBB.state = StateBB_s21 )
   CTLSPEC   EF  ( stateBB.state = StateBB_s22 )
   CTLSPEC   EF  ( stateBB.state = StateBB_s24 )
   CTLSPEC   EF  ( stateBBS24.state = StateBBS24_s31 )
   CTLSPEC   EF  ( stateBBS24.state = StateBBS24_s32 )