-- This file is generated from Test.ump --

-- PLEASE DO NOT EDIT THIS CODE --
-- This code was generated using the UMPLE @UMPLE_VERSION@ modeling language! --


-- This defines a NuSMV module for State --
MODULE State

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { State_newBooking , State_seatAssigned , State_checkedIn , State_cancelled , State_completed };
     event : { ev_assignSeat , ev_cancel , ev_checkIn , ev_complete , ev_null };

   -- This part defines macros that summarize the transitions and guards (if any) of the given NuSMV module --
   DEFINE
     state_stable :=  !( event = ev_assignSeat | event = ev_checkIn | event = ev_cancel | event = ev_complete );
     t1 := event = ev_assignSeat & state = State_newBooking;
     t2 := event = ev_cancel & state = State_newBooking;
     t3 := event = ev_cancel & state = State_seatAssigned;
     t4 := event = ev_checkIn & state = State_seatAssigned;
     t5 := event = ev_cancel & state = State_checkedIn;
     t6 := event = ev_complete & state = State_checkedIn;

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := State_newBooking;
     next( state ) := case
       t1 : State_seatAssigned;
       t4 : State_checkedIn;
       t3 | t2 | t5 : State_cancelled;
       t6 : State_completed;
       TRUE : state;
     esac;

   -- This part defines logic for the assignment of values to state variable "event" of this NuSMV module --
   ASSIGN
     init( event ) := ev_null;
     next( event ) := case
       state_stable : { ev_assignSeat , ev_cancel , ev_checkIn , ev_complete };
       TRUE : ev_null;
     esac;

-- This defines a NuSMV module for main --
MODULE main

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : State;
CTLSPEC   EF( state.state = State_newBooking )
CTLSPEC   EF( state.state = State_seatAssigned )
CTLSPEC   EF( state.state = State_checkedIn )
CTLSPEC   EF( state.state = State_cancelled )
CTLSPEC   EF( state.state = State_completed )
CTLSPEC   AG !( state.t1 & state.t2 )
CTLSPEC   AG !( state.t1 & state.t3 )
CTLSPEC   AG !( state.t1 & state.t4 )
CTLSPEC   AG !( state.t1 & state.t5 )
CTLSPEC   AG !( state.t2 & state.t3 )
CTLSPEC   AG !( state.t2 & state.t4 )
CTLSPEC   AG !( state.t2 & state.t5 )
CTLSPEC   AG !( state.t3 & state.t4 )
CTLSPEC   AG !( state.t3 & state.t5 )