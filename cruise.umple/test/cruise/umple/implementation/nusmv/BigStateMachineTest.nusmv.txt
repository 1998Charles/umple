-- This file is generated from BigStateMachineTest.ump --

-- PLEASE DO NOT EDIT THIS CODE --
-- This code was generated using the UMPLE @UMPLE_VERSION@ modeling language! --


-- This defines a NuSMV module for Sm --
MODULE Sm ( _smZxab , _smZxabZx , _smGe )

   -- This part declares input variables for the given NuSMV module --
   IVAR
     event : { ev_e5 , ev_e2 , ev_e3 , ev_e1 , ev_e4 };

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { Sm_Zxab , Sm_Da , Sm_Ge };

   -- This part defines macros that summarize the transitions and guards (if any) of the given NuSMV module --
   DEFINE
     t1 := event = ev_e5 & state = Sm_Da;
     t2 := event = ev_e2 & state = Sm_Da;
     t3 := event = ev_e5 & _smZxab.state = SmZxab_Aa;
     t4 := event = ev_e3 & _smZxab.state = SmZxab_Aa;
     t5 := event = ev_e1 & _smZxab.state = SmZxab_Aa;
     t6 := event = ev_e4 & _smZxab.state = SmZxab_Aa;
     t7 := event = ev_e3 & _smZxab.state = SmZxab_Ba;
     t8 := event = ev_e1 & _smZxab.state = SmZxab_Ba;
     t9 := event = ev_e4 & _smZxab.state = SmZxab_Ba;
     t10 := event = ev_e3 & _smZxabZx.state = SmZxabZx_Za;
     t11 := event = ev_e2 & _smZxabZx.state = SmZxabZx_Za;
     t12 := event = ev_e5 & _smZxabZx.state = SmZxabZx_Za;
     t13 := event = ev_e1 & _smZxabZx.state = SmZxabZx_Za;
     t14 := event = ev_e4 & _smZxabZx.state = SmZxabZx_Za;
     t15 := event = ev_e5 & _smZxabZx.state = SmZxabZx_Xa;
     t16 := event = ev_e1 & _smZxabZx.state = SmZxabZx_Xa;
     t17 := event = ev_e4 & _smZxabZx.state = SmZxabZx_Xa;
     t18 := event = ev_e1 & _smGe.state = SmGe_Ga;
     t19 := event = ev_e1 & _smGe.state = SmGe_Ea;
     t20 := event = ev_e2 & _smGe.state = SmGe_Ea;

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := Sm_Zxab;
     next( state ) := case
       t1 | t4 | t10 | t11 | t18 : Sm_Zxab;
       t3 : Sm_Da;
       t14 | t6 | t9 | t15 | t20 | t16 | t8 | t17 | t7 | t12 | t19 | t13 | t5 | t2 : Sm_Ge;
       TRUE : state;
     esac;

-- This defines a NuSMV module for SmZxab --
MODULE SmZxab ( _sm )

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { SmZxab_Zx , SmZxab_Aa , SmZxab_Ba , null };

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _sm.t10 | _sm.t1 : SmZxab_Zx;
       _sm.t11 : SmZxab_Aa;
       _sm.t4 | _sm.t18 : SmZxab_Ba;
       _sm.t3 | _sm.t6 | _sm.t8 | _sm.t12 | _sm.t14 | _sm.t16 | _sm.t19 | _sm.t2 | _sm.t5 | _sm.t7 | _sm.t9 | _sm.t13 | _sm.t15 | _sm.t17 | _sm.t20 : null;
       _sm.state = Sm_Zxab & state = null : SmZxab_Zx;
       TRUE : state;
     esac;

-- This defines a NuSMV module for SmZxabZx --
MODULE SmZxabZx ( _sm , _smZxab )

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { SmZxabZx_Za , SmZxabZx_Xa , null };

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _sm.t10 | _sm.t1 : SmZxabZx_Xa;
       _sm.t2 | _sm.t4 | _sm.t6 | _sm.t8 | _sm.t11 | _sm.t13 | _sm.t15 | _sm.t17 | _sm.t19 | _sm.t3 | _sm.t5 | _sm.t7 | _sm.t9 | _sm.t12 | _sm.t14 | _sm.t16 | _sm.t18 | _sm.t20 : null;
       _smZxab.state = SmZxab_Zx & state = null : SmZxabZx_Za;
       TRUE : state;
     esac;

-- This defines a NuSMV module for SmGe --
MODULE SmGe ( _sm )

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { SmGe_Ga , SmGe_Ea , null };

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := null;
     next( state ) := case
       _sm.t12 | _sm.t19 | _sm.t15 | _sm.t20 : SmGe_Ga;
       _sm.t16 | _sm.t8 | _sm.t13 | _sm.t5 | _sm.t2 : SmGe_Ea;
       _sm.t3 | _sm.t6 | _sm.t9 | _sm.t11 | _sm.t17 | _sm.t1 | _sm.t4 | _sm.t7 | _sm.t10 | _sm.t14 | _sm.t18 : null;
       _sm.state = Sm_Ge & state = null : SmGe_Ga;
       TRUE : state;
     esac;

-- This defines a NuSMV module for main --
MODULE main

   -- This part declares state variables for the given NuSMV module --
   VAR
     sm : Sm( smZxab , smZxabZx , smGe );
     smZxab : SmZxab( sm );
     smZxabZx : SmZxabZx( sm , smZxab );
     smGe : SmGe( sm );
CTLSPEC   EF( sm.state = Sm_Zxab )
CTLSPEC   EF( sm.state = Sm_Da )
CTLSPEC   EF( sm.state = Sm_Ge )
CTLSPEC   EF( smZxab.state = SmZxab_Zx )
CTLSPEC   EF( smZxab.state = SmZxab_Aa )
CTLSPEC   EF( smZxab.state = SmZxab_Ba )
CTLSPEC   EF( smZxabZx.state = SmZxabZx_Za )
CTLSPEC   EF( smZxabZx.state = SmZxabZx_Xa )
CTLSPEC   EF( smGe.state = SmGe_Ga )
CTLSPEC   EF( smGe.state = SmGe_Ea )