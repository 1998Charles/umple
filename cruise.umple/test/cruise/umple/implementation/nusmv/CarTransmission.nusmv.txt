-- This file is generated from CarTransmission.ump --

MODULE State_Handle
  
  VAR 
    event : { selectReverse , selectDrive , selectFirst , selectSecond , selectNeutral , reachSecondSpeed , reachThirdSpeed , dropBelowSecondSpeed , dropBelowThirdSpeed };  
    
  
MODULE State( stateDrive , handle )
  
  VAR 
    state_state : { state_neutral , state_reverse , state_drive };  
    
  ASSIGN
    init(state_state) := state_neutral;  
  
  TRANS
    ( (state_state = state_neutral) -> (
      (handle.event = selectReverse & next(state_state) = state_reverse)  |
      (handle.event = selectDrive & next(state_state) = state_drive)  |
      (handle.event = selectFirst & next(stateDrive.stateDrive_state) = stateDrive_first)  |
      (handle.event = selectSecond & next(stateDrive.stateDrive_state) = stateDrive_second)  ) ) &
    ( (state_state = state_reverse) -> (
       handle.event = selectNeutral & next(state_state) = state_neutral) ) &
    ( (state_state = state_drive) -> ( next(stateDrive.stateDrive_state) = stateDrive_first) )
  
MODULE StateDrive( state , handle )
  
  VAR 
    stateDrive_state : { stateDrive_first , stateDrive_second , stateDrive_third , null };  
    
  ASSIGN
    init(stateDrive_state) := null;  
  
  TRANS
    ( (stateDrive_state = stateDrive_first) -> (
      (handle.event = reachSecondSpeed & next(stateDrive_state) = stateDrive_second)  |
      (handle.event = selectNeutral & next(state.state_state) = state_neutral & next(stateDrive_state) = null)  |
      (handle.event = selectFirst & next(stateDrive_state) = stateDrive_first)  |
      (handle.event = selectSecond & next(stateDrive_state) = stateDrive_second)  ) ) &
    ( (stateDrive_state = stateDrive_second) -> (
      (handle.event = reachThirdSpeed & next(stateDrive_state) = stateDrive_third)  |
      (handle.event = dropBelowSecondSpeed & next(stateDrive_state) = stateDrive_first)  |
      (handle.event = selectNeutral & next(state.state_state) = state_neutral & next(stateDrive_state) = null)  |
      (handle.event = selectFirst & next(stateDrive_state) = stateDrive_first)  |
      (handle.event = selectSecond & next(stateDrive_state) = stateDrive_second)  ) ) &
    ( (stateDrive_state = stateDrive_third) -> (
      (handle.event = dropBelowThirdSpeed & next(stateDrive_state) = stateDrive_second)  |
      (handle.event = selectNeutral & next(state.state_state) = state_neutral & next(stateDrive_state) = null)  |
      (handle.event = selectFirst & next(stateDrive_state) = stateDrive_first)  |
      (handle.event = selectSecond & next(stateDrive_state) = stateDrive_second)  ) )
  
MODULE main
  
  VAR 
    handle : State_Handle;
    state : State( stateDrive , handle );
    stateDrive : StateDrive( state , handle ); 