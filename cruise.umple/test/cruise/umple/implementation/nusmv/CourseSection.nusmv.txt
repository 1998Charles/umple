-- This file is generated from CourseSection.ump --

MODULE Status
  
  VAR 
    event : { cancel , openRegistration , requestToRegister , closeRegistration , classSizeExceedsMinimum , classSizeExceedsMaximum }; 
    status_state : { status_Planned , status_OpenNotEnoughStudents , status_OpenEnoughStudents , status_Cancelled , status_Closed };  
    
  ASSIGN
    init(status_state) := status_Planned;  
  
  TRANS
    ( (status_state = status_Planned) -> (
      (event = cancel & next(status_state) = status_Cancelled )  |
      (event = openRegistration & next(status_state) = status_OpenNotEnoughStudents )  ) ) &
    ( (status_state = status_OpenNotEnoughStudents) -> (
      (event = requestToRegister & next(status_state) = status_OpenNotEnoughStudents )  |
      (event = closeRegistration & next(status_state) = status_Cancelled )  |
      (event = cancel & next(status_state) = status_Cancelled )  |
      (event = classSizeExceedsMinimum & next(status_state) = status_OpenEnoughStudents )  ) ) &
    ( (status_state = status_OpenEnoughStudents) -> (
      (event = cancel & next(status_state) = status_Cancelled )  |
      (event = requestToRegister & next(status_state) = status_OpenEnoughStudents )  |
      (event = closeRegistration & next(status_state) = status_Closed )  |
      (event = classSizeExceedsMaximum & next(status_state) = status_Closed )  ) ) &
    ( (status_state = status_Closed) -> (
       event = cancel & next(status_state) = status_Cancelled ) ) &
    ( (status_state = status_Cancelled) -> ( next(status_state) = status_state ) )
  
MODULE main
  
  VAR 
    status : Status; 