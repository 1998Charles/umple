-- This file is generated from myTemporaryTest.ump --

MODULE Sm_Handle
  
  VAR 
    event : { e1 , e2 , e3 };  
    
  
MODULE Sm( smS2 , handle )
  
  VAR 
    sm_state : { sm_s1 , sm_s2 };  
    
  ASSIGN
    init(sm_state) := sm_s1;  
  
  TRANS
    ( (sm_state = sm_s1) -> (
      (handle.event = e1 & next(sm_state) = sm_s2)  |
      (handle.event = e2 & next(smS2.smS2_state) = smS2_s2b)  ) ) &
    ( (sm_state = sm_s2) -> ( next(smS2.smS2_state) = smS2_s2a) )
  
MODULE SmS2( sm , handle )
  
  VAR 
    smS2_state : { smS2_s2a , smS2_s2b , null };  
    
  ASSIGN
    init(smS2_state) := null;  
  
  TRANS
    ( (smS2_state = smS2_s2a) -> (
      (handle.event = e3 & next(smS2_state) = smS2_s2b)  |
      (handle.event = e1 & next(sm.sm_state) = sm_s1)  ) ) &
    ( (smS2_state = smS2_s2b) -> (
      (handle.event = e3 & next(smS2_state) = smS2_s2a)  |
      (handle.event = e1 & next(sm.sm_state) = sm_s1)  ) )
  
MODULE main
  
  VAR 
    handle : Sm_Handle;
    sm : Sm( smS2 , handle );
    smS2 : SmS2( sm , handle ); 