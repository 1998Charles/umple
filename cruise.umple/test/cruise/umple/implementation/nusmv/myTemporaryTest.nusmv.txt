-- This file is generated from myTemporaryTest.ump --

MODULE HeatSystem_Handle
  
  VAR 
    event : { furnaceFault , furnaceReset , heatSwitchOn , heatSwitchOff , userReset , activate , deactivate , t5 , furnaceRunning , t15 , t17 , t18 , t20 , t21 , t19 , t22 , t24 , t23 };  
    
  
MODULE HeatSystem( heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystem_state : { heatSystem_heatSys , null };  
    
  ASSIGN
    init(heatSystem_state) := heatSystem_heatSys;  
  
  TRANS
    ( (heatSystem_state = heatSystem_heatSys) -> ( next(heatSystemHouse.heatSystemHouse_state) = heatSystemHouse_house & next(heatSystemFurnace.heatSystemFurnace_state) = heatSystemFurnace_furnace) )
  
MODULE HeatSystemHouse( heatSystem , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouse_state : { heatSystemHouse_house , null };  
    
  ASSIGN
    init(heatSystemHouse_state) := null;  
  
  TRANS
    ( (heatSystemHouse_state = heatSystemHouse_house) -> ( next(heatSystemHouseRoom.heatSystemHouseRoom_state) = heatSystemHouseRoom_room & next(heatSystemHouseController.heatSystemHouseController_state) = heatSystemHouseController_Controller) )
  
MODULE HeatSystemHouseRoom( heatSystem , heatSystemHouse , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseRoom_state : { heatSystemHouseRoom_room , null };  
    
  ASSIGN
    init(heatSystemHouseRoom_state) := null;  
  
  TRANS
    ( (heatSystemHouseRoom_state = heatSystemHouseRoom_room) -> ( next(heatSystemHouseRoomRoom.heatSystemHouseRoomRoom_state) = heatSystemHouseRoomRoom_noHeatReq) )
  
MODULE HeatSystemHouseRoomRoom( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseRoomRoom_state : { heatSystemHouseRoomRoom_noHeatReq , heatSystemHouseRoomRoom_heatReq , null };  
    
  ASSIGN
    init(heatSystemHouseRoomRoom_state) := null;  
  
  TRANS
    ( (heatSystemHouseRoomRoom_state = heatSystemHouseRoomRoom_noHeatReq) -> ( next(heatSystemHouseRoomRoomNoHeatReq.heatSystemHouseRoomRoomNoHeatReq_state) = heatSystemHouseRoomRoomNoHeatReq_idleNoHeat) ) &
    ( (heatSystemHouseRoomRoom_state = heatSystemHouseRoomRoom_heatReq) -> ( next(heatSystemHouseRoomRoomHeatReq.heatSystemHouseRoomRoomHeatReq_state) = heatSystemHouseRoomRoomHeatReq_idleHeat) )
  
MODULE HeatSystemHouseRoomRoomNoHeatReq( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseRoomRoomNoHeatReq_state : { heatSystemHouseRoomRoomNoHeatReq_idleNoHeat , heatSystemHouseRoomRoomNoHeatReq_waitForHeat , null };  
    
  ASSIGN
    init(heatSystemHouseRoomRoomNoHeatReq_state) := null;  
  
  TRANS
    ( (heatSystemHouseRoomRoomNoHeatReq_state = heatSystemHouseRoomRoomNoHeatReq_waitForHeat) -> (
      (handle.event = t17 & next(heatSystemHouseRoomRoomNoHeatReq_state) = heatSystemHouseRoomRoomNoHeatReq_waitForHeat)  |
      (handle.event = t18 & next(heatSystemHouseRoomRoomNoHeatReq_state) = heatSystemHouseRoomRoomNoHeatReq_waitForHeat)  |
      (handle.event = t15 & next(heatSystemHouseRoomRoomNoHeatReq_state) = heatSystemHouseRoomRoomNoHeatReq_idleNoHeat)  |
      (handle.event = t20 & next(heatSystemHouseRoomRoom.heatSystemHouseRoomRoom_state) = heatSystemHouseRoomRoom_heatReq & next(heatSystemHouseRoomRoom.heatSystemHouseRoomRoom_state) = null & next(heatSystemHouseRoomRoomNoHeatReq_state) = null)  ) ) &
    ( (heatSystemHouseRoomRoomNoHeatReq_state = heatSystemHouseRoomRoomNoHeatReq_idleNoHeat) -> (
       handle.event = t15 & next(heatSystemHouseRoomRoomNoHeatReq_state) = heatSystemHouseRoomRoomNoHeatReq_waitForHeat) )
  
MODULE HeatSystemHouseRoomRoomHeatReq( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseRoomRoomHeatReq_state : { heatSystemHouseRoomRoomHeatReq_idleHeat , heatSystemHouseRoomRoomHeatReq_waitForCool , null };  
    
  ASSIGN
    init(heatSystemHouseRoomRoomHeatReq_state) := null;  
  
  TRANS
    ( (heatSystemHouseRoomRoomHeatReq_state = heatSystemHouseRoomRoomHeatReq_waitForCool) -> (
      (handle.event = t19 & next(heatSystemHouseRoomRoom.heatSystemHouseRoomRoom_state) = heatSystemHouseRoomRoom_noHeatReq & next(heatSystemHouseRoomRoom.heatSystemHouseRoomRoom_state) = null & next(heatSystemHouseRoomRoomHeatReq_state) = null)  |
      (handle.event = t22 & next(heatSystemHouseRoomRoomHeatReq_state) = heatSystemHouseRoomRoomHeatReq_idleHeat)  |
      (handle.event = t24 & next(heatSystemHouseRoomRoomHeatReq_state) = heatSystemHouseRoomRoomHeatReq_waitForCool)  |
      (handle.event = t23 & next(heatSystemHouseRoomRoomHeatReq_state) = heatSystemHouseRoomRoomHeatReq_waitForCool)  ) ) &
    ( (heatSystemHouseRoomRoomHeatReq_state = heatSystemHouseRoomRoomHeatReq_idleHeat) -> (
       handle.event = t21 & next(heatSystemHouseRoomRoomHeatReq_state) = heatSystemHouseRoomRoomHeatReq_waitForCool) )
  
MODULE HeatSystemHouseController( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseController_state : { heatSystemHouseController_Controller , null };  
    
  ASSIGN
    init(heatSystemHouseController_state) := null;  
  
  TRANS
    ( (heatSystemHouseController_state = heatSystemHouseController_Controller) -> ( next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_off) )
  
MODULE HeatSystemHouseControllerController( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseControllerController_state : { heatSystemHouseControllerController_off , heatSystemHouseControllerController_ControllerOn , heatSystemHouseControllerController_error , null };  
    
  ASSIGN
    init(heatSystemHouseControllerController_state) := null;  
  
  TRANS
    ( (heatSystemHouseControllerController_state = heatSystemHouseControllerController_error) -> (
      (handle.event = furnaceReset & next(heatSystemHouseControllerController_state) = heatSystemHouseControllerController_off)  |
      (handle.event = userReset & next(heatSystemHouseControllerController_state) = heatSystemHouseControllerController_off)  ) ) &
    ( (heatSystemHouseControllerController_state = heatSystemHouseControllerController_off) -> (
       handle.event = heatSwitchOn & next(heatSystemHouseControllerController_state) = heatSystemHouseControllerController_ControllerOn) ) &
    ( (heatSystemHouseControllerController_state = heatSystemHouseControllerController_ControllerOn) -> ( next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = heatSystemHouseControllerControllerControllerOn_idle) )
  
MODULE HeatSystemHouseControllerControllerControllerOn( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseControllerControllerControllerOn_state : { heatSystemHouseControllerControllerControllerOn_idle , heatSystemHouseControllerControllerControllerOn_heaterActive , null };  
    
  ASSIGN
    init(heatSystemHouseControllerControllerControllerOn_state) := null;  
  
  TRANS
    ( (heatSystemHouseControllerControllerControllerOn_state = heatSystemHouseControllerControllerControllerOn_idle) -> (
      (handle.event = activate & next(heatSystemHouseControllerControllerControllerOn_state) = heatSystemHouseControllerControllerControllerOn_heaterActive)  |
      (handle.event = furnaceFault & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_error & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = null & next(heatSystemHouseControllerControllerControllerOn_state) = null)  |
      (handle.event = heatSwitchOff & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_off & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = null & next(heatSystemHouseControllerControllerControllerOn_state) = null)  ) ) &
    ( (heatSystemHouseControllerControllerControllerOn_state = heatSystemHouseControllerControllerControllerOn_heaterActive) -> ( next(heatSystemHouseControllerControllerControllerOnHeaterActive.heatSystemHouseControllerControllerControllerOnHeaterActive_state) = heatSystemHouseControllerControllerControllerOnHeaterActive_actHeater) )
  
MODULE HeatSystemHouseControllerControllerControllerOnHeaterActive( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemHouseControllerControllerControllerOnHeaterActive_state : { heatSystemHouseControllerControllerControllerOnHeaterActive_actHeater , heatSystemHouseControllerControllerControllerOnHeaterActive_heaterRun , null };  
    
  ASSIGN
    init(heatSystemHouseControllerControllerControllerOnHeaterActive_state) := null;  
  
  TRANS
    ( (heatSystemHouseControllerControllerControllerOnHeaterActive_state = heatSystemHouseControllerControllerControllerOnHeaterActive_actHeater) -> (
      (handle.event = furnaceRunning & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = heatSystemHouseControllerControllerControllerOnHeaterActive_heaterRun)  |
      (handle.event = deactivate & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = heatSystemHouseControllerControllerControllerOn_idle & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = null & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = null)  |
      (handle.event = furnaceFault & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_error & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = null & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = null & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = null)  |
      (handle.event = heatSwitchOff & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_off & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = null & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = null & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = null)  ) ) &
    ( (heatSystemHouseControllerControllerControllerOnHeaterActive_state = heatSystemHouseControllerControllerControllerOnHeaterActive_heaterRun) -> (
      (handle.event = deactivate & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = heatSystemHouseControllerControllerControllerOn_idle & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = null & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = null)  |
      (handle.event = furnaceFault & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_error & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = null & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = null & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = null)  |
      (handle.event = heatSwitchOff & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = heatSystemHouseControllerController_off & next(heatSystemHouseControllerController.heatSystemHouseControllerController_state) = null & next(heatSystemHouseControllerControllerControllerOn.heatSystemHouseControllerControllerControllerOn_state) = null & next(heatSystemHouseControllerControllerControllerOnHeaterActive_state) = null)  ) )
  
MODULE HeatSystemFurnace( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemFurnace_state : { heatSystemFurnace_furnace , null };  
    
  ASSIGN
    init(heatSystemFurnace_state) := null;  
  
  TRANS
    ( (heatSystemFurnace_state = heatSystemFurnace_furnace) -> ( next(heatSystemFurnaceFurnace.heatSystemFurnaceFurnace_state) = heatSystemFurnaceFurnace_furnaceNormal) )
  
MODULE HeatSystemFurnaceFurnace( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle )
  
  VAR 
    heatSystemFurnaceFurnace_state : { heatSystemFurnaceFurnace_furnaceNormal , heatSystemFurnaceFurnace_furnaceErr , null };  
    
  ASSIGN
    init(heatSystemFurnaceFurnace_state) := null;  
  
  TRANS
    ( (heatSystemFurnaceFurnace_state = heatSystemFurnaceFurnace_furnaceErr) -> (
       handle.event = furnaceReset & next(heatSystemFurnaceFurnace_state) = heatSystemFurnaceFurnace_furnaceNormal) ) &
    ( (heatSystemFurnaceFurnace_state = heatSystemFurnaceFurnace_furnaceNormal) -> ( next(heatSystemFurnaceFurnaceFurnaceNormal.heatSystemFurnaceFurnaceFurnaceNormal_state) = heatSystemFurnaceFurnaceFurnaceNormal_furnaceOff) )
  
MODULE HeatSystemFurnaceFurnaceFurnaceNormal( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , handle )
  
  VAR 
    heatSystemFurnaceFurnaceFurnaceNormal_state : { heatSystemFurnaceFurnaceFurnaceNormal_furnaceOff , heatSystemFurnaceFurnaceFurnaceNormal_furnaceRun , heatSystemFurnaceFurnaceFurnaceNormal_furnaceAct , null };  
    
  ASSIGN
    init(heatSystemFurnaceFurnaceFurnaceNormal_state) := null;  
  
  TRANS
    ( (heatSystemFurnaceFurnaceFurnaceNormal_state = heatSystemFurnaceFurnaceFurnaceNormal_furnaceOff) -> (
      (handle.event = activate & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = heatSystemFurnaceFurnaceFurnaceNormal_furnaceAct)  |
      (handle.event = furnaceFault & next(heatSystemFurnaceFurnace.heatSystemFurnaceFurnace_state) = heatSystemFurnaceFurnace_furnaceErr & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = null)  ) ) &
    ( (heatSystemFurnaceFurnaceFurnaceNormal_state = heatSystemFurnaceFurnaceFurnaceNormal_furnaceRun) -> (
      (handle.event = deactivate & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = heatSystemFurnaceFurnaceFurnaceNormal_furnaceOff)  |
      (handle.event = furnaceFault & next(heatSystemFurnaceFurnace.heatSystemFurnaceFurnace_state) = heatSystemFurnaceFurnace_furnaceErr & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = null)  ) ) &
    ( (heatSystemFurnaceFurnaceFurnaceNormal_state = heatSystemFurnaceFurnaceFurnaceNormal_furnaceAct) -> (
      (handle.event = deactivate & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = heatSystemFurnaceFurnaceFurnaceNormal_furnaceOff)  |
      (handle.event = t5 & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = heatSystemFurnaceFurnaceFurnaceNormal_furnaceAct)  |
      (handle.event = furnaceRunning & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = heatSystemFurnaceFurnaceFurnaceNormal_furnaceRun)  |
      (handle.event = furnaceFault & next(heatSystemFurnaceFurnace.heatSystemFurnaceFurnace_state) = heatSystemFurnaceFurnace_furnaceErr & next(heatSystemFurnaceFurnaceFurnaceNormal_state) = null)  ) )
  
MODULE main
  
  VAR 
    handle : HeatSystem_Handle;
    heatSystem : HeatSystem( heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouse : HeatSystemHouse( heatSystem , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseRoom : HeatSystemHouseRoom( heatSystem , heatSystemHouse , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseRoomRoom : HeatSystemHouseRoomRoom( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseRoomRoomNoHeatReq : HeatSystemHouseRoomRoomNoHeatReq( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseRoomRoomHeatReq : HeatSystemHouseRoomRoomHeatReq( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseController : HeatSystemHouseController( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseControllerController : HeatSystemHouseControllerController( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseControllerControllerControllerOn : HeatSystemHouseControllerControllerControllerOn( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemHouseControllerControllerControllerOnHeaterActive : HeatSystemHouseControllerControllerControllerOnHeaterActive( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemFurnace , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemFurnace : HeatSystemFurnace( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnaceFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemFurnaceFurnace : HeatSystemFurnaceFurnace( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnaceFurnaceNormal , handle );
    heatSystemFurnaceFurnaceFurnaceNormal : HeatSystemFurnaceFurnaceFurnaceNormal( heatSystem , heatSystemHouse , heatSystemHouseRoom , heatSystemHouseRoomRoom , heatSystemHouseRoomRoomNoHeatReq , heatSystemHouseRoomRoomHeatReq , heatSystemHouseController , heatSystemHouseControllerController , heatSystemHouseControllerControllerControllerOn , heatSystemHouseControllerControllerControllerOnHeaterActive , heatSystemFurnace , heatSystemFurnaceFurnace , handle ); 