/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

package example;
import java.util.*;

public class Student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Student Attributes
  private String number;

  //Student Associations
  private List<Mentor> mentors;

  //Helper Variables
  private boolean canSetNumber;
  private boolean canSetMentors;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Student(String aNumber, Mentor... allMentors)
  {
    number = aNumber;
    canSetNumber = false;
    canSetMentors = true;
    mentors = new ArrayList<Mentor>();
    setMentors(allMentors);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public String getNumber()
  {
    return number;
  }

  public Mentor getMentor(int index)
  {
    Mentor aMentor = mentors.get(index);
    return aMentor;
  }

  public List<Mentor> getMentors()
  {
    List<Mentor> newMentors = Collections.unmodifiableList(mentors);
    return newMentors;
  }

  public int numberOfMentors()
  {
    int number = mentors.size();
    return number;
  }

  public boolean hasMentors()
  {
    boolean has = mentors.size() > 0;
    return has;
  }

  public int indexOfMentor(Mentor aMentor)
  {
    int index = mentors.indexOf(aMentor);
    return index;
  }

  public static int minimumNumberOfMentors()
  {
    return 0;
  }

  private boolean setMentors(Mentor... newMentors)
  {
    boolean wasSet = false;
    if (!canSetMentors) { return wasSet; }
    canSetMentors = false;
    if (newMentors == null)
    {
      wasSet = true;
      return wasSet;
    }

    for (Mentor aMentor : newMentors)
    {
      if (mentors.contains(aMentor))
      {
        continue;
      }
      mentors.add(aMentor);
    }
    wasSet = true;
    return wasSet;
  }
  public void delete()
  {}

}