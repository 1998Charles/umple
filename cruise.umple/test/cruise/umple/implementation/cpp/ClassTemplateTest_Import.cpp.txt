/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

namespace example.one{
using namespace example.two;
#include "Mentor.h";

  
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 Mentor::Mentor(const string& aName)
  {
    name = aName;
  }
  
  //------------------------
  // COPY CONSTRUCTOR
  //------------------------

 Mentor::Mentor(const Mentor & mentor)
  {
    this->name = mentor.name;
  }
  	
  //------------------------
  // Operator =
  //------------------------

 Mentor Mentor::operator=(const Mentor & mentor)
  {
    this->name = mentor.name;
  }

  //------------------------
  // INTERFACE
  //------------------------

  bool Mentor::setName(string const& aName)
  {
    bool wasSet = false;
    name = aName;
    wasSet = true;
    return wasSet;
  }

  string Mentor::getName()
  {
    return name;
  }

  Student* Mentor::getStudent() 
  {
    return student;
  }

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
Mentor::~Mentor()
  {
    if (student != NULL)
    {
      if (student.numberOfMentors() <= 1)
      {
        delete student;
      }
      else
      {
        Student placeholderStudent = student;
        this.student = NULL;
        placeholderStudent.removeMentor(this);
      }
    }
  }

}