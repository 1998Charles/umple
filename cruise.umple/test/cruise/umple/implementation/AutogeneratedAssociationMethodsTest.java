package cruise.umple.implementation;

import org.junit.*;

import cruise.umple.compiler.Method;
import cruise.umple.compiler.UmpleClass;
import cruise.umple.compiler.UmpleModel;

public class AutogeneratedAssociationMethodsTest extends TemplateTest {

	@Test
	public void AssociationBothSidesSorted()
	{
		System.out.println("\nAssociationBothSidesSorted");
		autogeneratedMethodsCheck("AssociationBothSidesSorted.ump");
	}
	  
	@Test
	public void AssociationImportTest()
	{
		System.out.println("\nAssociationImportTest");
		autogeneratedMethodsCheck("AssociationImportTest.ump");
	}
	  
	@Test
	public void AssociationSortedTest()
	{
		System.out.println("\nAssociationSortedTest");
		autogeneratedMethodsCheck("AssociationSorting.ump");
	}
	  
	@Test
	public void AssociationSortedWithNameSpace()
	{
		System.out.println("\nAssociationSortedWithNameSpace");
		autogeneratedMethodsCheck("AssociationSortedWithNameSpace.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalManyTest()
	{
		System.out.println("\nImmutableUnidirectionalManyTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalManyTest.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalMNTest()
	{
		System.out.println("\nImmutableUnidirectionalMNTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalMNTest.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalMStarTest()
	{
		System.out.println("\nImmutableUnidirectionalMStarTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalMStarTest.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalNTest()
	{
		System.out.println("\nImmutableUnidirectionalNTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalNTest.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalOneTest()
	{
		System.out.println("\nImmutableUnidirectionalOneTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalOneTest.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalOptionalNTest()
	{
		System.out.println("\nImmutableUnidirectionalOptionalNTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalOptionalNTest.ump");
	}
	  
	@Test
	public void ImmutableUnidirectionalOptionalOneTest()
	{
		System.out.println("\nImmutableUnidirectionalOptionalOneTest");
		autogeneratedMethodsCheck("ImmutableUnidirectionalOptionalOneTest.ump");
	}
	  
	@Test
	public void ManyToManySubclassTest()
	{
		System.out.println("\nManyToManySubclassTest");
		autogeneratedMethodsCheck("ManyToManySubclassTest.ump");
	}
	  
	@Test
	public void ManyToManySubclassTest2()
	{
		System.out.println("\nManyToManySubclassTest2");
		autogeneratedMethodsCheck("ManyToManySubclassTest2.ump");
	}
	  
	@Test
	public void ManyToManyTest()
	{
		System.out.println("\nManyToManyTest");
		autogeneratedMethodsCheck("ManyToManyTest.ump");
	}
	  
	@Test
	public void ManyToMNTest()
	{
		System.out.println("\nManyToMNTest");
		autogeneratedMethodsCheck("ManyToMNTest.ump");
	}
	  
	@Test
	public void ManyToMStarTest()
	{
		System.out.println("\nManyToMStarTest");
		autogeneratedMethodsCheck("ManyToMStarTest.ump");
	}
	  
	@Test
	public void ManyToNTest()
	{
		System.out.println("\nManyToNTest");
		autogeneratedMethodsCheck("ManyToNTest.ump");
	}
	  
	@Test
	public void ManyToOptionalNTest()
	{
		System.out.println("\nManyToOptionalNTest");
		autogeneratedMethodsCheck("ManyToOptionalNTest.ump");
	}
	  
	@Test
	public void MNToMNTest()
	{
		System.out.println("\nMNToMNTest");
		autogeneratedMethodsCheck("MNToMNTest.ump");
	}
	  
	@Test
	public void MNToMStarTest()
	{
		System.out.println("\nMNToMStarTest");
		autogeneratedMethodsCheck("MNToMStarTest.ump");
	}
	  
	@Test
	public void MNToNTest()
	{
		System.out.println("\nMNToNTest");
		autogeneratedMethodsCheck("MNToNTest.ump");
	}
	  
	@Test
	public void MNToOptionalNTest()
	{
		System.out.println("\nMNToOptionalNTest");
		autogeneratedMethodsCheck("MNToOptionalNTest.ump");
	}
	  
	@Test
	public void MStarToMStarTest()
	{
		System.out.println("\nMStarToMStarTest");
		autogeneratedMethodsCheck("MStarToMStarTest.ump");
	}
	  
	@Test
	public void MStarToOptionalNTest()
	{
		System.out.println("\nMStarToOptionalNTest");
		autogeneratedMethodsCheck("MStarToOptionalNTest.ump");
	}
	  
	@Test
	public void NToMStarTest()
	{
		System.out.println("\nNToMStarTest");
		autogeneratedMethodsCheck("NToMStarTest.ump");
	}
	  
	@Test
	public void NToNTest()
	{
		System.out.println("\nNToNTest");
		autogeneratedMethodsCheck("NToNTest.ump");
	}
	  
	@Test
	public void NToOptionalNTest()
	{
		System.out.println("\nNToOptionalNTest");
		autogeneratedMethodsCheck("NToOptionalNTest.ump");
	}
	  
	@Test
	public void OneToMandatoryManyTest()
	{
		System.out.println("\nOneToMandatoryManyTest");
		autogeneratedMethodsCheck("OneToMandatoryManyTest.ump");
	}
	  
	@Test
	public void OneToManyTest()
	{
		System.out.println("\nOneToManyTest");
		autogeneratedMethodsCheck("OneToManyTest.ump");
	}
	  
	@Test
	public void OneToManyUnidirectionalTest()
	{
		System.out.println("\nOneToManyUnidirectionalTest");
		autogeneratedMethodsCheck("OneToManyUnidirectionalTest_One.ump");
	}
	  
	@Test
	public void OneToMNTest()
	{
		System.out.println("\nOneToMNTest");
		autogeneratedMethodsCheck("OneToMNTest.ump");
	}
	  
	@Test
	public void OneToNTest()
	{
		System.out.println("\nOneToNTest");
		autogeneratedMethodsCheck("OneToNTest.ump");
	}
	  
	@Test
	public void OneToOneTest()
	{
		System.out.println("\nOneToOneTest");
		autogeneratedMethodsCheck("OneToOneTest.ump");
	}
	  
	@Test
	public void OneToOptionalNTest()
	{
		System.out.println("\nOneToOptionalNTest");
		autogeneratedMethodsCheck("OneToOptionalNTest.ump");
	}
	  
	@Test
	public void OneToOptionalOneTest()
	{
		System.out.println("\nOneToOptionalOneTest");
		autogeneratedMethodsCheck("OneToOptionalOneTest.ump");
	}
	  
	@Test
	public void OptionalNToOptionalNTest()
	{
		System.out.println("\nOptionalNToOptionalNTest");
		autogeneratedMethodsCheck("OptionalNToOptionalNTest.ump");
	}
	  
	@Test
	public void OptionalOneToManyTest()
	{
		System.out.println("\nOptionalOneToManyTest");
		autogeneratedMethodsCheck("OptionalOneToManyTest.ump");
	}
	  
	@Test
	public void OptionalOneToMNTest()
	{
		System.out.println("\nOptionalOneToMNTest");
		autogeneratedMethodsCheck("OptionalOneToMNTest.ump");
	}
	  
	@Test
	public void OptionalOneToMStarTest()
	{
		System.out.println("\nOptionalOneToMStarTest");
		autogeneratedMethodsCheck("OptionalOneToMStarTest.ump");
	}
	  
	@Test
	public void OptionalOneToNTest()
	{
		System.out.println("\nOptionalOneToNTest");
		autogeneratedMethodsCheck("OptionalOneToNTest.ump");
	}
	  
	@Test
	public void OptionalOneToOptionalNTest()
	{
		System.out.println("\nOptionalOneToOptionalNTest");
		autogeneratedMethodsCheck("OptionalOneToOptionalNTest.ump");
	}
	  
	@Test
	public void OptionalOneToOptionalOneTest()
	{
		System.out.println("\nOptionalOneToOptionalOneTest");
		autogeneratedMethodsCheck("OptionalOneToOptionalOneTest.ump");
	}
	  
	@Test
	public void ReflexiveAssociationTest()
	{
		System.out.println("\nReflexiveAssociationTest");
		autogeneratedMethodsCheck("ReflexiveAssociationTest.ump");
	}
	  
	@Test
	public void SingletonToOneTest()
	{
		System.out.println("\nSingletonToOneTest");
		autogeneratedMethodsCheck("SingletonToOneTest.ump");
	}
	  
	@Test
	public void UnidirectionalManyTest()
	{
		System.out.println("\nUnidirectionalManyTest");
		autogeneratedMethodsCheck("UnidirectionalManyTest.ump");
	}
	  
	@Test
	public void UnidirectionalMNTest()
	{
		System.out.println("\nUnidirectionalMNTest");
		autogeneratedMethodsCheck("UnidirectionalMNTest.ump");
	}
	  
	@Test
	public void UnidirectionalMStarTest()
	{
		System.out.println("\nUnidirectionalMStarTest");
		autogeneratedMethodsCheck("UnidirectionalMStarTest.ump");
	}
	  
	@Test
	public void UnidirectionalNTest()
	{
		System.out.println("\nUnidirectionalNTest");
		autogeneratedMethodsCheck("UnidirectionalNTest.ump");
	}
	  
	@Test
	public void UnidirectionalOneTest()
	{
		System.out.println("\nUnidirectionalOneTest");
		autogeneratedMethodsCheck("UnidirectionalOneTest.ump");
	}
	  
	@Test
	public void UnidirectionalOptionalNTest()
	{
		System.out.println("\nUnidirectionalOptionalNTest");
		autogeneratedMethodsCheck("UnidirectionalOptionalNTest.ump");
	}
	  
	@Test
	public void UnidirectionalOptionalOneTest()
	{
		System.out.println("\nUnidirectionalOptionalOneTest");
		autogeneratedMethodsCheck("UnidirectionalOptionalOneTest.ump");
	}
	
	private void autogeneratedMethodsCheck(String file)
	{
		debug = true;
		UmpleModel genModel = createUmpleSystem(pathToInput, file);
		boolean hasExtraMethods = false;
		for (UmpleClass uClass : genModel.getUmpleClasses())
		{
			for (Method m : uClass.getMethods())
			{
				if (m.getSource() == Method.Source.fAutoAPI && !m.isDebugFlag())
				{
					String methodStr = m.toString();
					int bodyIndex = methodStr.indexOf("{");
					System.out.println("Model extra method: " + m.getModifier() + methodStr.substring(0, bodyIndex));
				}
			}
		}
		
		if (hasExtraMethods || genModel.isDebugAutogenFailed())
		{
			Assert.fail("See console for details.");
		}
	}
}