Class Definition
Classes and Interfaces
noreferences

@@description
<p>      
A class definition defines an object-oriented  class available for use in your system.  A class can be 
composed of many things including: 
</p>

<ul>
<li><a href="isAclause.html">Specification of inheritance from a superclass using the
 isA keyword</a>.</li>
<li><a href="Dependclause.html">Dependencies</a></li>
<li><a href="AttributeDefinition.html">Attributes</a></li>
<li><a href="BasicStateMachines.html">State machines defining attributes whose
behaviour is controlled by a sequence of events</a></li>
<li><a href="AssociationDefinition.html">Associations</a></li>
<li><a href="MethodDefinition.html">Methods containing "code" in a native language (e.g. Java)</a></li>

</ul>

@@syntax
class [name] { [[classContent]]* } <br/>&nbsp;<br/>

classContent- : [[comment]] | [[classDefinition]] | [[trace]] | [[position]] | [[softwarePattern]] | [[depend]] | [[symmetricReflexiveAssociation]] | [[attribute]] | [[stateMachine]] | [[inlineAssociation]] | [[concreteMethodDeclaration]] | [[constantDeclaration]] | [[extraCode]]

@@example

class Student
{
  firstName;   // attribute - defaults to String
  lastName;
  Integer number;  // attribute with type Integer
  * -- * Address;  // Many-to-many association
  
  public String fullName()  // Method, whose content is not processed by Umple
  {
    return getFirstName()   " "   getLastName();
  } 
}

class Address
{
  String[] line;  // Multi-valued attribute
}//$?[End_of_model]$?

class Address
{
  position 47 160 109 64;
}

class Student
{
  position.association Address__Student 30,100 30,0;
  position 47 23 141 100;
}

@@endexample
