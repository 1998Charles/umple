API Summary
Generated API
noreferences
@@description
<h2>Generated API summary</h2>

<p>The following table describes the API generated from various Umple features.</p>


<style>
<!--table
	{mso-displayed-decimal-separator:"\.";
	mso-displayed-thousand-separator:"\,";}
@page
	{margin:1.0in .75in 1.0in .75in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;}
.style0
	{mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	white-space:nowrap;
	mso-rotate:0;
	mso-background-source:auto;
	mso-pattern:auto;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	border:none;
	mso-protection:locked visible;
	mso-style-name:Normal;
	mso-style-id:0;}
td
	{mso-style-parent:style0;
	padding-top:1px;
	padding-right:1px;
	padding-left:1px;
	mso-ignore:padding;
	color:black;
	font-size:12.0pt;
	font-weight:400;
	font-style:normal;
	text-decoration:none;
	font-family:Calibri, sans-serif;
	mso-font-charset:0;
	mso-number-format:General;
	text-align:general;
	vertical-align:bottom;
	border:none;
	mso-background-source:auto;
	mso-pattern:auto;
	mso-protection:locked visible;
	white-space:nowrap;
	mso-rotate:0;}
.xl65
	{mso-style-parent:style0;
	background:yellow;
	mso-pattern:black none;}
.xl66
	{mso-style-parent:style0;
	background:#CCFFCC;
	mso-pattern:black none;}
.xl67
	{mso-style-parent:style0;
	font-weight:700;}
.xl68
	{mso-style-parent:style0;
	background:#95B3D7;
	mso-pattern:black none;}
.xl69
	{mso-style-parent:style0;
	background:#C4D79B;
	mso-pattern:black none;}
.xl70
	{mso-style-parent:style0;
	background:#BFBFBF;
	mso-pattern:black none;}
.xl71
	{mso-style-parent:style0;
	color:black;
	background:#BFBFBF;
	mso-pattern:black none;}
.xl72
	{mso-style-parent:style0;
	font-weight:700;
	background:#FF6600;
	mso-pattern:black none;}
.xl73
	{mso-style-parent:style0;
	background:#FF6600;
	mso-pattern:black none;}
-->
</style>

<table border=0 cellpadding=0 cellspacing=0 width=1098 style='border-collapse:
 collapse;table-layout:fixed;width:1098pt'>
 <col width=96 style='mso-width-source:userset;mso-width-alt:4096;width:96pt'>
 <col width=196 style='mso-width-source:userset;mso-width-alt:8362;width:196pt'>
 <col width=65 span=3 style='width:65pt'>
 <col width=65 style='width:65pt'>
 <col width=65 style='width:65pt'>
 <col width=91 style='mso-width-source:userset;mso-width-alt:3882;width:91pt'>
 <col width=65 span=6 style='width:65pt'>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=5 width=487 style='height:15.0pt;mso-ignore:colspan;
  width:487pt'>Summary of the API generated by Umple attribuites, associations
  and state machines</td>
  <td width=65 style='width:65pt'></td>
  <td width=65 style='width:65pt'></td>
  <td width=91 style='width:91pt'></td>
  <td width=65 style='width:65pt'></td>
  <td width=65 style='width:65pt'></td>
  <td width=65 style='width:65pt'></td>
  <td width=65 style='width:65pt'></td>
  <td width=65 style='width:65pt'></td>
  <td width=65 style='width:65pt'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr class=xl73 height=15 style='height:15.0pt'>
  <td height=15 class=xl72 colspan=2 style='height:15.0pt;mso-ignore:colspan'>API
  GENERATED IN ALL CASES</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>void delete()</td>
  <td>removes object</td>
  <td colspan=12 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=5 style='height:15.0pt;mso-ignore:colspan'>any methods
  in the code are emitted as-is; they are made public if this is not declared</td>
  <td colspan=9 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr class=xl73 height=15 style='height:15.0pt'>
  <td height=15 class=xl72 colspan=2 style='height:15.0pt;mso-ignore:colspan'>API
  GENERATED FROM ATTRIBUTES</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=8 style='height:15.0pt;mso-ignore:colspan'>T is the
  type of the attribute (String if omitted); note that Umple builting types
  such as Integer become native types such as int</td>
  <td colspan=6 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=2 style='height:15.0pt;mso-ignore:colspan'>z is the
  attribute name</td>
  <td colspan=12 style='mso-ignore:colspan'></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl68 style='height:15.0pt'>Umple concept</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>basic</td>
  <td class=xl68>initialized</td>
  <td class=xl68>lazy</td>
  <td class=xl68>defaulted</td>
  <td class=xl68>lazy immuta<span style='display:none'>ble</span></td>
  <td class=xl68>immutable</td>
  <td class=xl68>autounique</td>
  <td class=xl68>constant</td>
  <td class=xl68>internal</td>
  <td class=xl68>key</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Umple notation</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65>T z;</td>
  <td class=xl65>T z = val;</td>
  <td class=xl65>lazy T z;</td>
  <td class=xl65>defaulted T z<span style='display:none'><span
  style="mso-spacerun:yes">&nbsp;</span>= val;</span></td>
  <td class=xl65>lazy immuta<span style='display:none'>ble T z;</span></td>
  <td class=xl65>immutable z;</td>
  <td class=xl65>autounique z</td>
  <td class=xl65>const T z=val</td>
  <td class=xl65>internal T z;</td>
  <td class=xl65 colspan=2 style='mso-ignore:colspan'>with key { z }</td>
  <td class=xl65>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>Querying value</td>
  <td colspan=13 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>T getZ()</td>
  <td></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'>yes; T always int</td>
  <td></td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean isZ()</td>
  <td></td>
  <td>if T Boolean</td>
  <td>if T Boolean</td>
  <td>if T Boolean</td>
  <td>if T Boolean</td>
  <td>if T Boolean</td>
  <td>if T Boolean</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
  <td>if T boolean</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean equals(Ob<span style='display:
  none'>ject)</span></td>
  <td>is equal to another?</td>
  <td colspan=9 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>Mutating</td>
  <td colspan=13 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean setZ(T)</td>
  <td>mutates the attribute</td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'>yes; true only once</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
  <td colspan=2 style='mso-ignore:colspan'>yes; true at most once</td>
  <td></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean resetZ()</td>
  <td>restores original default</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td colspan=8 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>Other</td>
  <td colspan=13 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>T getDefaultZ()</td>
  <td>returns original default</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td colspan=8 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>int hashCode()</td>
  <td>Likely unique value</td>
  <td colspan=9 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr class=xl69 height=15 style='height:15.0pt'>
  <td height=15 class=xl69 style='height:15.0pt'>constructor args</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>T</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>T</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
 </tr>
 <tr class=xl70 height=15 style='height:15.0pt'>
  <td height=15 class=xl70 style='height:15.0pt'>initial value</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>constructor <span style='display:none'>val</span></td>
  <td class=xl70>val</td>
  <td class=xl70>null/0/false</td>
  <td class=xl70>val</td>
  <td class=xl70>null/0/false</td>
  <td class=xl70>constructor val or <span style='display:none'>val</span></td>
  <td class=xl70>next int</td>
  <td class=xl70>static val</td>
  <td class=xl70 colspan=2 style='mso-ignore:colspan'>construtor val</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
 </tr>
 <tr height=30 style='height:30.0pt;mso-xlrowspan:2'>
  <td height=30 colspan=14 style='height:30.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr class=xl73 height=15 style='height:15.0pt'>
  <td height=15 class=xl72 colspan=2 style='height:15.0pt;mso-ignore:colspan'>API
  GENERATED FROM ASSOCIATIONS</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=2 style='height:15.0pt;mso-ignore:colspan'>X is the
  name of current class</td>
  <td colspan=12 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=7 style='height:15.0pt;mso-ignore:colspan'>W is the
  name of the class at the other end of the association; used in method names
  unless a role name is present</td>
  <td colspan=7 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=4 style='height:15.0pt;mso-ignore:colspan'>r is a role
  name used when referring to W (optional, except in reflexive assocations</td>
  <td colspan=10 style='mso-ignore:colspan'></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl68 style='height:15.0pt'>Umple concept</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>? To many</td>
  <td class=xl68>? To many w<span style='display:none'>ith role</span></td>
  <td class=xl68>optional</td>
  <td class=xl68>? To one</td>
  <td class=xl68>required ma<span style='display:none'>ny</span></td>
  <td class=xl68>directional</td>
  <td class=xl68>immutable</td>
  <td class=xl68>immutable o<span style='display:none'>ptional</span></td>
  <td class=xl68>reflexive</td>
  <td class=xl68 colspan=2 style='mso-ignore:colspan'>symmetric reflexive</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr class=xl65 height=15 style='height:15.0pt'>
  <td height=15 class=xl65 style='height:15.0pt'>Umple notation</td>
  <td class=xl65>&nbsp;</td>
  <td class=xl65><span style="mso-spacerun:yes">&nbsp;</span>-- * W;</td>
  <td class=xl65><span style="mso-spacerun:yes">&nbsp;</span>-- * W r;</td>
  <td class=xl65><span style="mso-spacerun:yes">&nbsp;</span>-- 0..1 W;</td>
  <td class=xl65><span style="mso-spacerun:yes">&nbsp;</span>-- 1 W;</td>
  <td class=xl65><span style="mso-spacerun:yes">&nbsp;</span>-- 1..* W;</td>
  <td class=xl65><span style="mso-spacerun:yes">&nbsp;</span>-&gt; 1--* W;</td>
  <td class=xl65>immutable 1<span style='display:none'><span
  style="mso-spacerun:yes">&nbsp;</span>-&gt; * W;</span></td>
  <td class=xl65>immutable 1<span style='display:none'><span
  style="mso-spacerun:yes">&nbsp;</span>-&gt; 0..1 W;</span></td>
  <td class=xl65>* -- * X r;</td>
  <td class=xl65>* self r;</td>
  <td class=xl65 colspan=2 style='mso-ignore:colspan'>associatin class</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>Querying link(s)</td>
  <td colspan=13 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>W getW()</td>
  <td>returns the W</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes; W or nul<span style='display:none'>l</span></td>
  <td>yes</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
  <td>W or null</td>
  <td colspan=4 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>W getW(index)</td>
  <td>picks a specific linked W</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td></td>
  <td>R and X</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>List&lt;W&gt; getWs()</td>
  <td>gets immutable list of links</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td></td>
  <td>R and Xs</td>
  <td colspan=3 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean hasWs()</td>
  <td>is cardinality &gt; 0?</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td></td>
  <td>R and Xs</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>int indexOfW(W)</td>
  <td>looks up specific W -1 if none</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td></td>
  <td>R and X</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>int numberOfWs</td>
  <td>cardinality</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td></td>
  <td>R and Xs</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='page-break-before:always;height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>Mutating</td>
  <td colspan=13 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean setW(W)</td>
  <td>adds a link to existing W</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td colspan=9 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>W addW()</td>
  <td>constructs a new W and addslink</td>
  <td>yes</td>
  <td colspan=11 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean addW(W)</td>
  <td>adds a link to existing W</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>R and X</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean setWs(W<span style='display:none'>…)</span></td>
  <td>Add a set of links</td>
  <td colspan=4 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td colspan=6 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean removeW(<span style='display:
  none'>W)</span></td>
  <td>Remove link to W if possible</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>R and Xs</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl66 style='height:15.0pt'>Other</td>
  <td colspan=13 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>static int minimum<span style='display:
  none'>NumberOFWs</span></td>
  <td>multiplicity lower bound</td>
  <td>yes</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
  <td>yes</td>
  <td>yes</td>
  <td>yes</td>
  <td></td>
  <td>R and Xs</td>
  <td>R</td>
  <td colspan=2 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean isNumber<span style='display:
  none'>OfWsValid()</span></td>
  <td>false if breaching constraints</td>
  <td colspan=4 style='mso-ignore:colspan'></td>
  <td colspan=2 style='mso-ignore:colspan'>yes; true initially</td>
  <td colspan=6 style='mso-ignore:colspan'></td>
 </tr>
 <tr class=xl69 height=15 style='height:15.0pt'>
  <td height=15 class=xl69 style='height:15.0pt'>constructor args</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69 colspan=2 style='mso-ignore:colspan'>for addW() only</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>W</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>W …</td>
  <td class=xl69>W</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
  <td class=xl69>&nbsp;</td>
 </tr>
 <tr class=xl70 height=15 style='height:15.0pt'>
  <td height=15 class=xl70 style='height:15.0pt'>initial value</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>empty</td>
  <td class=xl70>empty</td>
  <td class=xl70>empty</td>
  <td class=xl70>constructor <span style='display:none'>val</span></td>
  <td class=xl70>empty</td>
  <td class=xl70>empty</td>
  <td class=xl70>constructor <span style='display:none'>val</span></td>
  <td class=xl70>constructor <span style='display:none'>val</span></td>
  <td class=xl71>empty</td>
  <td class=xl71>empty</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr class=xl73 height=15 style='height:15.0pt'>
  <td height=15 class=xl72 colspan=2 style='height:15.0pt;mso-ignore:colspan'>API
  GENGERATED FROM STATE MACHINES</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 class=xl67 colspan=2 style='height:15.0pt;mso-ignore:colspan'>sm
  is the name of the state machine</td>
  <td colspan=12 style='mso-ignore:colspan'></td>
 </tr>
 <tr class=xl68 height=15 style='height:15.0pt'>
  <td height=15 class=xl68 style='height:15.0pt'>Umple concept</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>Sm with eve<span style='display:none'>nts</span></td>
  <td class=xl68 colspan=2 style='mso-ignore:colspan'>Enum with no events</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
  <td class=xl68>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>enum getSm()</td>
  <td>Current state for statemachine sm</td>
  <td>x</td>
  <td>x</td>
  <td colspan=10 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>String getSmFullNa<span style='display:
  none'>me()</span></td>
  <td>Current state for statemachine sm</td>
  <td>x</td>
  <td>x</td>
  <td colspan=10 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>enum getSmS2()</td>
  <td>State of substate s2</td>
  <td>x</td>
  <td colspan=11 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean e()</td>
  <td>Event method e (for all events)</td>
  <td>x</td>
  <td>x</td>
  <td colspan=10 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>boolean setSm(enu<span style='display:
  none'>m)</span></td>
  <td>If no events, then can set directly</td>
  <td></td>
  <td>x</td>
  <td colspan=10 style='mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 style='height:15.0pt'>Substates allowed</td>
  <td></td>
  <td>yes</td>
  <td>no</td>
  <td colspan=10 style='mso-ignore:colspan'></td>
 </tr>
 <tr class=xl70 height=15 style='height:15.0pt'>
  <td height=15 class=xl70 style='height:15.0pt'>initial value</td>
  <td class=xl70>first state listed</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
  <td class=xl70>&nbsp;</td>
 </tr>
 <tr height=30 style='height:30.0pt;mso-xlrowspan:2'>
  <td height=30 colspan=14 style='height:30.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr class=xl73 height=15 style='height:15.0pt'>
  <td height=15 class=xl72 colspan=2 style='height:15.0pt;mso-ignore:colspan'>API
  GENERATED FROM SINGLETON</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
  <td class=xl73>&nbsp;</td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=14 style='height:15.0pt;mso-ignore:colspan'></td>
 </tr>
 <tr height=15 style='height:15.0pt'>
  <td height=15 colspan=2 style='height:15.0pt;mso-ignore:colspan'>static X
  getInstance()</td>
  <td colspan=12 style='mso-ignore:colspan'></td>
 </tr>
</table>
