interfaceDefinition
Classes and Interfaces
noreferences

@@description
<p>      
The interface command defines an object-oriented interface.  An interface can be 
composed of the following things: 
</p>

<ul>
<li>Dependencies</li>
<li>Arbitrary "code" in a native language (e.g. Java, PHP) to define the interface methods</li>
</ul>

<p class="description">Umple currently supports Java and PHP as native languages.</p>

@@syntax
interfaceDefinition : interface [name] { [[depend]]* [[interfaceBody]] } <br/>&nbsp;<br/>

interfaceBody- : [[interfaceMemberDeclaration]]*<br/>&nbsp;<br/>

interfaceMemberDeclaration : [[constantDeclaration]] | [[abstractMethodDeclaration]] | [[position]] | [[isA]] | [[extraCode]]

@@example
interface RegisterCapable
{
  depend school.util.*;
  
  boolean registerForCourse(Course aCourse);
}

class Person {
  name;
}


class CorporateClient {
  isA RegisterCapable;
  boolean registerForCourse(Course aCourse) {
     // write code here
  }
  0..1 <- * Person employees;
}

class IndividualStudent {
  isA Person, RegisterCapable;
  boolean registerForCourse(Course aCourse) {
     // write code here
  }
}


class Course
{
  name;
  description;
  * -- * Person registrants;
}//$?[End_of_model]$?

class Course
{
  position 337 19 149 80;
  position.association Course__Person 0,24 124,15;
}

class CorporateClient
{
  position 77 199 121 45;
  position.association CorporateClient__Person:Employees 30,0 25,63;
  position.association CorporateClient__Person:employees 30,0 28,63;
}

class IndividualStudent
{
  position 223 204 152 45;
}

class Person
{
  position 46 25 124 63;
}
@@endexample
