apply plugin: 'groovy'

// #TODO_AH purpose?
repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
	// #TODO get plugin to work
    // compile files('./umple-gradle-plugin-latest.jar')
}

buildscript {
    repositories {
        maven {
            url uri('./')
        }
    }
    dependencies {
	// #TODO_AH seems wrong, expects the plugin jar in a strange location
        classpath group: 'cruise.umple', name: 'UmpleGradlePlugin',
                  version: '0.0.0'
    }
}
apply plugin: 'UmplePlugin'

// Get all dependencies installed
task bootstrap << {
    
	
	
}

// Perform a first build to get umple related stuff installed 
task firstBuild << {
    
	
	
}

// full build
task fullBuild << {
    
	
	
}

// quick build
task quickBuild << {
	
	
	
}

// build only umple
task buildUmple << {
	
	
	
}

// build only umple eclipse plugin
task buildUmpleEclipsePlugin << {
	
	
	
}

// build only umplificator eclipse plugin
task buildUmplificatorEclipsePlugin << {
	
	
	
}

// qaBuildingPage #TODO_AH figure out what this is
task qaBuildingPage << {
    
	
	
}

// qaLandingPage #TODO_AH figure out what this is
task qaLandingPage << {
    
	
	
}

// Turn *.ump code from Umple into *.java
task umpleSelf << {
    
	
	
}

// Compile *.java into byte code
task compileUmple << {
    
	
	
}

// Compile the all testbed programs against the latest umple.jar
task testUmple << {
    
	
	
}

// Compile the Java testbed program against the latest umple.jar
task compileJavaCode << {
    
	
	
}

// Compile the PHP testbed program against the latest umple.jar
task compilePHPCode << {
    
	
	
}

// Compile the Ruby testbed program against the latest umple.jar
task compileRubyCode << {
    
	
	
}

// Test the Java testbed program against the latest umple.jar
task testJava(dependsOn: 'compileJavaCode') << {
   

   
}

// Test the PHP testbed program against the latest umple.jar
task testPHP(dependsOn: 'compilePHPCode') << {
   

   
}

// Test the Ruby testbed program against the latest umple.jar
task testRuby(dependsOn: 'compileRubyCode') << {
   

   
}

// order matters, dependencies need to be specified after task declaration/definition
// #TODO_AH find out if we it's possible to forward declare?
testUmple.dependsOn testJava
testUmple.dependsOn testPHP
testUmple.dependsOn testRuby