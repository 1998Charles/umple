/*
* generated by Xtext
*/
grammar InternalUmple;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package cruise.umple.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cruise.umple.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import cruise.umple.services.UmpleGrammarAccess;

}

@parser::members {
 
 	private UmpleGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(UmpleGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleUmpleModel
entryRuleUmpleModel 
:
{ before(grammarAccess.getUmpleModelRule()); }
	 ruleUmpleModel
{ after(grammarAccess.getUmpleModelRule()); } 
	 EOF 
;

// Rule UmpleModel
ruleUmpleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUmpleModelAccess().getElementsAssignment()); }
(rule__UmpleModel__ElementsAssignment)*
{ after(grammarAccess.getUmpleModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlossary
entryRuleGlossary 
:
{ before(grammarAccess.getGlossaryRule()); }
	 ruleGlossary
{ after(grammarAccess.getGlossaryRule()); } 
	 EOF 
;

// Rule Glossary
ruleGlossary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlossaryAccess().getGroup()); }
(rule__Glossary__Group__0)
{ after(grammarAccess.getGlossaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWord
entryRuleWord 
:
{ before(grammarAccess.getWordRule()); }
	 ruleWord
{ after(grammarAccess.getWordRule()); } 
	 EOF 
;

// Rule Word
ruleWord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWordAccess().getGroup()); }
(rule__Word__Group__0)
{ after(grammarAccess.getWordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenerate
entryRuleGenerate 
:
{ before(grammarAccess.getGenerateRule()); }
	 ruleGenerate
{ after(grammarAccess.getGenerateRule()); } 
	 EOF 
;

// Rule Generate
ruleGenerate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenerateAccess().getGroup()); }
(rule__Generate__Group__0)
{ after(grammarAccess.getGenerateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseStatement
entryRuleUseStatement 
:
{ before(grammarAccess.getUseStatementRule()); }
	 ruleUseStatement
{ after(grammarAccess.getUseStatementRule()); } 
	 EOF 
;

// Rule UseStatement
ruleUseStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseStatementAccess().getGroup()); }
(rule__UseStatement__Group__0)
{ after(grammarAccess.getUseStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespace
entryRuleNamespace 
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceAccess().getGroup()); }
(rule__Namespace__Group__0)
{ after(grammarAccess.getNamespaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDefinition
entryRuleClassDefinition 
:
{ before(grammarAccess.getClassDefinitionRule()); }
	 ruleClassDefinition
{ after(grammarAccess.getClassDefinitionRule()); } 
	 EOF 
;

// Rule ClassDefinition
ruleClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefinitionAccess().getGroup()); }
(rule__ClassDefinition__Group__0)
{ after(grammarAccess.getClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExternalDefinition
entryRuleExternalDefinition 
:
{ before(grammarAccess.getExternalDefinitionRule()); }
	 ruleExternalDefinition
{ after(grammarAccess.getExternalDefinitionRule()); } 
	 EOF 
;

// Rule ExternalDefinition
ruleExternalDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalDefinitionAccess().getGroup()); }
(rule__ExternalDefinition__Group__0)
{ after(grammarAccess.getExternalDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceDefinition
entryRuleInterfaceDefinition 
:
{ before(grammarAccess.getInterfaceDefinitionRule()); }
	 ruleInterfaceDefinition
{ after(grammarAccess.getInterfaceDefinitionRule()); } 
	 EOF 
;

// Rule InterfaceDefinition
ruleInterfaceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getGroup()); }
(rule__InterfaceDefinition__Group__0)
{ after(grammarAccess.getInterfaceDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDefinition
entryRuleAssociationDefinition 
:
{ before(grammarAccess.getAssociationDefinitionRule()); }
	 ruleAssociationDefinition
{ after(grammarAccess.getAssociationDefinitionRule()); } 
	 EOF 
;

// Rule AssociationDefinition
ruleAssociationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getGroup()); }
(rule__AssociationDefinition__Group__0)
{ after(grammarAccess.getAssociationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassContent
entryRuleClassContent 
:
{ before(grammarAccess.getClassContentRule()); }
	 ruleClassContent
{ after(grammarAccess.getClassContentRule()); } 
	 EOF 
;

// Rule ClassContent
ruleClassContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassContentAccess().getAlternatives()); }
(rule__ClassContent__Alternatives)
{ after(grammarAccess.getClassContentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationClassContent
entryRuleAssociationClassContent 
:
{ before(grammarAccess.getAssociationClassContentRule()); }
	 ruleAssociationClassContent
{ after(grammarAccess.getAssociationClassContentRule()); } 
	 EOF 
;

// Rule AssociationClassContent
ruleAssociationClassContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationClassContentAccess().getAlternatives()); }
(rule__AssociationClassContent__Alternatives)
{ after(grammarAccess.getAssociationClassContentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDepend
entryRuleDepend 
:
{ before(grammarAccess.getDependRule()); }
	 ruleDepend
{ after(grammarAccess.getDependRule()); } 
	 EOF 
;

// Rule Depend
ruleDepend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDependAccess().getGroup()); }
(rule__Depend__Group__0)
{ after(grammarAccess.getDependAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociation
entryRuleAssociation 
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationAccess().getGroup()); }
(rule__Association__Group__0)
{ after(grammarAccess.getAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymmetricReflexiveAssociation
entryRuleSymmetricReflexiveAssociation 
:
{ before(grammarAccess.getSymmetricReflexiveAssociationRule()); }
	 ruleSymmetricReflexiveAssociation
{ after(grammarAccess.getSymmetricReflexiveAssociationRule()); } 
	 EOF 
;

// Rule SymmetricReflexiveAssociation
ruleSymmetricReflexiveAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymmetricReflexiveAssociationAccess().getGroup()); }
(rule__SymmetricReflexiveAssociation__Group__0)
{ after(grammarAccess.getSymmetricReflexiveAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInlineAssociation
entryRuleInlineAssociation 
:
{ before(grammarAccess.getInlineAssociationRule()); }
	 ruleInlineAssociation
{ after(grammarAccess.getInlineAssociationRule()); } 
	 EOF 
;

// Rule InlineAssociation
ruleInlineAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInlineAssociationAccess().getGroup()); }
(rule__InlineAssociation__Group__0)
{ after(grammarAccess.getInlineAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAssociationClassDefinition
entryRuleAssociationClassDefinition 
:
{ before(grammarAccess.getAssociationClassDefinitionRule()); }
	 ruleAssociationClassDefinition
{ after(grammarAccess.getAssociationClassDefinitionRule()); } 
	 EOF 
;

// Rule AssociationClassDefinition
ruleAssociationClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getGroup()); }
(rule__AssociationClassDefinition__Group__0)
{ after(grammarAccess.getAssociationClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSoftwarePattern
entryRuleSoftwarePattern 
:
{ before(grammarAccess.getSoftwarePatternRule()); }
	 ruleSoftwarePattern
{ after(grammarAccess.getSoftwarePatternRule()); } 
	 EOF 
;

// Rule SoftwarePattern
ruleSoftwarePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSoftwarePatternAccess().getAlternatives()); }
(rule__SoftwarePattern__Alternatives)
{ after(grammarAccess.getSoftwarePatternAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleisA
entryRuleisA 
:
{ before(grammarAccess.getIsARule()); }
	 ruleisA
{ after(grammarAccess.getIsARule()); } 
	 EOF 
;

// Rule isA
ruleisA
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsAAccess().getGroup()); }
(rule__IsA__Group__0)
{ after(grammarAccess.getIsAAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleton
entryRuleSingleton 
:
{ before(grammarAccess.getSingletonRule()); }
	 ruleSingleton
{ after(grammarAccess.getSingletonRule()); } 
	 EOF 
;

// Rule Singleton
ruleSingleton
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingletonAccess().getGroup()); }
(rule__Singleton__Group__0)
{ after(grammarAccess.getSingletonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyDefinition
entryRuleKeyDefinition 
:
{ before(grammarAccess.getKeyDefinitionRule()); }
	 ruleKeyDefinition
{ after(grammarAccess.getKeyDefinitionRule()); } 
	 EOF 
;

// Rule KeyDefinition
ruleKeyDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyDefinitionAccess().getGroup()); }
(rule__KeyDefinition__Group__0)
{ after(grammarAccess.getKeyDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCodeInjection
entryRuleCodeInjection 
:
{ before(grammarAccess.getCodeInjectionRule()); }
	 ruleCodeInjection
{ after(grammarAccess.getCodeInjectionRule()); } 
	 EOF 
;

// Rule CodeInjection
ruleCodeInjection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCodeInjectionAccess().getAlternatives()); }
(rule__CodeInjection__Alternatives)
{ after(grammarAccess.getCodeInjectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
(rule__Attribute__Alternatives)
{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePosition
entryRulePosition 
:
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionAccess().getAlternatives()); }
(rule__Position__Alternatives)
{ after(grammarAccess.getPositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementPosition
entryRuleElementPosition 
:
{ before(grammarAccess.getElementPositionRule()); }
	 ruleElementPosition
{ after(grammarAccess.getElementPositionRule()); } 
	 EOF 
;

// Rule ElementPosition
ruleElementPosition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementPositionAccess().getGroup()); }
(rule__ElementPosition__Group__0)
{ after(grammarAccess.getElementPositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationPosition
entryRuleAssociationPosition 
:
{ before(grammarAccess.getAssociationPositionRule()); }
	 ruleAssociationPosition
{ after(grammarAccess.getAssociationPositionRule()); } 
	 EOF 
;

// Rule AssociationPosition
ruleAssociationPosition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationPositionAccess().getGroup()); }
(rule__AssociationPosition__Group__0)
{ after(grammarAccess.getAssociationPositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoordinate
entryRuleCoordinate 
:
{ before(grammarAccess.getCoordinateRule()); }
	 ruleCoordinate
{ after(grammarAccess.getCoordinateRule()); } 
	 EOF 
;

// Rule Coordinate
ruleCoordinate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoordinateAccess().getGroup()); }
(rule__Coordinate__Group__0)
{ after(grammarAccess.getCoordinateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUmpleAttributeType
entryRuleUmpleAttributeType 
:
{ before(grammarAccess.getUmpleAttributeTypeRule()); }
	 ruleUmpleAttributeType
{ after(grammarAccess.getUmpleAttributeTypeRule()); } 
	 EOF 
;

// Rule UmpleAttributeType
ruleUmpleAttributeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getAlternatives()); }
(rule__UmpleAttributeType__Alternatives)
{ after(grammarAccess.getUmpleAttributeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUmplePrimitiveType
entryRuleUmplePrimitiveType 
:
{ before(grammarAccess.getUmplePrimitiveTypeRule()); }
	 ruleUmplePrimitiveType
{ after(grammarAccess.getUmplePrimitiveTypeRule()); } 
	 EOF 
;

// Rule UmplePrimitiveType
ruleUmplePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUmplePrimitiveTypeAccess().getAlternatives()); }
(rule__UmplePrimitiveType__Alternatives)
{ after(grammarAccess.getUmplePrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemultiplicity
entryRulemultiplicity 
:
{ before(grammarAccess.getMultiplicityRule()); }
	 rulemultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule multiplicity
rulemultiplicity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityAccess().getAlternatives()); }
(rule__Multiplicity__Alternatives)
{ after(grammarAccess.getMultiplicityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebound
entryRulebound 
:
{ before(grammarAccess.getBoundRule()); }
	 rulebound
{ after(grammarAccess.getBoundRule()); } 
	 EOF 
;

// Rule bound
rulebound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoundAccess().getAlternatives()); }
(rule__Bound__Alternatives)
{ after(grammarAccess.getBoundAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleblock
entryRuleblock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparExpression
entryRuleparExpression 
:
{ before(grammarAccess.getParExpressionRule()); }
	 ruleparExpression
{ after(grammarAccess.getParExpressionRule()); } 
	 EOF 
;

// Rule parExpression
ruleparExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParExpressionAccess().getGroup()); }
(rule__ParExpression__Group__0)
{ after(grammarAccess.getParExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleassignmentOperator
entryRuleassignmentOperator 
:
{ before(grammarAccess.getAssignmentOperatorRule()); }
	 ruleassignmentOperator
{ after(grammarAccess.getAssignmentOperatorRule()); } 
	 EOF 
;

// Rule assignmentOperator
ruleassignmentOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpressionList
entryRuleexpressionList 
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleexpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule expressionList
ruleexpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditionalExpression
entryRuleconditionalExpression 
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleconditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule conditionalExpression
ruleconditionalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
(rule__ConditionalExpression__Group__0)
{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditionalOrExpression
entryRuleconditionalOrExpression 
:
{ before(grammarAccess.getConditionalOrExpressionRule()); }
	 ruleconditionalOrExpression
{ after(grammarAccess.getConditionalOrExpressionRule()); } 
	 EOF 
;

// Rule conditionalOrExpression
ruleconditionalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
(rule__ConditionalOrExpression__Group__0)
{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditionalAndExpression
entryRuleconditionalAndExpression 
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleconditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule conditionalAndExpression
ruleconditionalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
(rule__ConditionalAndExpression__Group__0)
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleequalityExpression
entryRuleequalityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleequalityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule equalityExpression
ruleequalityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelationalExpression
entryRulerelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 rulerelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule relationalExpression
rulerelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelationalOp
entryRulerelationalOp 
:
{ before(grammarAccess.getRelationalOpRule()); }
	 rulerelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule relationalOp
rulerelationalOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
(rule__RelationalOp__Alternatives)
{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadditiveExpression
entryRuleadditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleadditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule additiveExpression
ruleadditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemultiplicativeExpression
entryRulemultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 rulemultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule multiplicativeExpression
rulemultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunaryExpression
entryRuleunaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleunaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule unaryExpression
ruleunaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunaryExpressionNotPlusMinus
entryRuleunaryExpressionNotPlusMinus 
:
{ before(grammarAccess.getUnaryExpressionNotPlusMinusRule()); }
	 ruleunaryExpressionNotPlusMinus
{ after(grammarAccess.getUnaryExpressionNotPlusMinusRule()); } 
	 EOF 
;

// Rule unaryExpressionNotPlusMinus
ruleunaryExpressionNotPlusMinus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives()); }
(rule__UnaryExpressionNotPlusMinus__Alternatives)
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprimary
entryRuleprimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 ruleprimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule primary
ruleprimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleliteral
entryRuleliteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleliteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule literal
ruleliteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRulejavaFunctionDeclaration
entryRulejavaFunctionDeclaration 
:
{ before(grammarAccess.getJavaFunctionDeclarationRule()); }
	 rulejavaFunctionDeclaration
{ after(grammarAccess.getJavaFunctionDeclarationRule()); } 
	 EOF 
;

// Rule javaFunctionDeclaration
rulejavaFunctionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getGroup()); }
(rule__JavaFunctionDeclaration__Group__0)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejavaFunctionDefinition
entryRulejavaFunctionDefinition 
:
{ before(grammarAccess.getJavaFunctionDefinitionRule()); }
	 rulejavaFunctionDefinition
{ after(grammarAccess.getJavaFunctionDefinitionRule()); } 
	 EOF 
;

// Rule javaFunctionDefinition
rulejavaFunctionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaFunctionDefinitionAccess().getGroup()); }
(rule__JavaFunctionDefinition__Group__0)
{ after(grammarAccess.getJavaFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulejavaFunctionCall
entryRulejavaFunctionCall 
:
{ before(grammarAccess.getJavaFunctionCallRule()); }
	 rulejavaFunctionCall
{ after(grammarAccess.getJavaFunctionCallRule()); } 
	 EOF 
;

// Rule javaFunctionCall
rulejavaFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getGroup()); }
(rule__JavaFunctionCall__Group__0)
{ after(grammarAccess.getJavaFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblockStatement
entryRuleblockStatement 
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleblockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule blockStatement
ruleblockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockStatementAccess().getAlternatives()); }
(rule__BlockStatement__Alternatives)
{ after(grammarAccess.getBlockStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelocalVariableDeclarationStatement
entryRulelocalVariableDeclarationStatement 
:
{ before(grammarAccess.getLocalVariableDeclarationStatementRule()); }
	 rulelocalVariableDeclarationStatement
{ after(grammarAccess.getLocalVariableDeclarationStatementRule()); } 
	 EOF 
;

// Rule localVariableDeclarationStatement
rulelocalVariableDeclarationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getGroup()); }
(rule__LocalVariableDeclarationStatement__Group__0)
{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelocalVariableDeclaration
entryRulelocalVariableDeclaration 
:
{ before(grammarAccess.getLocalVariableDeclarationRule()); }
	 rulelocalVariableDeclaration
{ after(grammarAccess.getLocalVariableDeclarationRule()); } 
	 EOF 
;

// Rule localVariableDeclaration
rulelocalVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
(rule__LocalVariableDeclaration__Group__0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariableDeclarators
entryRulevariableDeclarators 
:
{ before(grammarAccess.getVariableDeclaratorsRule()); }
	 rulevariableDeclarators
{ after(grammarAccess.getVariableDeclaratorsRule()); } 
	 EOF 
;

// Rule variableDeclarators
rulevariableDeclarators
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getGroup()); }
(rule__VariableDeclarators__Group__0)
{ after(grammarAccess.getVariableDeclaratorsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariableDeclarator
entryRulevariableDeclarator 
:
{ before(grammarAccess.getVariableDeclaratorRule()); }
	 rulevariableDeclarator
{ after(grammarAccess.getVariableDeclaratorRule()); } 
	 EOF 
;

// Rule variableDeclarator
rulevariableDeclarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
(rule__VariableDeclarator__Group__0)
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleforControl
entryRuleforControl 
:
{ before(grammarAccess.getForControlRule()); }
	 ruleforControl
{ after(grammarAccess.getForControlRule()); } 
	 EOF 
;

// Rule forControl
ruleforControl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForControlAccess().getGroup()); }
(rule__ForControl__Group__0)
{ after(grammarAccess.getForControlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleforInit
entryRuleforInit 
:
{ before(grammarAccess.getForInitRule()); }
	 ruleforInit
{ after(grammarAccess.getForInitRule()); } 
	 EOF 
;

// Rule forInit
ruleforInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForInitAccess().getAlternatives()); }
(rule__ForInit__Alternatives)
{ after(grammarAccess.getForInitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleforUpdate
entryRuleforUpdate 
:
{ before(grammarAccess.getForUpdateRule()); }
	 ruleforUpdate
{ after(grammarAccess.getForUpdateRule()); } 
	 EOF 
;

// Rule forUpdate
ruleforUpdate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForUpdateAccess().getExpressionListParserRuleCall()); }
	ruleexpressionList
{ after(grammarAccess.getForUpdateAccess().getExpressionListParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleattributeType
entryRuleattributeType 
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleattributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule attributeType
ruleattributeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
(rule__AttributeType__Alternatives)
{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleextendedID
entryRuleextendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleextendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule extendedID
ruleextendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCHARS
entryRuleCHARS 
:
{ before(grammarAccess.getCHARSRule()); }
	 ruleCHARS
{ after(grammarAccess.getCHARSRule()); } 
	 EOF 
;

// Rule CHARS
ruleCHARS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCHARSAccess().getAlternatives()); }
(rule__CHARS__Alternatives)
{ after(grammarAccess.getCHARSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getNamespaceParserRuleCall_0()); }
	ruleNamespace
{ after(grammarAccess.getAbstractElementAccess().getNamespaceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getGlossaryParserRuleCall_1()); }
	ruleGlossary
{ after(grammarAccess.getAbstractElementAccess().getGlossaryParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getGenerateParserRuleCall_2()); }
	ruleGenerate
{ after(grammarAccess.getAbstractElementAccess().getGenerateParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getUseStatementParserRuleCall_3()); }
	ruleUseStatement
{ after(grammarAccess.getAbstractElementAccess().getUseStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getEntityParserRuleCall_4()); }
	ruleEntity
{ after(grammarAccess.getAbstractElementAccess().getEntityParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getJavaAssignment_1_0()); }
(rule__Generate__JavaAssignment_1_0)
{ after(grammarAccess.getGenerateAccess().getJavaAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getGenerateAccess().getPhpAssignment_1_1()); }
(rule__Generate__PhpAssignment_1_1)
{ after(grammarAccess.getGenerateAccess().getPhpAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getGenerateAccess().getRubyAssignment_1_2()); }
(rule__Generate__RubyAssignment_1_2)
{ after(grammarAccess.getGenerateAccess().getRubyAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getClassDefinitionParserRuleCall_0()); }
	ruleClassDefinition
{ after(grammarAccess.getEntityAccess().getClassDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getInterfaceDefinitionParserRuleCall_1()); }
	ruleInterfaceDefinition
{ after(grammarAccess.getEntityAccess().getInterfaceDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getExternalDefinitionParserRuleCall_2()); }
	ruleExternalDefinition
{ after(grammarAccess.getEntityAccess().getExternalDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getAssociationDefinitionParserRuleCall_3()); }
	ruleAssociationDefinition
{ after(grammarAccess.getEntityAccess().getAssociationDefinitionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getAssociationClassDefinitionParserRuleCall_4()); }
	ruleAssociationClassDefinition
{ after(grammarAccess.getEntityAccess().getAssociationClassDefinitionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassContent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassContentAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getClassContentAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassContentAccess().getPositionParserRuleCall_1()); }
	rulePosition
{ after(grammarAccess.getClassContentAccess().getPositionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassContentAccess().getSoftwarePatternParserRuleCall_2()); }
	ruleSoftwarePattern
{ after(grammarAccess.getClassContentAccess().getSoftwarePatternParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getClassContentAccess().getDependParserRuleCall_3()); }
	ruleDepend
{ after(grammarAccess.getClassContentAccess().getDependParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getClassContentAccess().getSymmetricReflexiveAssociationParserRuleCall_4()); }
	ruleSymmetricReflexiveAssociation
{ after(grammarAccess.getClassContentAccess().getSymmetricReflexiveAssociationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getClassContentAccess().getInlineAssociationParserRuleCall_5()); }
	ruleInlineAssociation
{ after(grammarAccess.getClassContentAccess().getInlineAssociationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassContent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassContentAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getAssociationClassContentAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssociationClassContentAccess().getPositionParserRuleCall_1()); }
	rulePosition
{ after(grammarAccess.getAssociationClassContentAccess().getPositionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAssociationClassContentAccess().getSoftwarePatternParserRuleCall_2()); }
	ruleSoftwarePattern
{ after(grammarAccess.getAssociationClassContentAccess().getSoftwarePatternParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAssociationClassContentAccess().getDependParserRuleCall_3()); }
	ruleDepend
{ after(grammarAccess.getAssociationClassContentAccess().getDependParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAssociationClassContentAccess().getSymmetricReflexiveAssociationParserRuleCall_4()); }
	ruleSymmetricReflexiveAssociation
{ after(grammarAccess.getAssociationClassContentAccess().getSymmetricReflexiveAssociationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAssociationClassContentAccess().getInlineAssociationParserRuleCall_5()); }
	ruleInlineAssociation
{ after(grammarAccess.getAssociationClassContentAccess().getInlineAssociationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getHyphenMinusGreaterThanSignKeyword_3_0()); }

	'->' 

{ after(grammarAccess.getAssociationAccess().getHyphenMinusGreaterThanSignKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getAssociationAccess().getHyphenMinusHyphenMinusKeyword_3_1()); }

	'--' 

{ after(grammarAccess.getAssociationAccess().getHyphenMinusHyphenMinusKeyword_3_1()); }
)

    |(
{ before(grammarAccess.getAssociationAccess().getLessThanSignHyphenMinusKeyword_3_2()); }

	'<-' 

{ after(grammarAccess.getAssociationAccess().getLessThanSignHyphenMinusKeyword_3_2()); }
)

    |(
{ before(grammarAccess.getAssociationAccess().getGreaterThanSignLessThanSignKeyword_3_3()); }

	'><' 

{ after(grammarAccess.getAssociationAccess().getGreaterThanSignLessThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }

	'->' 

{ after(grammarAccess.getInlineAssociationAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getInlineAssociationAccess().getHyphenMinusHyphenMinusKeyword_2_1()); }

	'--' 

{ after(grammarAccess.getInlineAssociationAccess().getHyphenMinusHyphenMinusKeyword_2_1()); }
)

    |(
{ before(grammarAccess.getInlineAssociationAccess().getLessThanSignHyphenMinusKeyword_2_2()); }

	'<-' 

{ after(grammarAccess.getInlineAssociationAccess().getLessThanSignHyphenMinusKeyword_2_2()); }
)

    |(
{ before(grammarAccess.getInlineAssociationAccess().getGreaterThanSignLessThanSignKeyword_2_3()); }

	'><' 

{ after(grammarAccess.getInlineAssociationAccess().getGreaterThanSignLessThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SoftwarePattern__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSoftwarePatternAccess().getIsAParserRuleCall_0()); }
	ruleisA
{ after(grammarAccess.getSoftwarePatternAccess().getIsAParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSoftwarePatternAccess().getSingletonParserRuleCall_1()); }
	ruleSingleton
{ after(grammarAccess.getSoftwarePatternAccess().getSingletonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSoftwarePatternAccess().getKeyDefinitionParserRuleCall_2()); }
	ruleKeyDefinition
{ after(grammarAccess.getSoftwarePatternAccess().getKeyDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSoftwarePatternAccess().getCodeInjectionParserRuleCall_3()); }
	ruleCodeInjection
{ after(grammarAccess.getSoftwarePatternAccess().getCodeInjectionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getGroup_0()); }
(rule__CodeInjection__Group_0__0)
{ after(grammarAccess.getCodeInjectionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCodeInjectionAccess().getGroup_1()); }
(rule__CodeInjection__Group_1__0)
{ after(grammarAccess.getCodeInjectionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_0()); }
(rule__Attribute__Group_0__0)
{ after(grammarAccess.getAttributeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
(rule__Attribute__Group_1__0)
{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_1_2_0()); }
(rule__Attribute__Group_1_2_0__0)
{ after(grammarAccess.getAttributeAccess().getGroup_1_2_0()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getGroup_1_2_1()); }
(rule__Attribute__Group_1_2_1__0)
{ after(grammarAccess.getAttributeAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionAccess().getAssociationPositionParserRuleCall_0()); }
	ruleAssociationPosition
{ after(grammarAccess.getPositionAccess().getAssociationPositionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPositionAccess().getElementPositionParserRuleCall_1()); }
	ruleElementPosition
{ after(grammarAccess.getPositionAccess().getElementPositionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UmpleAttributeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getDateKeyword_0()); }

	'Date' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getDateKeyword_0()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getTimeKeyword_1()); }

	'Time' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getTimeKeyword_1()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getDoubleKeyword_2()); }

	'Double' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getDoubleKeyword_2()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getDoubleKeyword_3()); }

	'double' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getDoubleKeyword_3()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getIntegerKeyword_4()); }

	'Integer' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getIntegerKeyword_4()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getIntegerKeyword_5()); }

	'integer' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getIntegerKeyword_5()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getIntKeyword_6()); }

	'int' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getIntKeyword_6()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getBooleanKeyword_7()); }

	'Boolean' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getBooleanKeyword_7()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getBooleanKeyword_8()); }

	'boolean' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getBooleanKeyword_8()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getStringKeyword_9()); }

	'String' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getStringKeyword_9()); }
)

    |(
{ before(grammarAccess.getUmpleAttributeTypeAccess().getStringKeyword_10()); }

	'string' 

{ after(grammarAccess.getUmpleAttributeTypeAccess().getStringKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UmplePrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUmplePrimitiveTypeAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getUmplePrimitiveTypeAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUmplePrimitiveTypeAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getUmplePrimitiveTypeAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getBoundParserRuleCall_0()); }
	rulebound
{ after(grammarAccess.getMultiplicityAccess().getBoundParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMultiplicityAccess().getGroup_1()); }
(rule__Multiplicity__Group_1__0)
{ after(grammarAccess.getMultiplicityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getBoundAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBoundAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getBoundAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); }

	'+=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); }

	'-=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }

	'==' 

{ after(grammarAccess.getEqualityExpressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }

	'!=' 

{ after(grammarAccess.getEqualityExpressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_0()); }

	'<=' 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_2()); }

	'>=' 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getSolidusKeyword_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getSolidusKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getPercentSignKeyword_1_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getPercentSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
(rule__UnaryExpression__Group_1__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_2()); }
(rule__UnaryExpression__Group_2__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_3()); }
(rule__UnaryExpression__Group_3__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getExp2Assignment_4()); }
(rule__UnaryExpression__Exp2Assignment_4)
{ after(grammarAccess.getUnaryExpressionAccess().getExp2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_0()); }
(rule__UnaryExpressionNotPlusMinus__Group_0__0)
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_1()); }
(rule__UnaryExpressionNotPlusMinus__Group_1__0)
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_2()); }
(rule__UnaryExpressionNotPlusMinus__Group_2__0)
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPlusSignPlusSignKeyword_2_1_0()); }

	'++' 

{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPlusSignPlusSignKeyword_2_1_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getHyphenMinusHyphenMinusKeyword_2_1_1()); }

	'--' 

{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getHyphenMinusHyphenMinusKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getParExpressionParserRuleCall_0()); }
	ruleparExpression
{ after(grammarAccess.getPrimaryAccess().getParExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getLiteralParserRuleCall_1()); }
	ruleliteral
{ after(grammarAccess.getPrimaryAccess().getLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getDOUBLEParserRuleCall_1()); }
	ruleDOUBLE
{ after(grammarAccess.getLiteralAccess().getDOUBLEParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getExtendedIDParserRuleCall_3()); }
	ruleextendedID
{ after(grammarAccess.getLiteralAccess().getExtendedIDParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getJavaFunctionCallParserRuleCall_4()); }
	rulejavaFunctionCall
{ after(grammarAccess.getLiteralAccess().getJavaFunctionCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getTrueKeyword_5()); }

	'true' 

{ after(grammarAccess.getLiteralAccess().getTrueKeyword_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getTRUEKeyword_6()); }

	'TRUE' 

{ after(grammarAccess.getLiteralAccess().getTRUEKeyword_6()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFalseKeyword_7()); }

	'false' 

{ after(grammarAccess.getLiteralAccess().getFalseKeyword_7()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFALSEKeyword_8()); }

	'FALSE' 

{ after(grammarAccess.getLiteralAccess().getFALSEKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getPublicKeyword_1_0()); }

	'public' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getPublicKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getPrivateKeyword_1_1()); }

	'private' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getPrivateKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getProtectedKeyword_1_2()); }

	'protected' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getProtectedKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getReturnTypeAssignment_2_0()); }
(rule__JavaFunctionDeclaration__ReturnTypeAssignment_2_0)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getReturnTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getVoidKeyword_2_1()); }

	'void' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getVoidKeyword_2_1()); }
)

    |(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getReferenceTypeAssignment_2_2()); }
(rule__JavaFunctionDeclaration__ReferenceTypeAssignment_2_2)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getReferenceTypeAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0()); }
(rule__JavaFunctionDeclaration__Group_4_0__0)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_4_1()); }

	'()' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getGroup_1_0()); }
(rule__JavaFunctionCall__Group_1_0__0)
{ after(grammarAccess.getJavaFunctionCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getJavaFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()); }

	'()' 

{ after(grammarAccess.getJavaFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_0()); }
	rulestatement
{ after(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationStatementParserRuleCall_1()); }
	rulelocalVariableDeclarationStatement
{ after(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBlockParserRuleCall_0()); }
	ruleblock
{ after(grammarAccess.getStatementAccess().getBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2()); }
(rule__Statement__Group_2__0)
{ after(grammarAccess.getStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_3()); }
(rule__Statement__Group_3__0)
{ after(grammarAccess.getStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_4()); }
(rule__Statement__Group_4__0)
{ after(grammarAccess.getStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_6()); }
(rule__Statement__Group_6__0)
{ after(grammarAccess.getStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_7()); }
(rule__Statement__Group_7__0)
{ after(grammarAccess.getStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_8()); }
(rule__Statement__Group_8__0)
{ after(grammarAccess.getStatementAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getGroup_0()); }
(rule__ForInit__Group_0__0)
{ after(grammarAccess.getForInitAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getForInitAccess().getLocalVariableDeclarationParserRuleCall_1()); }
	rulelocalVariableDeclaration
{ after(grammarAccess.getForInitAccess().getLocalVariableDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getDateKeyword_0()); }

	'Date' 

{ after(grammarAccess.getAttributeTypeAccess().getDateKeyword_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getTimeKeyword_1()); }

	'Time' 

{ after(grammarAccess.getAttributeTypeAccess().getTimeKeyword_1()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDoubleKeyword_2()); }

	'Double' 

{ after(grammarAccess.getAttributeTypeAccess().getDoubleKeyword_2()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDoubleKeyword_3()); }

	'double' 

{ after(grammarAccess.getAttributeTypeAccess().getDoubleKeyword_3()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getIntegerKeyword_4()); }

	'Integer' 

{ after(grammarAccess.getAttributeTypeAccess().getIntegerKeyword_4()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getIntegerKeyword_5()); }

	'integer' 

{ after(grammarAccess.getAttributeTypeAccess().getIntegerKeyword_5()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getIntKeyword_6()); }

	'int' 

{ after(grammarAccess.getAttributeTypeAccess().getIntKeyword_6()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getBooleanKeyword_7()); }

	'Boolean' 

{ after(grammarAccess.getAttributeTypeAccess().getBooleanKeyword_7()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getBooleanKeyword_8()); }

	'boolean' 

{ after(grammarAccess.getAttributeTypeAccess().getBooleanKeyword_8()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getStringKeyword_9()); }

	'String' 

{ after(grammarAccess.getAttributeTypeAccess().getStringKeyword_9()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getStringKeyword_10()); }

	'string' 

{ after(grammarAccess.getAttributeTypeAccess().getStringKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CHARS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCHARSAccess().getExtendedIDParserRuleCall_0()); }
	ruleextendedID
{ after(grammarAccess.getCHARSAccess().getExtendedIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCHARSAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getCHARSAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getIMMUTABLEEnumLiteralDeclaration_0()); }
(	'immutable' 
)
{ after(grammarAccess.getModifierAccess().getIMMUTABLEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getSETTABLEEnumLiteralDeclaration_1()); }
(	'settable' 
)
{ after(grammarAccess.getModifierAccess().getSETTABLEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getINTERNALEnumLiteralDeclaration_2()); }
(	'internal' 
)
{ after(grammarAccess.getModifierAccess().getINTERNALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getDEFAULTEDEnumLiteralDeclaration_3()); }
(	'defaulted' 
)
{ after(grammarAccess.getModifierAccess().getDEFAULTEDEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getCONSTEnumLiteralDeclaration_4()); }
(	'const' 
)
{ after(grammarAccess.getModifierAccess().getCONSTEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Glossary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Glossary__Group__0__Impl
	rule__Glossary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlossaryAccess().getGlossaryAction_0()); }
(

)
{ after(grammarAccess.getGlossaryAccess().getGlossaryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Glossary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Glossary__Group__1__Impl
	rule__Glossary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlossaryAccess().getGlossaryKeyword_1()); }

	'glossary' 

{ after(grammarAccess.getGlossaryAccess().getGlossaryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Glossary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Glossary__Group__2__Impl
	rule__Glossary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlossaryAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGlossaryAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Glossary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Glossary__Group__3__Impl
	rule__Glossary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlossaryAccess().getWordsAssignment_3()); }
(rule__Glossary__WordsAssignment_3)*
{ after(grammarAccess.getGlossaryAccess().getWordsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Glossary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Glossary__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlossaryAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getGlossaryAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Word__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group__0__Impl
	rule__Word__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getSingularAssignment_0()); }
(rule__Word__SingularAssignment_0)
{ after(grammarAccess.getWordAccess().getSingularAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Word__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group__1__Impl
	rule__Word__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getWordAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Word__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group__2__Impl
	rule__Word__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getPluralAssignment_2()); }
(rule__Word__PluralAssignment_2)
{ after(grammarAccess.getWordAccess().getPluralAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Word__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getWordAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Generate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate__Group__0__Impl
	rule__Generate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getGenerateKeyword_0()); }

	'generate' 

{ after(grammarAccess.getGenerateAccess().getGenerateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate__Group__1__Impl
	rule__Generate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getAlternatives_1()); }
(rule__Generate__Alternatives_1)
{ after(grammarAccess.getGenerateAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getGenerateAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseStatement__Group__0__Impl
	rule__UseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseStatementAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getUseStatementAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseStatement__Group__1__Impl
	rule__UseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseStatementAccess().getFileAssignment_1()); }
(rule__UseStatement__FileAssignment_1)
{ after(grammarAccess.getUseStatementAccess().getFileAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getUseStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Namespace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__0__Impl
	rule__Namespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__1__Impl
	rule__Namespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getValueAssignment_1()); }
(rule__Namespace__ValueAssignment_1)
{ after(grammarAccess.getNamespaceAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getNamespaceAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__0__Impl
	rule__ClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassDefinitionAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__1__Impl
	rule__ClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getNameAssignment_1()); }
(rule__ClassDefinition__NameAssignment_1)
{ after(grammarAccess.getClassDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__2__Impl
	rule__ClassDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getClassDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__3__Impl
	rule__ClassDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassContentAssignment_3()); }
(rule__ClassDefinition__ClassContentAssignment_3)*
{ after(grammarAccess.getClassDefinitionAccess().getClassContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getClassDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExternalDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDefinition__Group__0__Impl
	rule__ExternalDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getExternalDefinitionAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDefinition__Group__1__Impl
	rule__ExternalDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getNameAssignment_1()); }
(rule__ExternalDefinition__NameAssignment_1)
{ after(grammarAccess.getExternalDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDefinition__Group__2__Impl
	rule__ExternalDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getExternalDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDefinition__Group__3__Impl
	rule__ExternalDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getClassContentAssignment_3()); }
(rule__ExternalDefinition__ClassContentAssignment_3)*
{ after(grammarAccess.getExternalDefinitionAccess().getClassContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getExternalDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDefinition__Group__0__Impl
	rule__InterfaceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getInterfaceKeyword_0()); }

	'interface' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDefinition__Group__1__Impl
	rule__InterfaceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getNameAssignment_1()); }
(rule__InterfaceDefinition__NameAssignment_1)
{ after(grammarAccess.getInterfaceDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDefinition__Group__2__Impl
	rule__InterfaceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDefinition__Group__3__Impl
	rule__InterfaceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getDependAssignment_3()); }
(rule__InterfaceDefinition__DependAssignment_3)*
{ after(grammarAccess.getInterfaceDefinitionAccess().getDependAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssociationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__0__Impl
	rule__AssociationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getAssociationKeyword_0()); }

	'association' 

{ after(grammarAccess.getAssociationDefinitionAccess().getAssociationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__1__Impl
	rule__AssociationDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getNameAssignment_1()); }
(rule__AssociationDefinition__NameAssignment_1)
{ after(grammarAccess.getAssociationDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__2__Impl
	rule__AssociationDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAssociationDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__3__Impl
	rule__AssociationDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getAssociationAssignment_3()); }
(rule__AssociationDefinition__AssociationAssignment_3)*
{ after(grammarAccess.getAssociationDefinitionAccess().getAssociationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAssociationDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Depend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Depend__Group__0__Impl
	rule__Depend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Depend__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependAccess().getDependKeyword_0()); }

	'depend' 

{ after(grammarAccess.getDependAccess().getDependKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Depend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Depend__Group__1__Impl
	rule__Depend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Depend__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependAccess().getNameAssignment_1()); }
(rule__Depend__NameAssignment_1)
{ after(grammarAccess.getDependAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Depend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Depend__Group__2__Impl
	rule__Depend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Depend__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependAccess().getFullStopAsteriskKeyword_2()); }
(
	'.*' 
)?
{ after(grammarAccess.getDependAccess().getFullStopAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Depend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Depend__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Depend__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDependAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Association__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getMultiplicityParserRuleCall_0()); }
	rulemultiplicity
{ after(grammarAccess.getAssociationAccess().getMultiplicityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getType1Assignment_1()); }
(rule__Association__Type1Assignment_1)
{ after(grammarAccess.getAssociationAccess().getType1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRolename1Assignment_2()); }
(rule__Association__Rolename1Assignment_2)?
{ after(grammarAccess.getAssociationAccess().getRolename1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__3__Impl
	rule__Association__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getAlternatives_3()); }
(rule__Association__Alternatives_3)
{ after(grammarAccess.getAssociationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__4__Impl
	rule__Association__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getMultiplicityParserRuleCall_4()); }
	rulemultiplicity
{ after(grammarAccess.getAssociationAccess().getMultiplicityParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__5__Impl
	rule__Association__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getType2Assignment_5()); }
(rule__Association__Type2Assignment_5)
{ after(grammarAccess.getAssociationAccess().getType2Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__6__Impl
	rule__Association__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRolename2Assignment_6()); }
(rule__Association__Rolename2Assignment_6)?
{ after(grammarAccess.getAssociationAccess().getRolename2Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getAssociationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SymmetricReflexiveAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricReflexiveAssociation__Group__0__Impl
	rule__SymmetricReflexiveAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricReflexiveAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricReflexiveAssociationAccess().getMultiplicityParserRuleCall_0()); }
	rulemultiplicity
{ after(grammarAccess.getSymmetricReflexiveAssociationAccess().getMultiplicityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymmetricReflexiveAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricReflexiveAssociation__Group__1__Impl
	rule__SymmetricReflexiveAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricReflexiveAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricReflexiveAssociationAccess().getSelfKeyword_1()); }

	'self' 

{ after(grammarAccess.getSymmetricReflexiveAssociationAccess().getSelfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymmetricReflexiveAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricReflexiveAssociation__Group__2__Impl
	rule__SymmetricReflexiveAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricReflexiveAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricReflexiveAssociationAccess().getRolenameAssignment_2()); }
(rule__SymmetricReflexiveAssociation__RolenameAssignment_2)
{ after(grammarAccess.getSymmetricReflexiveAssociationAccess().getRolenameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymmetricReflexiveAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymmetricReflexiveAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricReflexiveAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricReflexiveAssociationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSymmetricReflexiveAssociationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InlineAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__0__Impl
	rule__InlineAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getMultiplicityParserRuleCall_0()); }
	rulemultiplicity
{ after(grammarAccess.getInlineAssociationAccess().getMultiplicityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__1__Impl
	rule__InlineAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getRolename1Assignment_1()); }
(rule__InlineAssociation__Rolename1Assignment_1)?
{ after(grammarAccess.getInlineAssociationAccess().getRolename1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__2__Impl
	rule__InlineAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getAlternatives_2()); }
(rule__InlineAssociation__Alternatives_2)
{ after(grammarAccess.getInlineAssociationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__3__Impl
	rule__InlineAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getMultiplicityParserRuleCall_3()); }
	rulemultiplicity
{ after(grammarAccess.getInlineAssociationAccess().getMultiplicityParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__4__Impl
	rule__InlineAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getTypeAssignment_4()); }
(rule__InlineAssociation__TypeAssignment_4)
{ after(grammarAccess.getInlineAssociationAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineAssociation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__5__Impl
	rule__InlineAssociation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getRolename2Assignment_5()); }
(rule__InlineAssociation__Rolename2Assignment_5)?
{ after(grammarAccess.getInlineAssociationAccess().getRolename2Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineAssociation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineAssociation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getInlineAssociationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__AssociationClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationClassDefinition__Group__0__Impl
	rule__AssociationClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassKeyword_0()); }

	'associationClass' 

{ after(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationClassDefinition__Group__1__Impl
	rule__AssociationClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getNameAssignment_1()); }
(rule__AssociationClassDefinition__NameAssignment_1)
{ after(grammarAccess.getAssociationClassDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationClassDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationClassDefinition__Group__2__Impl
	rule__AssociationClassDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAssociationClassDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationClassDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationClassDefinition__Group__3__Impl
	rule__AssociationClassDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassContentAssignment_3()); }
(rule__AssociationClassDefinition__AssociationClassContentAssignment_3)*
{ after(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationClassDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationClassDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAssociationClassDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IsA__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsA__Group__0__Impl
	rule__IsA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getIsAKeyword_0()); }

	'isA' 

{ after(grammarAccess.getIsAAccess().getIsAKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsA__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsA__Group__1__Impl
	rule__IsA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getExtendsClassAssignment_1()); }
(rule__IsA__ExtendsClassAssignment_1)
{ after(grammarAccess.getIsAAccess().getExtendsClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsA__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsA__Group__2__Impl
	rule__IsA__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getGroup_2()); }
(rule__IsA__Group_2__0)*
{ after(grammarAccess.getIsAAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsA__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsA__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getIsAAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IsA__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsA__Group_2__0__Impl
	rule__IsA__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getIsAAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsA__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsA__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getExtendsClassAssignment_2_1()); }
(rule__IsA__ExtendsClassAssignment_2_1)
{ after(grammarAccess.getIsAAccess().getExtendsClassAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Singleton__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Singleton__Group__0__Impl
	rule__Singleton__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonAccess().getSingletonAssignment_0()); }
(rule__Singleton__SingletonAssignment_0)
{ after(grammarAccess.getSingletonAccess().getSingletonAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Singleton__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Singleton__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getSingletonAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeyDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group__0__Impl
	rule__KeyDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getKeyKeyword_0()); }

	'key' 

{ after(grammarAccess.getKeyDefinitionAccess().getKeyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group__1__Impl
	rule__KeyDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getKeyAction_1()); }
(

)
{ after(grammarAccess.getKeyDefinitionAccess().getKeyAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group__2__Impl
	rule__KeyDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getKeyDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group__3__Impl
	rule__KeyDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getGroup_3()); }
(rule__KeyDefinition__Group_3__0)?
{ after(grammarAccess.getKeyDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getKeyDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__KeyDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group_3__0__Impl
	rule__KeyDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getKeysAssignment_3_0()); }
(rule__KeyDefinition__KeysAssignment_3_0)
{ after(grammarAccess.getKeyDefinitionAccess().getKeysAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getGroup_3_1()); }
(rule__KeyDefinition__Group_3_1__0)*
{ after(grammarAccess.getKeyDefinitionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeyDefinition__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group_3_1__0__Impl
	rule__KeyDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getKeyDefinitionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyDefinition__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyDefinition__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getKeysAssignment_3_1_1()); }
(rule__KeyDefinition__KeysAssignment_3_1_1)
{ after(grammarAccess.getKeyDefinitionAccess().getKeysAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CodeInjection__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CodeInjection__Group_0__0__Impl
	rule__CodeInjection__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getBeforeKeyword_0_0()); }

	'before' 

{ after(grammarAccess.getCodeInjectionAccess().getBeforeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CodeInjection__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CodeInjection__Group_0__1__Impl
	rule__CodeInjection__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getNameAssignment_0_1()); }
(rule__CodeInjection__NameAssignment_0_1)
{ after(grammarAccess.getCodeInjectionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CodeInjection__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CodeInjection__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getCodeAssignment_0_2()); }
(rule__CodeInjection__CodeAssignment_0_2)
{ after(grammarAccess.getCodeInjectionAccess().getCodeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CodeInjection__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CodeInjection__Group_1__0__Impl
	rule__CodeInjection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getAfterKeyword_1_0()); }

	'after' 

{ after(grammarAccess.getCodeInjectionAccess().getAfterKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CodeInjection__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CodeInjection__Group_1__1__Impl
	rule__CodeInjection__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getNameAssignment_1_1()); }
(rule__CodeInjection__NameAssignment_1_1)
{ after(grammarAccess.getCodeInjectionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CodeInjection__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CodeInjection__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getCodeAssignment_1_2()); }
(rule__CodeInjection__CodeAssignment_1_2)
{ after(grammarAccess.getCodeInjectionAccess().getCodeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_0__0__Impl
	rule__Attribute__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAutouniqueAssignment_0_0()); }
(rule__Attribute__AutouniqueAssignment_0_0)
{ after(grammarAccess.getAttributeAccess().getAutouniqueAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_0__1__Impl
	rule__Attribute__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_0_1()); }
(rule__Attribute__NameAssignment_0_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getSemicolonKeyword_0_2()); }

	';' 

{ after(grammarAccess.getAttributeAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getUniqueAssignment_1_0()); }
(rule__Attribute__UniqueAssignment_1_0)?
{ after(grammarAccess.getAttributeAccess().getUniqueAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1__1__Impl
	rule__Attribute__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getModifierAssignment_1_1()); }
(rule__Attribute__ModifierAssignment_1_1)?
{ after(grammarAccess.getAttributeAccess().getModifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1__2__Impl
	rule__Attribute__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAlternatives_1_2()); }
(rule__Attribute__Alternatives_1_2)?
{ after(grammarAccess.getAttributeAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1__3__Impl
	rule__Attribute__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1_3()); }
(rule__Attribute__NameAssignment_1_3)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1__4__Impl
	rule__Attribute__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_1_4()); }
(rule__Attribute__Group_1_4__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getSemicolonKeyword_1_5()); }

	';' 

{ after(grammarAccess.getAttributeAccess().getSemicolonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Attribute__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1_2_0__0__Impl
	rule__Attribute__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_1_2_0_0()); }
(rule__Attribute__TypeAssignment_1_2_0_0)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getListAssignment_1_2_0_1()); }
(rule__Attribute__ListAssignment_1_2_0_1)?
{ after(grammarAccess.getAttributeAccess().getListAssignment_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1_2_1__0__Impl
	rule__Attribute__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getObjectAssignment_1_2_1_0()); }
(rule__Attribute__ObjectAssignment_1_2_1_0)
{ after(grammarAccess.getAttributeAccess().getObjectAssignment_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getListAssignment_1_2_1_1()); }
(rule__Attribute__ListAssignment_1_2_1_1)?
{ after(grammarAccess.getAttributeAccess().getListAssignment_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1_4__0__Impl
	rule__Attribute__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_4_0()); }

	'=' 

{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueAssignment_1_4_1()); }
(rule__Attribute__ValueAssignment_1_4_1)
{ after(grammarAccess.getAttributeAccess().getValueAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementPosition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementPosition__Group__0__Impl
	rule__ElementPosition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getPositionKeyword_0()); }

	'position' 

{ after(grammarAccess.getElementPositionAccess().getPositionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementPosition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementPosition__Group__1__Impl
	rule__ElementPosition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getXAssignment_1()); }
(rule__ElementPosition__XAssignment_1)
{ after(grammarAccess.getElementPositionAccess().getXAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementPosition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementPosition__Group__2__Impl
	rule__ElementPosition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getYAssignment_2()); }
(rule__ElementPosition__YAssignment_2)
{ after(grammarAccess.getElementPositionAccess().getYAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementPosition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementPosition__Group__3__Impl
	rule__ElementPosition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getWidthAssignment_3()); }
(rule__ElementPosition__WidthAssignment_3)
{ after(grammarAccess.getElementPositionAccess().getWidthAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementPosition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementPosition__Group__4__Impl
	rule__ElementPosition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getHeightAssignment_4()); }
(rule__ElementPosition__HeightAssignment_4)
{ after(grammarAccess.getElementPositionAccess().getHeightAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementPosition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementPosition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getElementPositionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AssociationPosition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationPosition__Group__0__Impl
	rule__AssociationPosition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getPositionAssociationKeyword_0()); }

	'position.association' 

{ after(grammarAccess.getAssociationPositionAccess().getPositionAssociationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationPosition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationPosition__Group__1__Impl
	rule__AssociationPosition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getNameAssignment_1()); }
(rule__AssociationPosition__NameAssignment_1)
{ after(grammarAccess.getAssociationPositionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationPosition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationPosition__Group__2__Impl
	rule__AssociationPosition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getC1Assignment_2()); }
(rule__AssociationPosition__C1Assignment_2)
{ after(grammarAccess.getAssociationPositionAccess().getC1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationPosition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationPosition__Group__3__Impl
	rule__AssociationPosition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getC2Assignment_3()); }
(rule__AssociationPosition__C2Assignment_3)
{ after(grammarAccess.getAssociationPositionAccess().getC2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationPosition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationPosition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getAssociationPositionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Coordinate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Coordinate__Group__0__Impl
	rule__Coordinate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinateAccess().getXAssignment_0()); }
(rule__Coordinate__XAssignment_0)
{ after(grammarAccess.getCoordinateAccess().getXAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Coordinate__Group__1__Impl
	rule__Coordinate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinateAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getCoordinateAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Coordinate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinateAccess().getYAssignment_2()); }
(rule__Coordinate__YAssignment_2)
{ after(grammarAccess.getCoordinateAccess().getYAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Multiplicity__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1__0__Impl
	rule__Multiplicity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getBoundParserRuleCall_1_0()); }
	rulebound
{ after(grammarAccess.getMultiplicityAccess().getBoundParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1__1__Impl
	rule__Multiplicity__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1()); }

	'..' 

{ after(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicity__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityAccess().getBoundParserRuleCall_1_2()); }
	rulebound
{ after(grammarAccess.getMultiplicityAccess().getBoundParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlocksAssignment_1()); }
(rule__Block__BlocksAssignment_1)*
{ after(grammarAccess.getBlockAccess().getBlocksAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParExpression__Group__0__Impl
	rule__ParExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParExpression__Group__1__Impl
	rule__ParExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
{ after(grammarAccess.getParExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0()); }
(rule__ExpressionList__ExpressionsAssignment_0)
{ after(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
(rule__ExpressionList__Group_1__0)*
{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1_1()); }
(rule__ExpressionList__ExpressionsAssignment_1_1)
{ after(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression1Assignment_0()); }
(rule__Expression__Expression1Assignment_0)
{ after(grammarAccess.getExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentOperatorParserRuleCall_1_0()); }
	ruleassignmentOperator
{ after(grammarAccess.getExpressionAccess().getAssignmentOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression2Assignment_1_1()); }
(rule__Expression__Expression2Assignment_1_1)
{ after(grammarAccess.getExpressionAccess().getExpression2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpression1Assignment_0()); }
(rule__ConditionalExpression__Expression1Assignment_0)
{ after(grammarAccess.getConditionalExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
(rule__ConditionalExpression__Group_1__0)?
{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0()); }

	'?' 

{ after(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpression2Assignment_1_1()); }
(rule__ConditionalExpression__Expression2Assignment_1_1)
{ after(grammarAccess.getConditionalExpressionAccess().getExpression2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpression3Assignment_1_3()); }
(rule__ConditionalExpression__Expression3Assignment_1_3)
{ after(grammarAccess.getConditionalExpressionAccess().getExpression3Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConditionalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group__0__Impl
	rule__ConditionalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getExpression1Assignment_0()); }
(rule__ConditionalOrExpression__Expression1Assignment_0)
{ after(grammarAccess.getConditionalOrExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
(rule__ConditionalOrExpression__Group_1__0)*
{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__0__Impl
	rule__ConditionalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getConditionalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getExpressionRestAssignment_1_1()); }
(rule__ConditionalOrExpression__ExpressionRestAssignment_1_1)
{ after(grammarAccess.getConditionalOrExpressionAccess().getExpressionRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getExpression1Assignment_0()); }
(rule__ConditionalAndExpression__Expression1Assignment_0)
{ after(grammarAccess.getConditionalAndExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
(rule__ConditionalAndExpression__Group_1__0)*
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__0__Impl
	rule__ConditionalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getConditionalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getExpressionRestAssignment_1_1()); }
(rule__ConditionalAndExpression__ExpressionRestAssignment_1_1)
{ after(grammarAccess.getConditionalAndExpressionAccess().getExpressionRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpression1Assignment_0()); }
(rule__EqualityExpression__Expression1Assignment_0)
{ after(grammarAccess.getEqualityExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_0()); }
(rule__EqualityExpression__Alternatives_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpressionRestAssignment_1_1()); }
(rule__EqualityExpression__ExpressionRestAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getExpressionRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpression1Assignment_0()); }
(rule__RelationalExpression__Expression1Assignment_0)
{ after(grammarAccess.getRelationalExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRelationalOpParserRuleCall_1_0()); }
	rulerelationalOp
{ after(grammarAccess.getRelationalExpressionAccess().getRelationalOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpressionRestAssignment_1_1()); }
(rule__RelationalExpression__ExpressionRestAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getExpressionRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpression1Assignment_0()); }
(rule__AdditiveExpression__Expression1Assignment_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_0()); }
(rule__AdditiveExpression__Alternatives_1_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpressionRestAssignment_1_1()); }
(rule__AdditiveExpression__ExpressionRestAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getExpressionRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpression1Assignment_0()); }
(rule__MultiplicativeExpression__Expression1Assignment_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1_0()); }
(rule__MultiplicativeExpression__Alternatives_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpressionRestAssignment_1_1()); }
(rule__MultiplicativeExpression__ExpressionRestAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpressionRestAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getUnaryExpressionAccess().getPlusSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_0_1()); }
(rule__UnaryExpression__Exp1Assignment_0_1)
{ after(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getHyphenMinusKeyword_1_0()); }

	'-' 

{ after(grammarAccess.getUnaryExpressionAccess().getHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_1_1()); }
(rule__UnaryExpression__Exp1Assignment_1_1)
{ after(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__0__Impl
	rule__UnaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPlusSignPlusSignKeyword_2_0()); }

	'++' 

{ after(grammarAccess.getUnaryExpressionAccess().getPlusSignPlusSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_2_1()); }
(rule__UnaryExpression__Exp1Assignment_2_1)
{ after(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__0__Impl
	rule__UnaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getHyphenMinusHyphenMinusKeyword_3_0()); }

	'--' 

{ after(grammarAccess.getUnaryExpressionAccess().getHyphenMinusHyphenMinusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_3_1()); }
(rule__UnaryExpression__Exp1Assignment_3_1)
{ after(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpressionNotPlusMinus__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpressionNotPlusMinus__Group_0__0__Impl
	rule__UnaryExpressionNotPlusMinus__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getTildeKeyword_0_0()); }

	'~' 

{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getTildeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpressionNotPlusMinus__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpressionNotPlusMinus__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getUnaryExpressionParserRuleCall_0_1()); }
	ruleunaryExpression
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getUnaryExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpressionNotPlusMinus__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpressionNotPlusMinus__Group_1__0__Impl
	rule__UnaryExpressionNotPlusMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getExclamationMarkKeyword_1_0()); }

	'!' 

{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getExclamationMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpressionNotPlusMinus__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpressionNotPlusMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getUnaryExpressionParserRuleCall_1_1()); }
	ruleunaryExpression
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getUnaryExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpressionNotPlusMinus__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpressionNotPlusMinus__Group_2__0__Impl
	rule__UnaryExpressionNotPlusMinus__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPrimaryParserRuleCall_2_0()); }
	ruleprimary
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPrimaryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpressionNotPlusMinus__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpressionNotPlusMinus__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives_2_1()); }
(rule__UnaryExpressionNotPlusMinus__Alternatives_2_1)?
{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JavaFunctionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group__0__Impl
	rule__JavaFunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getStaticKeyword_0()); }
(
	'static' 
)?
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getStaticKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group__1__Impl
	rule__JavaFunctionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_1()); }
(rule__JavaFunctionDeclaration__Alternatives_1)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group__2__Impl
	rule__JavaFunctionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_2()); }
(rule__JavaFunctionDeclaration__Alternatives_2)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group__3__Impl
	rule__JavaFunctionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getNameAssignment_3()); }
(rule__JavaFunctionDeclaration__NameAssignment_3)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_4()); }
(rule__JavaFunctionDeclaration__Alternatives_4)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JavaFunctionDeclaration__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0__0__Impl
	rule__JavaFunctionDeclaration__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getLeftParenthesisKeyword_4_0_0()); }

	'(' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getLeftParenthesisKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0__1__Impl
	rule__JavaFunctionDeclaration__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0_1()); }
(rule__JavaFunctionDeclaration__Group_4_0_1__0)?
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getRightParenthesisKeyword_4_0_2()); }

	')' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getRightParenthesisKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JavaFunctionDeclaration__Group_4_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0_1__0__Impl
	rule__JavaFunctionDeclaration__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAssignment_4_0_1_0()); }
(rule__JavaFunctionDeclaration__ArgListAssignment_4_0_1_0)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAssignment_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group_4_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0_1__1__Impl
	rule__JavaFunctionDeclaration__Group_4_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDAssignment_4_0_1_1()); }
(rule__JavaFunctionDeclaration__ArgListIDAssignment_4_0_1_1)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDAssignment_4_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group_4_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0_1_2()); }
(rule__JavaFunctionDeclaration__Group_4_0_1_2__0)*
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JavaFunctionDeclaration__Group_4_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0_1_2__0__Impl
	rule__JavaFunctionDeclaration__Group_4_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getCommaKeyword_4_0_1_2_0()); }

	',' 

{ after(grammarAccess.getJavaFunctionDeclarationAccess().getCommaKeyword_4_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group_4_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0_1_2__1__Impl
	rule__JavaFunctionDeclaration__Group_4_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAssignment_4_0_1_2_1()); }
(rule__JavaFunctionDeclaration__ArgListAssignment_4_0_1_2_1)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAssignment_4_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDeclaration__Group_4_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDeclaration__Group_4_0_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__Group_4_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDAssignment_4_0_1_2_2()); }
(rule__JavaFunctionDeclaration__ArgListIDAssignment_4_0_1_2_2)
{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDAssignment_4_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JavaFunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDefinition__Group__0__Impl
	rule__JavaFunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDefinitionAccess().getDeclAssignment_0()); }
(rule__JavaFunctionDefinition__DeclAssignment_0)
{ after(grammarAccess.getJavaFunctionDefinitionAccess().getDeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDefinitionAccess().getCodeAssignment_1()); }
(rule__JavaFunctionDefinition__CodeAssignment_1)
{ after(grammarAccess.getJavaFunctionDefinitionAccess().getCodeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JavaFunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionCall__Group__0__Impl
	rule__JavaFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getNameAssignment_0()); }
(rule__JavaFunctionCall__NameAssignment_0)
{ after(grammarAccess.getJavaFunctionCallAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getAlternatives_1()); }
(rule__JavaFunctionCall__Alternatives_1)
{ after(grammarAccess.getJavaFunctionCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JavaFunctionCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionCall__Group_1_0__0__Impl
	rule__JavaFunctionCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getJavaFunctionCallAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionCall__Group_1_0__1__Impl
	rule__JavaFunctionCall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getArgsAssignment_1_0_1()); }
(rule__JavaFunctionCall__ArgsAssignment_1_0_1)?
{ after(grammarAccess.getJavaFunctionCallAccess().getArgsAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaFunctionCall__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaFunctionCall__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getRightParenthesisKeyword_1_0_2()); }

	')' 

{ after(grammarAccess.getJavaFunctionCallAccess().getRightParenthesisKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalVariableDeclarationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclarationStatement__Group__0__Impl
	rule__LocalVariableDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclarationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationParserRuleCall_0()); }
	rulelocalVariableDeclaration
{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclarationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclarationStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclarationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__0__Impl
	rule__LocalVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__LocalVariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getDecAssignment_1()); }
(rule__LocalVariableDeclaration__DecAssignment_1)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getDecAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarators__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarators__Group__0__Impl
	rule__VariableDeclarators__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarators__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getVdAssignment_0()); }
(rule__VariableDeclarators__VdAssignment_0)
{ after(grammarAccess.getVariableDeclaratorsAccess().getVdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarators__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarators__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarators__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getGroup_1()); }
(rule__VariableDeclarators__Group_1__0)*
{ after(grammarAccess.getVariableDeclaratorsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarators__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarators__Group_1__0__Impl
	rule__VariableDeclarators__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarators__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVariableDeclaratorsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarators__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarators__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarators__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getVdAssignment_1_1()); }
(rule__VariableDeclarators__VdAssignment_1_1)
{ after(grammarAccess.getVariableDeclaratorsAccess().getVdAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__0__Impl
	rule__VariableDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getNameAssignment_0()); }
(rule__VariableDeclarator__NameAssignment_0)
{ after(grammarAccess.getVariableDeclaratorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getGroup_1()); }
(rule__VariableDeclarator__Group_1__0)?
{ after(grammarAccess.getVariableDeclaratorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclarator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_1__0__Impl
	rule__VariableDeclarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getExpAssignment_1_1()); }
(rule__VariableDeclarator__ExpAssignment_1_1)
{ after(grammarAccess.getVariableDeclaratorAccess().getExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfKeyword_1_0()); }

	'if' 

{ after(grammarAccess.getStatementAccess().getIfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
	rule__Statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionAssignment_1_1()); }
(rule__Statement__ConditionAssignment_1_1)
{ after(grammarAccess.getStatementAccess().getConditionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__2__Impl
	rule__Statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getState1Assignment_1_2()); }
(rule__Statement__State1Assignment_1_2)
{ after(grammarAccess.getStatementAccess().getState1Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_1_3()); }
(rule__Statement__Group_1_3__0)?
{ after(grammarAccess.getStatementAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1_3__0__Impl
	rule__Statement__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getElseKeyword_1_3_0()); }

	'else' 

{ after(grammarAccess.getStatementAccess().getElseKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getState2Assignment_1_3_1()); }
(rule__Statement__State2Assignment_1_3_1)
{ after(grammarAccess.getStatementAccess().getState2Assignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__0__Impl
	rule__Statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getStatementAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__1__Impl
	rule__Statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__2__Impl
	rule__Statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getControlAssignment_2_2()); }
(rule__Statement__ControlAssignment_2_2)
{ after(grammarAccess.getStatementAccess().getControlAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__3__Impl
	rule__Statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStateAssignment_2_4()); }
(rule__Statement__StateAssignment_2_4)
{ after(grammarAccess.getStatementAccess().getStateAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileKeyword_3_0()); }

	'while' 

{ after(grammarAccess.getStatementAccess().getWhileKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__1__Impl
	rule__Statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionAssignment_3_1()); }
(rule__Statement__ConditionAssignment_3_1)
{ after(grammarAccess.getStatementAccess().getConditionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStateAssignment_3_2()); }
(rule__Statement__StateAssignment_3_2)
{ after(grammarAccess.getStatementAccess().getStateAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_4_0()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__1__Impl
	rule__Statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRetValAssignment_4_1()); }
(rule__Statement__RetValAssignment_4_1)?
{ after(grammarAccess.getStatementAccess().getRetValAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_6_0()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__0__Impl
	rule__Statement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_7_0()); }
	ruleexpression
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_7_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__0__Impl
	rule__Statement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getTryKeyword_8_0()); }

	'try' 

{ after(grammarAccess.getStatementAccess().getTryKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__1__Impl
	rule__Statement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getTryBlockAssignment_8_1()); }
(rule__Statement__TryBlockAssignment_8_1)
{ after(grammarAccess.getStatementAccess().getTryBlockAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__2__Impl
	rule__Statement__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCatchKeyword_8_2()); }

	'catch' 

{ after(grammarAccess.getStatementAccess().getCatchKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCatchBlockAssignment_8_3()); }
(rule__Statement__CatchBlockAssignment_8_3)
{ after(grammarAccess.getStatementAccess().getCatchBlockAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForControl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__0__Impl
	rule__ForControl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getInitAssignment_0()); }
(rule__ForControl__InitAssignment_0)?
{ after(grammarAccess.getForControlAccess().getInitAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForControl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__1__Impl
	rule__ForControl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getForControlAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForControl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__2__Impl
	rule__ForControl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getConditionAssignment_2()); }
(rule__ForControl__ConditionAssignment_2)?
{ after(grammarAccess.getForControlAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForControl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__3__Impl
	rule__ForControl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getForControlAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForControl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForControl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getUpdateAssignment_4()); }
(rule__ForControl__UpdateAssignment_4)?
{ after(grammarAccess.getForControlAccess().getUpdateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ForInit__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_0__0__Impl
	rule__ForInit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getExpressionsAssignment_0_0()); }
(rule__ForInit__ExpressionsAssignment_0_0)
{ after(grammarAccess.getForInitAccess().getExpressionsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getGroup_0_1()); }
(rule__ForInit__Group_0_1__0)*
{ after(grammarAccess.getForInitAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForInit__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_0_1__0__Impl
	rule__ForInit__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getForInitAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getExpressionsAssignment_0_1_1()); }
(rule__ForInit__ExpressionsAssignment_0_1_1)
{ after(grammarAccess.getForInitAccess().getExpressionsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
	rule__DOUBLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UmpleModel__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUmpleModelAccess().getElementsAbstractElementParserRuleCall_0()); }
	ruleAbstractElement{ after(grammarAccess.getUmpleModelAccess().getElementsAbstractElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__WordsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlossaryAccess().getWordsWordParserRuleCall_3_0()); }
	ruleWord{ after(grammarAccess.getGlossaryAccess().getWordsWordParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Word__SingularAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getSingularSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getWordAccess().getSingularSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Word__PluralAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getPluralSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getWordAccess().getPluralSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__JavaAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getJavaJavaKeyword_1_0_0()); }
(
{ before(grammarAccess.getGenerateAccess().getJavaJavaKeyword_1_0_0()); }

	'Java' 

{ after(grammarAccess.getGenerateAccess().getJavaJavaKeyword_1_0_0()); }
)

{ after(grammarAccess.getGenerateAccess().getJavaJavaKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__PhpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getPhpPhpKeyword_1_1_0()); }
(
{ before(grammarAccess.getGenerateAccess().getPhpPhpKeyword_1_1_0()); }

	'Php' 

{ after(grammarAccess.getGenerateAccess().getPhpPhpKeyword_1_1_0()); }
)

{ after(grammarAccess.getGenerateAccess().getPhpPhpKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generate__RubyAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerateAccess().getRubyRubyKeyword_1_2_0()); }
(
{ before(grammarAccess.getGenerateAccess().getRubyRubyKeyword_1_2_0()); }

	'Ruby' 

{ after(grammarAccess.getGenerateAccess().getRubyRubyKeyword_1_2_0()); }
)

{ after(grammarAccess.getGenerateAccess().getRubyRubyKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseStatement__FileAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseStatementAccess().getFileIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUseStatementAccess().getFileIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getValueIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNamespaceAccess().getValueIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__ClassContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassContentClassContentParserRuleCall_3_0()); }
	ruleClassContent{ after(grammarAccess.getClassDefinitionAccess().getClassContentClassContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExternalDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__ClassContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalDefinitionAccess().getClassContentClassContentParserRuleCall_3_0()); }
	ruleClassContent{ after(grammarAccess.getExternalDefinitionAccess().getClassContentClassContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInterfaceDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__DependAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getDependDependParserRuleCall_3_0()); }
	ruleDepend{ after(grammarAccess.getInterfaceDefinitionAccess().getDependDependParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAssociationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__AssociationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getAssociationAssociationParserRuleCall_3_0()); }
	ruleAssociation{ after(grammarAccess.getAssociationDefinitionAccess().getAssociationAssociationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Depend__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDependAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleextendedID{ after(grammarAccess.getDependAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Type1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getType1IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getType1IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Rolename1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRolename1IDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getRolename1IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Type2Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getType2IDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getType2IDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Rolename2Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRolename2IDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getRolename2IDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymmetricReflexiveAssociation__RolenameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymmetricReflexiveAssociationAccess().getRolenameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSymmetricReflexiveAssociationAccess().getRolenameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Rolename1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getRolename1IDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInlineAssociationAccess().getRolename1IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getTypeIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getInlineAssociationAccess().getTypeIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InlineAssociation__Rolename2Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineAssociationAccess().getRolename2IDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getInlineAssociationAccess().getRolename2IDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AssociationClassDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAssociationClassDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationClassDefinition__AssociationClassContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassContentAssociationClassContentParserRuleCall_3_0()); }
	ruleAssociationClassContent{ after(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassContentAssociationClassContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__ExtendsClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getExtendsClassUmpleElementCrossReference_1_0()); }
(
{ before(grammarAccess.getIsAAccess().getExtendsClassUmpleElementIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIsAAccess().getExtendsClassUmpleElementIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIsAAccess().getExtendsClassUmpleElementCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsA__ExtendsClassAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsAAccess().getExtendsClassUmpleElementCrossReference_2_1_0()); }
(
{ before(grammarAccess.getIsAAccess().getExtendsClassUmpleElementIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIsAAccess().getExtendsClassUmpleElementIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getIsAAccess().getExtendsClassUmpleElementCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Singleton__SingletonAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonAccess().getSingletonSingletonKeyword_0_0()); }
(
{ before(grammarAccess.getSingletonAccess().getSingletonSingletonKeyword_0_0()); }

	'singleton' 

{ after(grammarAccess.getSingletonAccess().getSingletonSingletonKeyword_0_0()); }
)

{ after(grammarAccess.getSingletonAccess().getSingletonSingletonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__KeysAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getKeysIDTerminalRuleCall_3_0_0()); }
	RULE_ID{ after(grammarAccess.getKeyDefinitionAccess().getKeysIDTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyDefinition__KeysAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyDefinitionAccess().getKeysIDTerminalRuleCall_3_1_1_0()); }
	RULE_ID{ after(grammarAccess.getKeyDefinitionAccess().getKeysIDTerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getNameExtendedIDParserRuleCall_0_1_0()); }
	ruleextendedID{ after(grammarAccess.getCodeInjectionAccess().getNameExtendedIDParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__CodeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getCodeInjectionAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getNameExtendedIDParserRuleCall_1_1_0()); }
	ruleextendedID{ after(grammarAccess.getCodeInjectionAccess().getNameExtendedIDParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CodeInjection__CodeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeInjectionAccess().getCodeSTRINGTerminalRuleCall_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getCodeInjectionAccess().getCodeSTRINGTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AutouniqueAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAutouniqueAutouniqueKeyword_0_0_0()); }
(
{ before(grammarAccess.getAttributeAccess().getAutouniqueAutouniqueKeyword_0_0_0()); }

	'autounique' 

{ after(grammarAccess.getAttributeAccess().getAutouniqueAutouniqueKeyword_0_0_0()); }
)

{ after(grammarAccess.getAttributeAccess().getAutouniqueAutouniqueKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameExtendedIDParserRuleCall_0_1_0()); }
	ruleextendedID{ after(grammarAccess.getAttributeAccess().getNameExtendedIDParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__UniqueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getUniqueUniqueKeyword_1_0_0()); }
(
{ before(grammarAccess.getAttributeAccess().getUniqueUniqueKeyword_1_0_0()); }

	'unique' 

{ after(grammarAccess.getAttributeAccess().getUniqueUniqueKeyword_1_0_0()); }
)

{ after(grammarAccess.getAttributeAccess().getUniqueUniqueKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ModifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getModifierModifierEnumRuleCall_1_1_0()); }
	ruleModifier{ after(grammarAccess.getAttributeAccess().getModifierModifierEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_1_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeUmpleAttributeTypeParserRuleCall_1_2_0_0_0()); }
	ruleUmpleAttributeType{ after(grammarAccess.getAttributeAccess().getTypeUmpleAttributeTypeParserRuleCall_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ListAssignment_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_0_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_0_1_0()); }

	'[]' 

{ after(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_0_1_0()); }
)

{ after(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ObjectAssignment_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getObjectClassDefinitionCrossReference_1_2_1_0_0()); }
(
{ before(grammarAccess.getAttributeAccess().getObjectClassDefinitionIDTerminalRuleCall_1_2_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getObjectClassDefinitionIDTerminalRuleCall_1_2_1_0_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getObjectClassDefinitionCrossReference_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ListAssignment_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_1_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_1_1_0()); }

	'[]' 

{ after(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_1_1_0()); }
)

{ after(grammarAccess.getAttributeAccess().getListLeftSquareBracketRightSquareBracketKeyword_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameExtendedIDParserRuleCall_1_3_0()); }
	ruleextendedID{ after(grammarAccess.getAttributeAccess().getNameExtendedIDParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueUmplePrimitiveTypeParserRuleCall_1_4_1_0()); }
	ruleUmplePrimitiveType{ after(grammarAccess.getAttributeAccess().getValueUmplePrimitiveTypeParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__XAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getXINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getElementPositionAccess().getXINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__YAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getYINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getElementPositionAccess().getYINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__WidthAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getWidthINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getElementPositionAccess().getWidthINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPosition__HeightAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementPositionAccess().getHeightINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getElementPositionAccess().getHeightINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAssociationPositionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__C1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getC1CoordinateParserRuleCall_2_0()); }
	ruleCoordinate{ after(grammarAccess.getAssociationPositionAccess().getC1CoordinateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationPosition__C2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPositionAccess().getC2CoordinateParserRuleCall_3_0()); }
	ruleCoordinate{ after(grammarAccess.getAssociationPositionAccess().getC2CoordinateParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__XAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getCoordinateAccess().getXINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__YAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getCoordinateAccess().getYINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__BlocksAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlocksBlockStatementParserRuleCall_1_0()); }
	ruleblockStatement{ after(grammarAccess.getBlockAccess().getBlocksBlockStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_0_0()); }
	ruleexpression{ after(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression1ConditionalExpressionParserRuleCall_0_0()); }
	ruleconditionalExpression{ after(grammarAccess.getExpressionAccess().getExpression1ConditionalExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Expression2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getExpressionAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpression1ConditionalOrExpressionParserRuleCall_0_0()); }
	ruleconditionalOrExpression{ after(grammarAccess.getConditionalExpressionAccess().getExpression1ConditionalOrExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Expression2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getConditionalExpressionAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Expression3Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getExpression3ExpressionParserRuleCall_1_3_0()); }
	ruleexpression{ after(grammarAccess.getConditionalExpressionAccess().getExpression3ExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getExpression1ConditionalAndExpressionParserRuleCall_0_0()); }
	ruleconditionalAndExpression{ after(grammarAccess.getConditionalOrExpressionAccess().getExpression1ConditionalAndExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__ExpressionRestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getExpressionRestConditionalAndExpressionParserRuleCall_1_1_0()); }
	ruleconditionalAndExpression{ after(grammarAccess.getConditionalOrExpressionAccess().getExpressionRestConditionalAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getExpression1EqualityExpressionParserRuleCall_0_0()); }
	ruleequalityExpression{ after(grammarAccess.getConditionalAndExpressionAccess().getExpression1EqualityExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__ExpressionRestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getExpressionRestEqualityExpressionParserRuleCall_1_1_0()); }
	ruleequalityExpression{ after(grammarAccess.getConditionalAndExpressionAccess().getExpressionRestEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpression1RelationalExpressionParserRuleCall_0_0()); }
	rulerelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getExpression1RelationalExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ExpressionRestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpressionRestRelationalExpressionParserRuleCall_1_1_0()); }
	rulerelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getExpressionRestRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpression1AdditiveExpressionParserRuleCall_0_0()); }
	ruleadditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getExpression1AdditiveExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__ExpressionRestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getExpressionRestAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleadditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getExpressionRestAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpression1MultiplicativeExpressionParserRuleCall_0_0()); }
	rulemultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getExpression1MultiplicativeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ExpressionRestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpressionRestMultiplicativeExpressionParserRuleCall_1_1_0()); }
	rulemultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getExpressionRestMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpression1UnaryExpressionParserRuleCall_0_0()); }
	ruleunaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpression1UnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ExpressionRestAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpressionRestUnaryExpressionParserRuleCall_1_1_0()); }
	ruleunaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpressionRestUnaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Exp1Assignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_0_1_0()); }
	ruleunaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Exp1Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_1_1_0()); }
	ruleunaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Exp1Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_2_1_0()); }
	ruleunaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Exp1Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_3_1_0()); }
	ruleunaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getExp1UnaryExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Exp2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExp2UnaryExpressionNotPlusMinusParserRuleCall_4_0()); }
	ruleunaryExpressionNotPlusMinus{ after(grammarAccess.getUnaryExpressionAccess().getExp2UnaryExpressionNotPlusMinusParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__JavaFunctionDeclaration__ReturnTypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getReturnTypeAttributeTypeParserRuleCall_2_0_0()); }
	ruleattributeType{ after(grammarAccess.getJavaFunctionDeclarationAccess().getReturnTypeAttributeTypeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__ReferenceTypeAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getReferenceTypeIDTerminalRuleCall_2_2_0()); }
	RULE_ID{ after(grammarAccess.getJavaFunctionDeclarationAccess().getReferenceTypeIDTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getJavaFunctionDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__ArgListAssignment_4_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAttributeTypeParserRuleCall_4_0_1_0_0()); }
	ruleattributeType{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAttributeTypeParserRuleCall_4_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__ArgListIDAssignment_4_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDExtendedIDParserRuleCall_4_0_1_1_0()); }
	ruleextendedID{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDExtendedIDParserRuleCall_4_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__ArgListAssignment_4_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAttributeTypeParserRuleCall_4_0_1_2_1_0()); }
	ruleattributeType{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAttributeTypeParserRuleCall_4_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDeclaration__ArgListIDAssignment_4_0_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDExtendedIDParserRuleCall_4_0_1_2_2_0()); }
	ruleextendedID{ after(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDExtendedIDParserRuleCall_4_0_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDefinition__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDefinitionAccess().getDeclJavaFunctionDeclarationParserRuleCall_0_0()); }
	rulejavaFunctionDeclaration{ after(grammarAccess.getJavaFunctionDefinitionAccess().getDeclJavaFunctionDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionDefinition__CodeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionDefinitionAccess().getCodeBlockParserRuleCall_1_0()); }
	ruleblock{ after(grammarAccess.getJavaFunctionDefinitionAccess().getCodeBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getNameExtendedIDParserRuleCall_0_0()); }
	ruleextendedID{ after(grammarAccess.getJavaFunctionCallAccess().getNameExtendedIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaFunctionCall__ArgsAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaFunctionCallAccess().getArgsExpressionListParserRuleCall_1_0_1_0()); }
	ruleexpressionList{ after(grammarAccess.getJavaFunctionCallAccess().getArgsExpressionListParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeAttributeTypeParserRuleCall_0_0()); }
	ruleattributeType{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeAttributeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__DecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getDecVariableDeclaratorsParserRuleCall_1_0()); }
	rulevariableDeclarators{ after(grammarAccess.getLocalVariableDeclarationAccess().getDecVariableDeclaratorsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarators__VdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getVdVariableDeclaratorParserRuleCall_0_0()); }
	rulevariableDeclarator{ after(grammarAccess.getVariableDeclaratorsAccess().getVdVariableDeclaratorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarators__VdAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorsAccess().getVdVariableDeclaratorParserRuleCall_1_1_0()); }
	rulevariableDeclarator{ after(grammarAccess.getVariableDeclaratorsAccess().getVdVariableDeclaratorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getNameExtendedIDParserRuleCall_0_0()); }
	ruleextendedID{ after(grammarAccess.getVariableDeclaratorAccess().getNameExtendedIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__ExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclaratorAccess().getExpExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getVariableDeclaratorAccess().getExpExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ConditionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionParExpressionParserRuleCall_1_1_0()); }
	ruleparExpression{ after(grammarAccess.getStatementAccess().getConditionParExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__State1Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getState1StatementParserRuleCall_1_2_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getState1StatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__State2Assignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getState2StatementParserRuleCall_1_3_1_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getState2StatementParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ControlAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getControlForControlParserRuleCall_2_2_0()); }
	ruleforControl{ after(grammarAccess.getStatementAccess().getControlForControlParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StateAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStateStatementParserRuleCall_2_4_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getStateStatementParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ConditionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionParExpressionParserRuleCall_3_1_0()); }
	ruleparExpression{ after(grammarAccess.getStatementAccess().getConditionParExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StateAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStateStatementParserRuleCall_3_2_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getStateStatementParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RetValAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRetValExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getStatementAccess().getRetValExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TryBlockAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getTryBlockBlockParserRuleCall_8_1_0()); }
	ruleblock{ after(grammarAccess.getStatementAccess().getTryBlockBlockParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CatchBlockAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCatchBlockBlockParserRuleCall_8_3_0()); }
	ruleblock{ after(grammarAccess.getStatementAccess().getCatchBlockBlockParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__InitAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getInitForInitParserRuleCall_0_0()); }
	ruleforInit{ after(grammarAccess.getForControlAccess().getInitForInitParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getConditionExpressionParserRuleCall_2_0()); }
	ruleexpression{ after(grammarAccess.getForControlAccess().getConditionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForControl__UpdateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForControlAccess().getUpdateForUpdateParserRuleCall_4_0()); }
	ruleforUpdate{ after(grammarAccess.getForControlAccess().getUpdateForUpdateParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__ExpressionsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getExpressionsExpressionParserRuleCall_0_0_0()); }
	ruleexpression{ after(grammarAccess.getForInitAccess().getExpressionsExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__ExpressionsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getExpressionsExpressionParserRuleCall_0_1_1_0()); }
	ruleexpression{ after(grammarAccess.getForInitAccess().getExpressionsExpressionParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





RULE_RUBY_FUNCTION : RULE_DEF ( options {greedy=false;} : . )*RULE_END;

RULE_DEF : 'def';

RULE_END : 'end';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


