/*
* generated by Xtext
*/
package cruise.umple.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import cruise.umple.services.UmpleGrammarAccess;

public class UmpleParser extends AbstractContentAssistParser {
	
	@Inject
	private UmpleGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected cruise.umple.ui.contentassist.antlr.internal.InternalUmpleParser createParser() {
		cruise.umple.ui.contentassist.antlr.internal.InternalUmpleParser result = new cruise.umple.ui.contentassist.antlr.internal.InternalUmpleParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
					put(grammarAccess.getGenerateAccess().getAlternatives_1(), "rule__Generate__Alternatives_1");
					put(grammarAccess.getEntityAccess().getAlternatives(), "rule__Entity__Alternatives");
					put(grammarAccess.getClassContentAccess().getAlternatives(), "rule__ClassContent__Alternatives");
					put(grammarAccess.getAssociationClassContentAccess().getAlternatives(), "rule__AssociationClassContent__Alternatives");
					put(grammarAccess.getAssociationAccess().getAlternatives_3(), "rule__Association__Alternatives_3");
					put(grammarAccess.getInlineAssociationAccess().getAlternatives_2(), "rule__InlineAssociation__Alternatives_2");
					put(grammarAccess.getSoftwarePatternAccess().getAlternatives(), "rule__SoftwarePattern__Alternatives");
					put(grammarAccess.getCodeInjectionAccess().getAlternatives(), "rule__CodeInjection__Alternatives");
					put(grammarAccess.getAttributeAccess().getAlternatives(), "rule__Attribute__Alternatives");
					put(grammarAccess.getAttributeAccess().getAlternatives_1_2(), "rule__Attribute__Alternatives_1_2");
					put(grammarAccess.getPositionAccess().getAlternatives(), "rule__Position__Alternatives");
					put(grammarAccess.getUmpleAttributeTypeAccess().getAlternatives(), "rule__UmpleAttributeType__Alternatives");
					put(grammarAccess.getUmplePrimitiveTypeAccess().getAlternatives(), "rule__UmplePrimitiveType__Alternatives");
					put(grammarAccess.getMultiplicityAccess().getAlternatives(), "rule__Multiplicity__Alternatives");
					put(grammarAccess.getBoundAccess().getAlternatives(), "rule__Bound__Alternatives");
					put(grammarAccess.getUmpleElementAccess().getAlternatives(), "rule__UmpleElement__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_0(), "rule__EqualityExpression__Alternatives_1_0");
					put(grammarAccess.getRelationalOpAccess().getAlternatives(), "rule__RelationalOp__Alternatives");
					put(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_0(), "rule__AdditiveExpression__Alternatives_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1_0(), "rule__MultiplicativeExpression__Alternatives_1_0");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives(), "rule__UnaryExpressionNotPlusMinus__Alternatives");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives_2_1(), "rule__UnaryExpressionNotPlusMinus__Alternatives_2_1");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_1(), "rule__JavaFunctionDeclaration__Alternatives_1");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_2(), "rule__JavaFunctionDeclaration__Alternatives_2");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getAlternatives_4(), "rule__JavaFunctionDeclaration__Alternatives_4");
					put(grammarAccess.getJavaFunctionCallAccess().getAlternatives_1(), "rule__JavaFunctionCall__Alternatives_1");
					put(grammarAccess.getBlockStatementAccess().getAlternatives(), "rule__BlockStatement__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getForInitAccess().getAlternatives(), "rule__ForInit__Alternatives");
					put(grammarAccess.getAttributeTypeAccess().getAlternatives(), "rule__AttributeType__Alternatives");
					put(grammarAccess.getCHARSAccess().getAlternatives(), "rule__CHARS__Alternatives");
					put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
					put(grammarAccess.getGlossaryAccess().getGroup(), "rule__Glossary__Group__0");
					put(grammarAccess.getWordAccess().getGroup(), "rule__Word__Group__0");
					put(grammarAccess.getGenerateAccess().getGroup(), "rule__Generate__Group__0");
					put(grammarAccess.getUseStatementAccess().getGroup(), "rule__UseStatement__Group__0");
					put(grammarAccess.getNamespaceAccess().getGroup(), "rule__Namespace__Group__0");
					put(grammarAccess.getClassDefinitionAccess().getGroup(), "rule__ClassDefinition__Group__0");
					put(grammarAccess.getExternalDefinitionAccess().getGroup(), "rule__ExternalDefinition__Group__0");
					put(grammarAccess.getInterfaceDefinitionAccess().getGroup(), "rule__InterfaceDefinition__Group__0");
					put(grammarAccess.getAssociationDefinitionAccess().getGroup(), "rule__AssociationDefinition__Group__0");
					put(grammarAccess.getDependAccess().getGroup(), "rule__Depend__Group__0");
					put(grammarAccess.getAssociationAccess().getGroup(), "rule__Association__Group__0");
					put(grammarAccess.getSymmetricReflexiveAssociationAccess().getGroup(), "rule__SymmetricReflexiveAssociation__Group__0");
					put(grammarAccess.getInlineAssociationAccess().getGroup(), "rule__InlineAssociation__Group__0");
					put(grammarAccess.getSingleAssociationEndAccess().getGroup(), "rule__SingleAssociationEnd__Group__0");
					put(grammarAccess.getAssociationClassDefinitionAccess().getGroup(), "rule__AssociationClassDefinition__Group__0");
					put(grammarAccess.getIsAAccess().getGroup(), "rule__IsA__Group__0");
					put(grammarAccess.getIsAAccess().getGroup_2(), "rule__IsA__Group_2__0");
					put(grammarAccess.getSingletonAccess().getGroup(), "rule__Singleton__Group__0");
					put(grammarAccess.getKeyDefinitionAccess().getGroup(), "rule__KeyDefinition__Group__0");
					put(grammarAccess.getKeyDefinitionAccess().getGroup_3(), "rule__KeyDefinition__Group_3__0");
					put(grammarAccess.getKeyDefinitionAccess().getGroup_3_1(), "rule__KeyDefinition__Group_3_1__0");
					put(grammarAccess.getCodeInjectionAccess().getGroup_0(), "rule__CodeInjection__Group_0__0");
					put(grammarAccess.getCodeInjectionAccess().getGroup_1(), "rule__CodeInjection__Group_1__0");
					put(grammarAccess.getAttributeAccess().getGroup_0(), "rule__Attribute__Group_0__0");
					put(grammarAccess.getAttributeAccess().getGroup_1(), "rule__Attribute__Group_1__0");
					put(grammarAccess.getAttributeAccess().getGroup_1_2_0(), "rule__Attribute__Group_1_2_0__0");
					put(grammarAccess.getAttributeAccess().getGroup_1_2_1(), "rule__Attribute__Group_1_2_1__0");
					put(grammarAccess.getAttributeAccess().getGroup_1_4(), "rule__Attribute__Group_1_4__0");
					put(grammarAccess.getElementPositionAccess().getGroup(), "rule__ElementPosition__Group__0");
					put(grammarAccess.getAssociationPositionAccess().getGroup(), "rule__AssociationPosition__Group__0");
					put(grammarAccess.getCoordinateAccess().getGroup(), "rule__Coordinate__Group__0");
					put(grammarAccess.getMultiplicityAccess().getGroup_1(), "rule__Multiplicity__Group_1__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getParExpressionAccess().getGroup(), "rule__ParExpression__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup_1(), "rule__ConditionalExpression__Group_1__0");
					put(grammarAccess.getConditionalOrExpressionAccess().getGroup(), "rule__ConditionalOrExpression__Group__0");
					put(grammarAccess.getConditionalOrExpressionAccess().getGroup_1(), "rule__ConditionalOrExpression__Group_1__0");
					put(grammarAccess.getConditionalAndExpressionAccess().getGroup(), "rule__ConditionalAndExpression__Group__0");
					put(grammarAccess.getConditionalAndExpressionAccess().getGroup_1(), "rule__ConditionalAndExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_0(), "rule__UnaryExpression__Group_0__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_2(), "rule__UnaryExpression__Group_2__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_3(), "rule__UnaryExpression__Group_3__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_0(), "rule__UnaryExpressionNotPlusMinus__Group_0__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_1(), "rule__UnaryExpressionNotPlusMinus__Group_1__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_2(), "rule__UnaryExpressionNotPlusMinus__Group_2__0");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getGroup(), "rule__JavaFunctionDeclaration__Group__0");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0(), "rule__JavaFunctionDeclaration__Group_4_0__0");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0_1(), "rule__JavaFunctionDeclaration__Group_4_0_1__0");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getGroup_4_0_1_2(), "rule__JavaFunctionDeclaration__Group_4_0_1_2__0");
					put(grammarAccess.getJavaFunctionDefinitionAccess().getGroup(), "rule__JavaFunctionDefinition__Group__0");
					put(grammarAccess.getJavaFunctionCallAccess().getGroup(), "rule__JavaFunctionCall__Group__0");
					put(grammarAccess.getJavaFunctionCallAccess().getGroup_1_0(), "rule__JavaFunctionCall__Group_1_0__0");
					put(grammarAccess.getLocalVariableDeclarationStatementAccess().getGroup(), "rule__LocalVariableDeclarationStatement__Group__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup(), "rule__LocalVariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclaratorsAccess().getGroup(), "rule__VariableDeclarators__Group__0");
					put(grammarAccess.getVariableDeclaratorsAccess().getGroup_1(), "rule__VariableDeclarators__Group_1__0");
					put(grammarAccess.getVariableDeclaratorAccess().getGroup(), "rule__VariableDeclarator__Group__0");
					put(grammarAccess.getVariableDeclaratorAccess().getGroup_1(), "rule__VariableDeclarator__Group_1__0");
					put(grammarAccess.getStatementAccess().getGroup_1(), "rule__Statement__Group_1__0");
					put(grammarAccess.getStatementAccess().getGroup_1_3(), "rule__Statement__Group_1_3__0");
					put(grammarAccess.getStatementAccess().getGroup_2(), "rule__Statement__Group_2__0");
					put(grammarAccess.getStatementAccess().getGroup_3(), "rule__Statement__Group_3__0");
					put(grammarAccess.getStatementAccess().getGroup_4(), "rule__Statement__Group_4__0");
					put(grammarAccess.getStatementAccess().getGroup_6(), "rule__Statement__Group_6__0");
					put(grammarAccess.getStatementAccess().getGroup_7(), "rule__Statement__Group_7__0");
					put(grammarAccess.getStatementAccess().getGroup_8(), "rule__Statement__Group_8__0");
					put(grammarAccess.getForControlAccess().getGroup(), "rule__ForControl__Group__0");
					put(grammarAccess.getForInitAccess().getGroup_0(), "rule__ForInit__Group_0__0");
					put(grammarAccess.getForInitAccess().getGroup_0_1(), "rule__ForInit__Group_0_1__0");
					put(grammarAccess.getPhpFunctionAccess().getGroup(), "rule__PhpFunction__Group__0");
					put(grammarAccess.getPhpBlockAccess().getGroup(), "rule__PhpBlock__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup(), "rule__ExtendedID__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup_1(), "rule__ExtendedID__Group_1__0");
					put(grammarAccess.getDOUBLEAccess().getGroup(), "rule__DOUBLE__Group__0");
					put(grammarAccess.getFileIDAccess().getGroup(), "rule__FileID__Group__0");
					put(grammarAccess.getUmpleModelAccess().getElementsAssignment(), "rule__UmpleModel__ElementsAssignment");
					put(grammarAccess.getGlossaryAccess().getWordsAssignment_3(), "rule__Glossary__WordsAssignment_3");
					put(grammarAccess.getWordAccess().getSingularAssignment_0(), "rule__Word__SingularAssignment_0");
					put(grammarAccess.getWordAccess().getPluralAssignment_2(), "rule__Word__PluralAssignment_2");
					put(grammarAccess.getGenerateAccess().getJavaAssignment_1_0(), "rule__Generate__JavaAssignment_1_0");
					put(grammarAccess.getGenerateAccess().getPhpAssignment_1_1(), "rule__Generate__PhpAssignment_1_1");
					put(grammarAccess.getGenerateAccess().getRubyAssignment_1_2(), "rule__Generate__RubyAssignment_1_2");
					put(grammarAccess.getUseStatementAccess().getFileAssignment_1(), "rule__UseStatement__FileAssignment_1");
					put(grammarAccess.getNamespaceAccess().getValueAssignment_1(), "rule__Namespace__ValueAssignment_1");
					put(grammarAccess.getClassDefinitionAccess().getNameAssignment_1(), "rule__ClassDefinition__NameAssignment_1");
					put(grammarAccess.getClassDefinitionAccess().getClassContentAssignment_3(), "rule__ClassDefinition__ClassContentAssignment_3");
					put(grammarAccess.getExternalDefinitionAccess().getNameAssignment_1(), "rule__ExternalDefinition__NameAssignment_1");
					put(grammarAccess.getExternalDefinitionAccess().getClassContentAssignment_3(), "rule__ExternalDefinition__ClassContentAssignment_3");
					put(grammarAccess.getInterfaceDefinitionAccess().getNameAssignment_1(), "rule__InterfaceDefinition__NameAssignment_1");
					put(grammarAccess.getInterfaceDefinitionAccess().getDependAssignment_3(), "rule__InterfaceDefinition__DependAssignment_3");
					put(grammarAccess.getAssociationDefinitionAccess().getNameAssignment_1(), "rule__AssociationDefinition__NameAssignment_1");
					put(grammarAccess.getAssociationDefinitionAccess().getAssociationAssignment_3(), "rule__AssociationDefinition__AssociationAssignment_3");
					put(grammarAccess.getDependAccess().getNameAssignment_1(), "rule__Depend__NameAssignment_1");
					put(grammarAccess.getAssociationAccess().getType1Assignment_1(), "rule__Association__Type1Assignment_1");
					put(grammarAccess.getAssociationAccess().getRolename1Assignment_2(), "rule__Association__Rolename1Assignment_2");
					put(grammarAccess.getAssociationAccess().getType2Assignment_5(), "rule__Association__Type2Assignment_5");
					put(grammarAccess.getAssociationAccess().getRolename2Assignment_6(), "rule__Association__Rolename2Assignment_6");
					put(grammarAccess.getSymmetricReflexiveAssociationAccess().getRolenameAssignment_2(), "rule__SymmetricReflexiveAssociation__RolenameAssignment_2");
					put(grammarAccess.getInlineAssociationAccess().getRolename1Assignment_1(), "rule__InlineAssociation__Rolename1Assignment_1");
					put(grammarAccess.getInlineAssociationAccess().getTypeAssignment_4(), "rule__InlineAssociation__TypeAssignment_4");
					put(grammarAccess.getInlineAssociationAccess().getRolename2Assignment_5(), "rule__InlineAssociation__Rolename2Assignment_5");
					put(grammarAccess.getSingleAssociationEndAccess().getTypeAssignment_1(), "rule__SingleAssociationEnd__TypeAssignment_1");
					put(grammarAccess.getSingleAssociationEndAccess().getRolenameAssignment_2(), "rule__SingleAssociationEnd__RolenameAssignment_2");
					put(grammarAccess.getAssociationClassDefinitionAccess().getNameAssignment_1(), "rule__AssociationClassDefinition__NameAssignment_1");
					put(grammarAccess.getAssociationClassDefinitionAccess().getAssociationClassContentAssignment_3(), "rule__AssociationClassDefinition__AssociationClassContentAssignment_3");
					put(grammarAccess.getIsAAccess().getExtendsClassAssignment_1(), "rule__IsA__ExtendsClassAssignment_1");
					put(grammarAccess.getIsAAccess().getExtendsClassAssignment_2_1(), "rule__IsA__ExtendsClassAssignment_2_1");
					put(grammarAccess.getSingletonAccess().getSingletonAssignment_0(), "rule__Singleton__SingletonAssignment_0");
					put(grammarAccess.getKeyDefinitionAccess().getKeysAssignment_3_0(), "rule__KeyDefinition__KeysAssignment_3_0");
					put(grammarAccess.getKeyDefinitionAccess().getKeysAssignment_3_1_1(), "rule__KeyDefinition__KeysAssignment_3_1_1");
					put(grammarAccess.getCodeInjectionAccess().getNameAssignment_0_1(), "rule__CodeInjection__NameAssignment_0_1");
					put(grammarAccess.getCodeInjectionAccess().getCodeAssignment_0_2(), "rule__CodeInjection__CodeAssignment_0_2");
					put(grammarAccess.getCodeInjectionAccess().getNameAssignment_1_1(), "rule__CodeInjection__NameAssignment_1_1");
					put(grammarAccess.getCodeInjectionAccess().getCodeAssignment_1_2(), "rule__CodeInjection__CodeAssignment_1_2");
					put(grammarAccess.getAttributeAccess().getAutouniqueAssignment_0_0(), "rule__Attribute__AutouniqueAssignment_0_0");
					put(grammarAccess.getAttributeAccess().getNameAssignment_0_1(), "rule__Attribute__NameAssignment_0_1");
					put(grammarAccess.getAttributeAccess().getUniqueAssignment_1_0(), "rule__Attribute__UniqueAssignment_1_0");
					put(grammarAccess.getAttributeAccess().getModifierAssignment_1_1(), "rule__Attribute__ModifierAssignment_1_1");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_1_2_0_0(), "rule__Attribute__TypeAssignment_1_2_0_0");
					put(grammarAccess.getAttributeAccess().getListAssignment_1_2_0_1(), "rule__Attribute__ListAssignment_1_2_0_1");
					put(grammarAccess.getAttributeAccess().getObjectAssignment_1_2_1_0(), "rule__Attribute__ObjectAssignment_1_2_1_0");
					put(grammarAccess.getAttributeAccess().getListAssignment_1_2_1_1(), "rule__Attribute__ListAssignment_1_2_1_1");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1_3(), "rule__Attribute__NameAssignment_1_3");
					put(grammarAccess.getAttributeAccess().getValueAssignment_1_4_1(), "rule__Attribute__ValueAssignment_1_4_1");
					put(grammarAccess.getElementPositionAccess().getXAssignment_1(), "rule__ElementPosition__XAssignment_1");
					put(grammarAccess.getElementPositionAccess().getYAssignment_2(), "rule__ElementPosition__YAssignment_2");
					put(grammarAccess.getElementPositionAccess().getWidthAssignment_3(), "rule__ElementPosition__WidthAssignment_3");
					put(grammarAccess.getElementPositionAccess().getHeightAssignment_4(), "rule__ElementPosition__HeightAssignment_4");
					put(grammarAccess.getAssociationPositionAccess().getNameAssignment_1(), "rule__AssociationPosition__NameAssignment_1");
					put(grammarAccess.getAssociationPositionAccess().getC1Assignment_2(), "rule__AssociationPosition__C1Assignment_2");
					put(grammarAccess.getAssociationPositionAccess().getC2Assignment_3(), "rule__AssociationPosition__C2Assignment_3");
					put(grammarAccess.getCoordinateAccess().getXAssignment_0(), "rule__Coordinate__XAssignment_0");
					put(grammarAccess.getCoordinateAccess().getYAssignment_2(), "rule__Coordinate__YAssignment_2");
					put(grammarAccess.getBlockAccess().getBlocksAssignment_1(), "rule__Block__BlocksAssignment_1");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0(), "rule__ExpressionList__ExpressionsAssignment_0");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1_1(), "rule__ExpressionList__ExpressionsAssignment_1_1");
					put(grammarAccess.getExpressionAccess().getExpression1Assignment_0(), "rule__Expression__Expression1Assignment_0");
					put(grammarAccess.getExpressionAccess().getExpression2Assignment_1_1(), "rule__Expression__Expression2Assignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getExpression1Assignment_0(), "rule__ConditionalExpression__Expression1Assignment_0");
					put(grammarAccess.getConditionalExpressionAccess().getExpression2Assignment_1_1(), "rule__ConditionalExpression__Expression2Assignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getExpression3Assignment_1_3(), "rule__ConditionalExpression__Expression3Assignment_1_3");
					put(grammarAccess.getConditionalOrExpressionAccess().getExpression1Assignment_0(), "rule__ConditionalOrExpression__Expression1Assignment_0");
					put(grammarAccess.getConditionalOrExpressionAccess().getExpressionRestAssignment_1_1(), "rule__ConditionalOrExpression__ExpressionRestAssignment_1_1");
					put(grammarAccess.getConditionalAndExpressionAccess().getExpression1Assignment_0(), "rule__ConditionalAndExpression__Expression1Assignment_0");
					put(grammarAccess.getConditionalAndExpressionAccess().getExpressionRestAssignment_1_1(), "rule__ConditionalAndExpression__ExpressionRestAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getExpression1Assignment_0(), "rule__EqualityExpression__Expression1Assignment_0");
					put(grammarAccess.getEqualityExpressionAccess().getExpressionRestAssignment_1_1(), "rule__EqualityExpression__ExpressionRestAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getExpression1Assignment_0(), "rule__RelationalExpression__Expression1Assignment_0");
					put(grammarAccess.getRelationalExpressionAccess().getExpressionRestAssignment_1_1(), "rule__RelationalExpression__ExpressionRestAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getExpression1Assignment_0(), "rule__AdditiveExpression__Expression1Assignment_0");
					put(grammarAccess.getAdditiveExpressionAccess().getExpressionRestAssignment_1_1(), "rule__AdditiveExpression__ExpressionRestAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getExpression1Assignment_0(), "rule__MultiplicativeExpression__Expression1Assignment_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getExpressionRestAssignment_1_1(), "rule__MultiplicativeExpression__ExpressionRestAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_0_1(), "rule__UnaryExpression__Exp1Assignment_0_1");
					put(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_1_1(), "rule__UnaryExpression__Exp1Assignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_2_1(), "rule__UnaryExpression__Exp1Assignment_2_1");
					put(grammarAccess.getUnaryExpressionAccess().getExp1Assignment_3_1(), "rule__UnaryExpression__Exp1Assignment_3_1");
					put(grammarAccess.getUnaryExpressionAccess().getExp2Assignment_4(), "rule__UnaryExpression__Exp2Assignment_4");
					put(grammarAccess.getFunctionDeclarationAccess().getJavaAssignment(), "rule__FunctionDeclaration__JavaAssignment");
					put(grammarAccess.getFunctionDefinitionAccess().getJavaAssignment(), "rule__FunctionDefinition__JavaAssignment");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getReturnTypeAssignment_2_0(), "rule__JavaFunctionDeclaration__ReturnTypeAssignment_2_0");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getReferenceTypeAssignment_2_2(), "rule__JavaFunctionDeclaration__ReferenceTypeAssignment_2_2");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getNameAssignment_3(), "rule__JavaFunctionDeclaration__NameAssignment_3");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAssignment_4_0_1_0(), "rule__JavaFunctionDeclaration__ArgListAssignment_4_0_1_0");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDAssignment_4_0_1_1(), "rule__JavaFunctionDeclaration__ArgListIDAssignment_4_0_1_1");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getArgListAssignment_4_0_1_2_1(), "rule__JavaFunctionDeclaration__ArgListAssignment_4_0_1_2_1");
					put(grammarAccess.getJavaFunctionDeclarationAccess().getArgListIDAssignment_4_0_1_2_2(), "rule__JavaFunctionDeclaration__ArgListIDAssignment_4_0_1_2_2");
					put(grammarAccess.getJavaFunctionDefinitionAccess().getDeclAssignment_0(), "rule__JavaFunctionDefinition__DeclAssignment_0");
					put(grammarAccess.getJavaFunctionDefinitionAccess().getCodeAssignment_1(), "rule__JavaFunctionDefinition__CodeAssignment_1");
					put(grammarAccess.getJavaFunctionCallAccess().getNameAssignment_0(), "rule__JavaFunctionCall__NameAssignment_0");
					put(grammarAccess.getJavaFunctionCallAccess().getArgsAssignment_1_0_1(), "rule__JavaFunctionCall__ArgsAssignment_1_0_1");
					put(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0(), "rule__LocalVariableDeclaration__TypeAssignment_0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getDecAssignment_1(), "rule__LocalVariableDeclaration__DecAssignment_1");
					put(grammarAccess.getVariableDeclaratorsAccess().getVdAssignment_0(), "rule__VariableDeclarators__VdAssignment_0");
					put(grammarAccess.getVariableDeclaratorsAccess().getVdAssignment_1_1(), "rule__VariableDeclarators__VdAssignment_1_1");
					put(grammarAccess.getVariableDeclaratorAccess().getNameAssignment_0(), "rule__VariableDeclarator__NameAssignment_0");
					put(grammarAccess.getVariableDeclaratorAccess().getExpAssignment_1_1(), "rule__VariableDeclarator__ExpAssignment_1_1");
					put(grammarAccess.getStatementAccess().getConditionAssignment_1_1(), "rule__Statement__ConditionAssignment_1_1");
					put(grammarAccess.getStatementAccess().getState1Assignment_1_2(), "rule__Statement__State1Assignment_1_2");
					put(grammarAccess.getStatementAccess().getState2Assignment_1_3_1(), "rule__Statement__State2Assignment_1_3_1");
					put(grammarAccess.getStatementAccess().getControlAssignment_2_2(), "rule__Statement__ControlAssignment_2_2");
					put(grammarAccess.getStatementAccess().getStateAssignment_2_4(), "rule__Statement__StateAssignment_2_4");
					put(grammarAccess.getStatementAccess().getConditionAssignment_3_1(), "rule__Statement__ConditionAssignment_3_1");
					put(grammarAccess.getStatementAccess().getStateAssignment_3_2(), "rule__Statement__StateAssignment_3_2");
					put(grammarAccess.getStatementAccess().getRetValAssignment_4_1(), "rule__Statement__RetValAssignment_4_1");
					put(grammarAccess.getStatementAccess().getTryBlockAssignment_8_1(), "rule__Statement__TryBlockAssignment_8_1");
					put(grammarAccess.getStatementAccess().getCatchBlockAssignment_8_3(), "rule__Statement__CatchBlockAssignment_8_3");
					put(grammarAccess.getForControlAccess().getInitAssignment_0(), "rule__ForControl__InitAssignment_0");
					put(grammarAccess.getForControlAccess().getConditionAssignment_2(), "rule__ForControl__ConditionAssignment_2");
					put(grammarAccess.getForControlAccess().getUpdateAssignment_4(), "rule__ForControl__UpdateAssignment_4");
					put(grammarAccess.getForInitAccess().getExpressionsAssignment_0_0(), "rule__ForInit__ExpressionsAssignment_0_0");
					put(grammarAccess.getForInitAccess().getExpressionsAssignment_0_1_1(), "rule__ForInit__ExpressionsAssignment_0_1_1");
					put(grammarAccess.getPhpFunctionAccess().getNameAssignment_2(), "rule__PhpFunction__NameAssignment_2");
					put(grammarAccess.getPhpFunctionAccess().getCodeblockAssignment_3(), "rule__PhpFunction__CodeblockAssignment_3");
					put(grammarAccess.getPhpBlockAccess().getCodeAssignment_1(), "rule__PhpBlock__CodeAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			cruise.umple.ui.contentassist.antlr.internal.InternalUmpleParser typedParser = (cruise.umple.ui.contentassist.antlr.internal.InternalUmpleParser) parser;
			typedParser.entryRuleUmpleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public UmpleGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(UmpleGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
