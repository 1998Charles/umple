/*
Preliminary version of "quick build" (i.e. ant -Dmyenv=local -f build.umple.xml codegen umpleParser rtcpp umpleSelf compile packageJars). Produces an umple compiler jar
called GradleUmpleJar 

execute the build using the following Gradle command: gradle cleanUp generateAndCompileParser generateCoupledSource compileCoupledSourceJava packageSource packageUmpleCompilerJar

These tasks can be combined to make the command shorter
*/

buildscript {
    repositories {
        maven {
            url uri('libs')
        }
        //maven {
          //  url "https://plugins.gradle.org/m2/"
        //}
        flatDir dirs: "../umple.gradle/build/libs" //TODO use the plugin portal version once it's finalized
        mavenCentral()
    }
    dependencies {
        classpath files('libs/umple-latest.jar') //TODO replace this hardcoded version number
        classpath "umple.gradle.plugin:UmpleGradlePlugin-0.2.0"
        classpath group: 'com.google.guava', name: 'guava', version: '19.0'
        //classpath "gradle.plugin.cruise.umple:UmpleGradlePlugin:0.1.3"
    }
}

// The root project uses source sets, but it's only in the 
// subprojects that compileUmple is actually called
apply plugin: 'java'
subprojects{ 
    apply plugin: "umple.gradle.plugin"    
}

task generateAndCompileParser << {
    println("Finished generating and compiling UmpleParser")
}

// Meta-task that generates Java files for coupled sub projects
// TODO decouple as many of these projects as possible
// TODO further parallelize this task, perhaps using the -parallel flag?
task generateCoupledSource << {
    println("Finished generating coupled source (all UmpleToTL projects and cruise.umple)")
}

task bleh << {
    
}
bleh.dependsOn(':cruise.umple:compileUmple')

generateCoupledSource.dependsOn(':UmpleToJava:compileUmple', ':UmpleToPhp:compileUmple', ':UmpleToRTCpp:compileUmple', 
                                ':UmpleToRuby:compileUmple', ':UmpleToSql:compileUmple', ':cruise.umple:compileUmple')

generateAndCompileParser.dependsOn(':UmpleParser:compileJava')

task cleanUp << {
    delete "cruise.umple/GradleTest/bin"
    delete "cruise.umple/GradleTest/src-gen-umpletl"
    delete "cruise.umple/GradleTest/src-gen-umple"
    delete "cruise.umple/GradleTest/parserSource"
}

configurations {
    ivy
}

// See ivy.xml for which third-party libraries are required by the various flavours of Umple build
dependencies {
    ivy group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.4' // "core"
    ivy group: 'org.apache.ant', name: 'ant', version: '1.9.6' // "core"
    ivy group: 'junit', name: 'junit', version: '4.12' // "test"
} 

repositories {
    mavenCentral()
}

// What needs to be generated to build the Umple compiler jar? UmpleTo__, UmpleParser, cruise.umple
// Each gets its own build file. Attempt to generate and compile each project individually. If not possible, do together what needs to be grouped together
// Most likely cruise.umple and all the UmpleTL stuff needs to be grouped together. Parser can be done individually
sourceSets {
    coupledSource { 
    }
}
sourceSets.coupledSource.compileClasspath += configurations.ivy // add the ivy dependencies to the classpath before compilation (required by cruise.umple)
println("FASFASFAFSFASF")
sourceSets.coupledSource.compileClasspath += project.files('/cruise.umple/GradleTest/bin') //orig was project
println("FASFASFAFSFASF")
//The folders that need to be compiled then included in the Umple compiler jar
sourceSets.coupledSource.java.srcDirs = ['cruise.umple/GradleTest/src-gen-umple', 'cruise.umple/GradleTest/src-gen-umpletl' , 'dist/libs/vendors/jopt-simple/src/main/java/joptsimple']
//sourceSets.coupledSource.java.srcDirs = ["C:/Users/i_am_/workspace/umple/cruise.umple/GradleTest/src-gen-umple", //"C:/Users/i_am_/workspace/umple/cruise.umple/GradleTest/src-gen-umpletl",  "C:/Users/i_am_/workspace/umple/dist/libs/vendors/jopt-simple/src/main/java/joptsimple"]
//sourceSets.coupledSource.output.classesDir = "C:/Users/i_am_/workspace/umple/cruise.umple/GradleTest/bin" // output .class files here
sourceSets.coupledSource.output.classesDir = '/cruise.umple/GradleTest/bin'

task packageUmpleCompilerJar(type: Jar) {
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    println("Packaging Umple compiler jar")
    from '/cruise.umple/GradleTest/bin'
    baseName = 'GradleUmpleJar'
    into('lib') {
		from configurations.ivy
	}
    manifest {
        attributes 'Main-Class': 'cruise.umple.UmpleConsoleMain',
                   'Class-Path': configurations.ivy,
                   'Built-By': 'Cruise - University of Ottawa'        
    }
}

// grammar and error files also need to be included in the Umple jar
task copyDocs(type: Copy) {
    println("Copying .grammar and .error files required by Umple compiler jar")
    from "C:/Users/i_am_/workspace/umple/cruise.umple/src"
    into 'C:/Users/i_am_/workspace/umple/cruise.umple/GradleTest/bin'
    include '**/*.grammar'
    include '**/*.error'
}


packageUmpleCompilerJar.dependsOn('copyDocs')
